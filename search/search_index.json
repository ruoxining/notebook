{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\ud83c\udfdb\ufe0f Mini Babel Library","text":"<p>La biblioteca de Babel</p> <p>\u300c\u5b87\u5b99\uff08\u522b\u4eba\u7ba1\u5b83\u53eb\u56fe\u4e66\u9986\uff09\u7531\u8bb8\u591a\u516d\u89d2\u5f62\u7684\u56de\u5eca\u7ec4\u6210\uff0c\u6570\u76ee\u4e0d\u80fd\u786e\u5b9a\uff0c\u4e5f\u8bb8\u662f\u65e0\u9650\u7684\u300d  \u2014\u2014 Jorge Luis Borges (1939)</p> <p>\u8fd9\u662f\u6211\u4e3b\u8981\u7528\u4e2d\u6587\u5199\u7684 BLOG\uff0c\u5927\u90e8\u5206\u5185\u5bb9\u662f\u5b66\u4e60\u7b14\u8bb0\u3002\u6211\u7684\u7b14\u8bb0\u4e0d\u591a\uff01\u4ee5\u540e\u4e5f\u4e0d\u4f1a\u591a\u7684(\u4fdd\u8d28\u4e0d\u4fdd\u91cf) \u6b22\u8fce\u6765\u770b\u6211\u7684\u7b14\u8bb0\uff01</p>"},{"location":"#page-table","title":"\u9875\u8868 Page Table","text":"<p>\u5728\u7f51\u4e0a\u627e\u7b14\u8bb0/\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u6211\u7684\u6700\u5927\u611f\u53d7\u4e4b\u4e00\u662f\u867d\u7136\u8d44\u6e90\u5f88\u591a\u5f88\u591a\uff0c\u4f46\u662f\u5e38\u5e38\u4e0d\u77e5\u9053\u67d0\u4e2a\u8d44\u6e90\u6709\u591a\u91cd\u8981\uff0c\u65e0\u6cd5\u8bc4\u4f30\u91cc\u9762\u6db5\u76d6\u4e86\u591a\u5c11\u4e1c\u897f\u4ece\u800c\u4e0d\u77e5\u9053\u8981\u4e0d\u8981\u70b9\u5f00\uff0c\u6216\u8005\u65e0\u6cd5\u4f30\u8ba1\u5728\u671f\u672b\u6709\u9650\u7684\u65f6\u95f4\u91cc\u5e94\u8be5\u82b1\u591a\u5c11\u65f6\u95f4\u590d\u4e60\u67d0\u4e2a\u8d44\u6e90\u3002\u6211\u6b63\u5728\u52aa\u529b\u5728\u8fd9\u91cc\u5efa\u4e00\u4e2a\u5c1a\u80fd\u8bfb\u7684\u8d44\u6e90\u7684 pagetable\uff0c\u4ee5\u9632\u4e0d\u5e78\u7684\u6e38\u5ba2\u4ece\u4fa7\u8fb9\u680f\u6e38\u8d70\u8fdb\u672c\u56fe\u4e66\u9986\u7684\u5783\u573e\u5806\u6f29\u6da1\ud83c\udf00\u3002\u5982\u679c\u6211\u76ee\u524d\u7684\u7b14\u8bb0\u5728\u8fd9\u4e2a\u7ef4\u5ea6\u4e0a\u505a\u5f97\u4e0d\u597d\uff0c\u8bf7\u8054\u7cfb\u6211\u6216\u8005\u5411\u6211\u63d0 issue \u50ac\u6211\u6539 \u8c22\u8c22\uff01</p> \ufe0f\ud83d\udcd8 \ufe0f\ud83d\udcd6 \ud83e\uddea \ud83d\udd17 \u5b8c\u6210\u5ea6\u4e0d\u9ad8\uff0c\u5f03\u5751\u6216\u5728\u5199\uff0c\u4e0d\u63a8\u8350\u9605\u8bfb \uff08\u7279\u6307\u7406\u8bba\uff09\u5b8c\u6210\u5ea6\u8db3\u591f\u9ad8\uff0c\u53ef\u4ee5\u9605\u8bfb\uff01 \u4ec5\u5b9e\u9a8c\u8d44\u6e90\uff0c\u672a\u5199\u7406\u8bba\u90e8\u5206 \u540c\u7c7b\u4f18\u8d28\u6216\u66f4\u4f18\u8d44\u6e90\u63a8\u8350"},{"location":"#cs-notes","title":"\ud83d\udcbb CS Notes","text":"\u7c7b\u522b \u8bfe.. \u7f16\u7a0b\u8bed\u8a00 \ud83d\udcd8C\u5c16 \ud83d\udcd8C++ \ud83d\udd17\u8bb2\u4e49@\u6684 \ud83d\udcd8Verilog  \ud83d\udd17\u5b9e\u9a8c@\u74dc \ud83d\udd17playground@HDLB \ud83d\udcd8Python \ud83d\udcd6x86\u6c47\u7f16 \u8ba1\u7b97\u673a\u79d1\u5b66 \ud83d\udcd8\u79bb\u6563\u6570\u5b66  \ud83d\udd17\u8bb2\u4e49@Kaleo \ud83d\udcd8FDS \ud83d\udcd8ADS  \ud83d\udd17\u8bb2\u4e49@\u4fee \ud83d\udcd8\u8ba1\u7b97\u7406\u8bba  \ud83d\udd17\u8bb2\u4e49@\u6684 \ufe0f\ud83d\udcd8\u7f16\u8bd1\u539f\u7406 \ud83d\udd17\u8bb2\u4e49@\u6684 \u8f6f\u4ef6 \ud83e\uddeaOS \ud83d\udd17\u8bb2\u4e49@\u4fee \ud83d\udcd8DBMS \ud83d\udcd8\u8ba1\u7f51 \ud83d\udcd8\u8f6f\u5de5 \u786c\u4ef6 \ud83d\udcd8\u6570\u903b  \ud83d\udd17\u8bb2\u4e49@\u4fee \ud83d\udcd8\u8ba1\u6982 \ud83d\udcd8\u8ba1\u7ec4  \ud83d\udd17\u8bb2\u4e49@\u6684&amp;\u4fee \ud83d\udcd6\u4f53\u7cfb"},{"location":"#dl-notes","title":"\ud83c\udf93 DL Notes","text":"\u7c7b\u522b \u8bba\u6587\u7b14\u8bb0.. DL \ud83d\udcd8RL NLP \ud83d\udcd8Explainable NLP \ud83d\udcd8Math Word Problem"},{"location":"#linguistics-notes","title":"\ud83c\udf33 Linguistics Notes","text":"\u7c7b\u522b \u6a21\u5757.. \u8bed\u8a00\u5b66 \ud83d\udcd8\u8bed\u97f3\u5b66 \ud83d\udcd8\u97f3\u7cfb\u5b66 \ud83d\udcd8\u5f62\u6001\u5b66 \ud83d\udcd8\u53e5\u6cd5\u5b66 \ud83d\udd17\u8bb2\u4e49@Kaleo \ud83d\udcd6\u8bed\u4e49\u5b66 \ud83d\udcd6\u8bed\u7528\u5b66 \u7f57\u66fc\u8bed\u65cf \ud83d\udcd8\u6cd5\u8bed \u65e5\u8033\u66fc\u8bed\u65cf \ud83d\udcd8\u5fb7\u8bed \u6c49\u85cf\u8bed\u7cfb \ud83d\udcd8\u65e5\u8bed \u5176\u5b83\u8bed\u8a00 \"\u4e09\u7ea7\u5b66\u79d1\" \ud83d\udcd6\u8bed\u8a00\u54f2\u5b66 \ud83d\udcd8\u5fc3\u7406\u8bed\u8a00\u5b66"},{"location":"#_1","title":"\ud83d\udcad \u8bf4\u778e\u8bdd\u4e86","text":"\u7c7b\u522b \u5e16\u5b50.. \u751f\u5b58\u7ecf\u9a8c.. ZJU\u751f\u5b58\u7ecf\u9a8c.. \ud83d\udcd8\u4ece\u82f1\u4e13\u8f6cCS\u7684\u5fc3\u5f97\u5e16 \u5347\u5b66\u7ecf\u9a8c.. \ud83d\udcd624fall\u7533\u8bf7\u8bb0\u5f55"},{"location":"#_2","title":"\u8d44\u6e90\u6307\u8def","text":"<p>\uff08\u53c8\uff1a\u4e0d\u9519\u7684\u8d44\u6e90\u4f46\u6682\u65f6\u6ca1\u60f3\u597d\u5f52\u7c7b\uff09</p> \u7ad9 \u5b9a\u4f4d\u662f \u672c\u7ad9\uff1a# \u63ba\u6742\u81ea\u5df1\u89c2\u70b9\u7684\u7b14\u8bb0 + \u5fc3\u5f97 \u4ed3\u5e93\uff1a\ud83d\udd17ZJUCourse \u5ba2\u89c2\u901a\u7528\u7684\u4e00\u4e2aZJU\u8bfe\u7a0b\u8d44\u6599\u5de5\u5177\u7bb1 \ud83d\udd17mem \u7684\u5c0f\u7ad9 \u5185\u5bb9\u4e3b\u8981\u662f\u7b97\u6cd5\u7b14\u8bb0 + ZJU \u8bfe\u7a0b\u7b14\u8bb0\u3002\u8c22\u8c22\u7b2c\u4e00\u4f4d\u627e\u6211\u6362\u53cb\u94fe\u7684\u5c0f\u670b\u53cb\uff01\u662f\u5f88\u5389\u5bb3\u7684 OIer \ud83d\udd17\u79d1\u5b66\u7a7a\u95f4 \u82cf\u5251\u6797\u82cf\u795e\u7684 blog\uff0c\u66f4\u65b0\u4e86\u5341\u51e0\u5e74\u4e86\uff0c\u4ef0\u6155"},{"location":"#_3","title":"\u8054\u7cfb\u4f5c\u8005","text":"<p>\ud83d\udceb \u90ae\u7bb1 | \ud83e\uddd1\u200d\ud83d\udcbb \u4e3b\u9875</p>"},{"location":"CS/","title":"\u7d22\u5f15","text":"<p>\u672c\u7ae0\u8282\u5305\u62ec\u8ba1\u7b97\u673a\u79d1\u5b66\u7b14\u8bb0</p> <p></p>"},{"location":"CS/libgraphics/","title":"C\u5927\u7a0b libgraphics \u6587\u6863 \u4f7f\u7528\u8bb0\u5f55","text":"<p>\u26a0\ufe0f \u6ca1\u5199\u5b8c TODO</p>"},{"location":"CS/libgraphics/#_1","title":"\u5df2\u77e5\u95ee\u9898","text":"<ul> <li>\u53ea\u80fd\u4e0ewindows\u7cfb\u7edf\u4e2d\u7684dec++\u6216vs\u517c\u5bb9\u3002windows\u865a\u62df\u673a\u4e0d\u884c\u3002</li> </ul>"},{"location":"CS/libgraphics/#devc","title":"DevC++\u56fe\u5f62\u7f16\u7a0b\u8fc7\u7a0b","text":"<ul> <li>\u4f7f\u7528\u5df2\u6709\u7684\u5de5\u7a0b\u76f4\u63a5\u6253\u5f00</li> <li>\u65b0\u5efa\u6587\u4ef6\u65b9\u6cd5\uff1a<ul> <li>\u2192\u65b0\u5efa</li> <li>\u2192\u9009\u62e9\u52a0\u5165\u5f53\u524d\u5de5\u7a0b</li> <li> <p>\u2192\u4fee\u6539Makefile.win\uff0c\u5728\u672b\u5c3e\u52a0\u5165\uff08\u81ea\u5df1\u5b9e\u8df5\u7684\u65f6\u5019\u8fd9\u6b65\u4e0d\u52a0\u597d\u50cf\u4e5f\u884c\uff09</p> <pre><code>gratest1.o:gratest1.c\n$(CC) -c gratest1.c -o gratest1.o $(CFLAGS)\n</code></pre> </li> </ul> </li> </ul>"},{"location":"CS/libgraphics/#_2","title":"\u51fd\u6570\u5e93","text":"<p>graphics.h \u4ec5\u63d0\u4f9b\u4ee5\u4e0b\u5c11\u91cf\u753b\u56fe\u51fd\u6570\u63a5\u53e3</p> <pre><code>InitGraphics();\nMovePen(x, y);\nDrawLine(dx, dy);\nDrawArc(r, start, sweep);\nGetWindowWidth();\nGetWindowHeight();\nGetCurrentX();\nGetCurrentY();\n</code></pre> <p>\u6211\u4eec\u5c06\u5728\u4e0b\u9762\u4ecb\u7ecd\u8fd9\u4e9b\u63a5\u53e3\u7684\u7528\u6cd5\u3002</p>"},{"location":"CS/libgraphics/#_3","title":"\u521d\u59cb\u5316\u64cd\u4f5c","text":"<p>\u5728main.c\u91cc\u9700\u8981\u8fdb\u884c\u5982\u4e0b\u521d\u59cb\u5316</p> <pre><code>#include \"graphics.h\"\n#include \"extragraph.h\"\n#include \"imgui.h\"\nvoid Main()        // \u6ce8\u610f\u8fd9\u91cc\u9700\u8981\u4f7f\u7528\u5927\u5199Main\n{\nSet WindowTitle(\"Your Title\");\nInitGraphics();  // \u8c03\u7528\u4e86\u56fe\u5f62\u6a21\u5f0f\n}\n</code></pre> <p>InitGraphics(); \u8fd9\u4e2a\u51fd\u6570\u4f1a\u6253\u5f00\u4e00\u4e2a\u7a7a\u7684\u56fe\u5f62\u7a97\u53e3\u3002</p>"},{"location":"CS/libgraphics/#_4","title":"\u7a97\u53e3","text":"<p>\u4ee5\u4e0b\u56db\u4e2a\u51fd\u6570\u90fd\u4e0d\u9700\u8981\u4f20\u5165\u53c2\u6570\uff0c\u5206\u522b\u8fd4\u56de\u7a97\u53e3\u5bbd\u3001\u9ad8\uff0c\u5f53\u524dX\u3001Y\u5750\u6807\u3002</p> <pre><code>GetWindowWidth();\nGetWindowHeight();\nGetCurrentX();\nGetCurrentY();\n</code></pre>"},{"location":"CS/libgraphics/#_5","title":"\u597d\u7684\u7f16\u5199\u4e60\u60ef","text":"<p>\u5e94\u8be5\u5148\u5b9a\u4e49\u4e00\u4e9b\u5e38\u91cf\uff0c\u7ed9\u8fd9\u4e9b\u5e38\u91cf\u53d6\u540d\u5b57</p> <pre><code>#define HouseHeight 2.0\n#define HouseWidth 3.0\n#define AtticHeight 0.7\n#define DoorWidth 0.4\n#define DoorKnobRadius 0.03\n#define DoorKnobInset 0.07\n#define PaneHeight 0.25\n#define PaneWidth 0.2\n#define FirstFloorWindows 0.3\n#define SecondFloorWindows 1.25\n</code></pre>"},{"location":"CS/libgraphics/#_6","title":"\u753b\u56fe\u5f62\u7684","text":""},{"location":"CS/libgraphics/#movepen","title":"MovePen","text":"<p>\u5c06\u7b14\u79fb\u52a8\u5230(x, y)\u8be5\u5750\u6807\u3002\u6ce8\u610f\u5f53\u753b\u56fe\u5f62\u65f6\uff0c\u540e\u9762\u51e0\u4e2a\u51fd\u6570\u7684\u76f8\u5bf9\u4f4d\u79fb\uff0c\u90fd\u662f\u76f8\u5bf9\u4e8e\u8fd9\u4e2a\u51fd\u6570\u8bbe\u7f6e\u7684\u7b14\u5750\u6807\u79fb\u52a8\u7684\u3002</p> <pre><code>MovePen(double x, double y);\n</code></pre>"},{"location":"CS/libgraphics/#drawline","title":"DrawLine","text":"<p>\u5728\u753b\u7ebf\u4e4b\u524d\u4e00\u5b9a\u8981MovePen();</p> <pre><code>DrawLine(double dx, double dy);\n</code></pre> <p>\u753b\u7ebf\u7684\u65b9\u5411\uff1a</p> <p>\u6a2a\u5750\u6807\u6700\u5de6\u8fb9\u662f0\uff0c\u5411\u53f3\u589e\u5927</p> <p>\u7eb5\u5750\u6807\u6700\u4e0b\u9762\u662f0\uff0c\u5411\u4e0a\u589e\u5927</p> <p>\u53ef\u4ee5\u7406\u89e3\u4e3a\u6211\u4eec\u5728\u7b2c\u4e00\u8c61\u9650</p>"},{"location":"CS/libgraphics/#drawarc","title":"DrawArc","text":"<p>\u5728\u753b\u5f27\u4e4b\u524d\u4e00\u5b9a\u8981MovePen();</p> <pre><code>DrawArc(double r, double start, double sweep);\n</code></pre>"},{"location":"CS/libgraphics/#_7","title":"\u6211\u4eec\u5e94\u5f53\u628a\u753b\u77e9\u5f62\u5c01\u88c5\u6210\u4e00\u4e2a\u65b0\u7684\u51fd\u6570","text":"<pre><code>void DrawBox (double x, double y, double width, double height)\n{\nMovePen(x, y);\nDrawLine(0, height);\nDrawLine(width, 0);\nDrawLine(0, height);\nDrawLine(-width, 0);\n}\n</code></pre> <pre><code>void DrawCenteredBox(double x, double y, double width, double height)\n{\nDrawBox(w - width/2, y - height/2, width, height);\n}\n</code></pre>"},{"location":"CS/libgraphics/#_8","title":"\u753b\u5706\u7684\u51fd\u6570","text":"<pre><code>void DrawCenteredCircle(double x, double y, double r)\n{\nMovePen(x + r, y);\nDrawArc(r, 0, 360);\n}\n</code></pre>"},{"location":"CS/libgraphics/#_9","title":"\u6587\u5b57","text":"<p>\u4ece\u5f53\u524d\u4f4d\u7f6e\u5f00\u59cb\u8f93\u51fa\u6587\u672c\u4e32</p> <pre><code>DrawTextString(string);\n</code></pre> <p>\u8fd9\u4e2a\u51fd\u6570\u7528\u4e8e\u83b7\u53d6\u67d0\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6</p> <pre><code>double stringLen = TextStringWidth(string); </code></pre>"},{"location":"CS/libgraphics/#_10","title":"\u67e5\u770b\u56de\u8c03\u51fd\u6570\u7c7b\u578b","text":"<pre><code>typedef void(* KeyboardEventCallback)(int key, int event);\n</code></pre>"},{"location":"CS/libgraphics/#_11","title":"\u5b9a\u65f6\u5668","text":""},{"location":"CS/libgraphics/#_12","title":"\u65f6\u95f4\u56de\u8c03\u51fd\u6570","text":"<pre><code>registerTimerEvent(mytimer);  //\u83b7\u53d6\u7535\u8111\u65f6\u949f\u4fe1\u606f\u8fd4\u56de\u7ed9mytimer\nstartTimer(0, (int)(1000/speed));  // \u8981\u8ba8\u8bba\u4f20\u8fdb\u6765\u7684timer\u662f\u4ec0\u4e48\n</code></pre>"},{"location":"CS/libgraphics/#_13","title":"\u5b9a\u65f6\u5668\u6d88\u606f\u56de\u8c03\u51fd\u6570","text":"<pre><code>void TimerEventProcess(int timerID);\n</code></pre> <p>\u793a\u4f8b</p> <pre><code>typedef enum\n{\nLabelTimer,\nBoxTimer,\n} MyTimer;\n</code></pre> <pre><code>void mytimer(int  timerID)\n{\nswitch (timerID)\n{\ncase LabelTimer:\nlabel_x += 0.5;\nif (label_x &gt; 5.0) label_x = 1.0;\ndisplay();\nbreak;\ncase BoxTimer:\nbox_y += 0.5;\nif (box_y &gt; 5.0) box_y = 1.0;\ndisplay();\nbreak;\nbreak;\n}\n}\n</code></pre> <pre><code>registerTimerEvent(mytimer);\nstartTimer(LabelTimer, 100);\nstartTimer(BoxTimer, 200);\n</code></pre>"},{"location":"CS/libgraphics/#_14","title":"\u9f20\u6807","text":""},{"location":"CS/libgraphics/#_15","title":"\u9f20\u6807\u6d88\u606f\u56de\u8c03\u51fd\u6570","text":"<pre><code>void MouseEventProcess(int x, int y, int button, int event);\n</code></pre> <p>x, y - \u4f4d\u7f6e\u5750\u6807</p> <p>button - \u6309\u4e0b\u7684\u662f\u54ea\u4e2a\u952e</p> <p>event - \u6309\u4e0b\uff0c\u677e\u5f00\uff0c\u79fb\u52a8\u7b49\u4e8b\u4ef6</p> <pre><code>void myMouseEvent (int x, int y, int button, int event)\n{\nmouse_x = ScaleXInches(x);   // \u8fd9\u4e2a\u51fd\u6570\u5728extragraph\u5e93\u91cc\nmouse_y = ScaleYInches(y);\ndisplay();\n}\n</code></pre> <p>\u9700\u8981\u5728Main()\u91cc\u6dfb\u52a0\u8fd9\u4e00\u884c</p> <pre><code>registerMouseEvent(myMouseEvent);\n</code></pre> <p>\u5728display()\u91cc</p> <pre><code>void display()\n{\ndouble w = 1.0;\ndouble h = GetFontHeight() * 2;\n// \u6e05\u9664\u5c4f\u5e55\nDisplayClear();\n// draw a square\nSetPenColor(\"Red\");\ndrawLabel(label_x, label_y, \"Lable is Here\");\n//draw a rect/box to trace the mouse\n//drawRectangle(mouse_x, mouse_y, w, h, 0);\nSetPenColor(\"Blue\");\ndrawBox(mouse_x, mouse_y, w, h, 1, \"This box follows the mouse\", 'L', \"Red\");\n}\n</code></pre>"},{"location":"CS/libgraphics/#linkedlist","title":"\u4f7f\u7528linkedlist\u5e93","text":"<pre><code>#include \"linkedlist.h\"\n</code></pre> <p>\u521b\u5efa\u4e00\u4e2a linkedlist \u540d\u53eb g_polylines</p> <pre><code>linkedlistADT g_polylines = NULL;\ng_polylines = NewLinkedList();\ndisplay();\n</code></pre> <pre><code>void display()\n{\nlinkedlistADT poly = NextNode(g_polylines, g_polylines);\nSetPenColor(\"Blue\");\nif (poly) {\nPoint * p = (Point*) NodeObj(g_polylines, poly);\ndouble lx = p-&gt;x;\ndouble ly = p-&gt;y;\nMovePen(lx, ly);\nwhile (poly = NextNode(g_polylines, poly))\n{\np = (Point*) NodeObj(g_polylines, poly);\nDrawLine(p-&gt;x - lx, p-&gt;y - ly);\nlx = p-&gt;x;\nly = p-&gt;y;\n}\n}\n}\n</code></pre>"},{"location":"CS/libgraphics/#button","title":"\u4f7f\u7528button\u548c\u952e\u76d8","text":"<p>\u8fd9\u6b21\u9700\u8981\u7528\u5230\u7684\u5e93</p> <pre><code>#include &lt;windows.h&gt;\n#include &lt;winuser.h&gt;\n#include \"graphics.h\"\n#include \"extgraph.h\"\n#include \"imgui.h\"\n#include \"linkedlist.h\"\n</code></pre>"},{"location":"CS/libgraphics/#_16","title":"\u5b57\u7b26\u8f93\u5165\u56de\u8c03\u51fd\u6570","text":"<pre><code>void charEventProcess(char c);\n</code></pre> <p>c - \u8f93\u5165\u5b57\u7b26\u7684ASCII\u7801</p>"},{"location":"CS/libgraphics/#_17","title":"\u952e\u76d8\u56de\u8c03\u51fd\u6570","text":"<pre><code>void KeyboardEventProcess(int key, int event);\n</code></pre> <p>key - \u54ea\u4e2a\u952e</p> <p>event - \u6309\u4e0b\u8fd8\u662f\u677e\u5f00</p> <p>\u793a\u4f8b</p> <p>\u5728Main()\u4e2d</p> <pre><code>\n</code></pre> <pre><code>void myKeyboardEvent(int key, int event)\n{\nuiGetKeyboard(key, event); // needed for using simpleGUI\ndisplay();\nswitch (event)\n{\ncase KEY_UP:\nif (key == VK_F1)\ng_add_point = !g_add_point;\nbreak;\ndefault:\nbreak;\n}\n}\n</code></pre>"},{"location":"CS/libgraphics/#_18","title":"\u989c\u8272\u5e93","text":"<p>\u81ea\u5e26\u7684\u989c\u8272\u5217\u8868</p> <pre><code>char colorlist[100][100] = {\u201dBlack\u201d, \u201cDark Gray\u201d, \u201cGray\u201d, \u201cLight Gary\u201d, \u201cWhite\u201d, \u201cBrown\u201d, \u201cRed\u201d, \u201cOrange\u201d, \u201cYellow\u201d, \u201cGreen\u201d, \u201cBlue\u201d, \u201cViolet\u201d, \u201cMagenta\u201d, \u201cCyan\u201d};\nconst int colorNumber = 14;\n</code></pre> <p>\u81ea\u5b9a\u4e49\u989c\u8272</p> <p>\u989c\u8272\u4f1a\u88ab\u52a0\u5165\u989c\u8272\u5e93\uff0cRGB\u7684\u53d6\u503c\u8303\u56f4\u90fd\u662f[0, 1]\u800c\u4e0d\u662f[0, 256)</p> <pre><code>DefineColor(\"Color Name\", R, G, B);\n</code></pre>"},{"location":"CS/libgraphics/#libgraphics","title":"libgraphics\u5176\u5b83\u5e38\u7528\u7684\u4e1c\u897f","text":""},{"location":"CS/x86assm/","title":"x86\u6c47\u7f16","text":""},{"location":"CS/x86assm/#lab","title":"Lab\u8bb0\u5f55","text":"<p>Failure</p> <p>Lab\u5df2\u7ecf\u5168\u90e8\u6362\u6389\uff0c\u8fd9\u90e8\u5206\u4f5c\u4e1a\u4ecb\u7ecd\u65e0\u6cd5\u53c2\u8003\u4e86\u3002</p> <ul> <li> <p>\u4f5c\u4e1a1: \u5b57\u7b26\u4e32\u8f6c\u6362</p> <p>\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5c0f\u5199\u5b57\u6bcd\u5168\u90e8\u8f6c\u6362\u4e3a\u5927\u5199\u5b57\u6bcd\uff0c\u5220\u9664\u7a7a\u683c\u540e\u8f93\u51fa\u3002</p> <p>\u8bb0\u5f97\u4ed6\u6709\u5b57\u7b26\u4e32\u8bfb\u5199\u7684\u6e90\u4ee3\u7801\u3002</p> </li> <li> <p>\u4f5c\u4e1a2: \u6253\u5370ASCII\u7801\u8868</p> <p>\u8fdb\u5165\u56fe\u5f62\u6a21\u5f0f\uff0c\u8f93\u51fa\u7ea2\u7684ascii\u7801\u548c\u7eff\u7684\u76f8\u5e94\u5341\u516d\u8fdb\u5236\u7f16\u53f7\u3002</p> <p>\u4e2a\u4eba\u611f\u89c9\u5148\u628a\u4f4d\u79fb\u5199\u51fa\u6765\u518d\u586b\u91cc\u9762\u7684\u8f93\u51fa\u6bd4\u8f83\u597d\u5f04\u3002</p> <p>\u53ef\u4ee5\u53c2\u7167\u4ed6\u7684\u6570\u5b57\u7528\u5faa\u73af\u5de6\u79fb\u8f93\u51fa\u6210\u5341\u516d\u8fdb\u5236\u4ee3\u7801\u3002</p> </li> <li> <p>\u4f5c\u4e1a3: \u7b80\u6613\u8ba1\u7b97\u5668</p> <p>\u6574\u4f53\u601d\u8def\uff1a80386\u8bed\u6cd5\u5199\uff0c\u5185\u5bb9\u90fd\u5b58\u5728\u5185\u5b58\u53d8\u91cf\u91cc</p> <p>\u52a0\u6cd5\u601d\u8def\uff1a\u9ad8\u4f4d\u52a0\u9ad8\u4f4d\uff0c\u4f4e\u4f4d\u52a0\u4f4e\u4f4d</p> <p>\u4e58\u6cd5\u601d\u8def\uff1a\u5206\u522b\u4e58\u4f4e\u4f4d\u548c\u9ad8\u4f4d\uff0c\u9ad8\u4f4d\u7ed3\u679c\u52a0\u8fdb\u4f4d</p> <p>\u9664\u6cd5\u601d\u8def\uff1a\u5206\u522b\u9664\u9ad8\u4f4d\u548c\u4f4e\u4f4d\uff0c\u3002\u3002\u540e\u9762\u5fd8\u4e86</p> <p>\u8f93\u51fa\u5341\u8fdb\u5236\u601d\u8def\uff1a\u9ad8\u4f4d\u4f4e\u4f4d</p> </li> <li> <p>\u4f5c\u4e1a4: C\u4ee3\u7801\u6587\u4ef6\u67e5\u770b\u5668\u7ffb\u8bd1\u6210\u6c47\u7f16</p> <p>\u4ed6\u4f1a\u7ed9\u4e00\u4e2ac\u6e90\u4ee3\u7801\uff0c\u7528c\u548c\u6c47\u7f16\u5939\u5fc3\u8c03\u8bd5\u628ac\u7ffb\u8bd1\u6210\u6c47\u7f16\u3002</p> <p>\u903b\u8f91\u7684\u601d\u8def\uff1a</p> <p>\u5bc4\u5b58\u5668\u72b6\u6001\u4fdd\u5b58 + \u521d\u59cb\u72b6\u6001 + \u5224\u65ad\u7ec8\u6b62 + \u64cd\u4f5c + \u50a8\u5b58 + \u5faa\u73af\u6761\u4ef6 + \u8df3\u8f6c + \u5bc4\u5b58\u5668\u72b6\u6001\u6062\u590d</p> </li> </ul>"},{"location":"CS/x86assm/#6","title":"6\u79cd\u5bfb\u5740\u65b9\u5f0f\u4e0e\u5176\u4f5c\u7528","text":"\u8bf4\u660e \u793a\u4f8b \u4f5c\u7528 \u7acb\u5373\u5bfb\u5740 mov eax,56H \u901a\u5e38\u7528\u4e8e\u8d4b\u503c \u76f4\u63a5\u5bfb\u5740 mov eax,[1255887H] \u901a\u5e38\u7528\u4e8e\u5904\u7406\u53d8\u91cf \u5bc4\u5b58\u5668\u5bfb\u5740 mov eax,[edi] \u5730\u5740\u5728\u5bc4\u5b58\u5668\u4e2d \u5bc4\u5b58\u5668\u76f8\u5bf9\u5bfb\u5740 mov eax,[edi+20H] \u5e38\u7528\u4e8e\u8bbf\u95ee\u6570\u7ec4\u548c\u7ed3\u6784 \u57fa\u5740\u52a0\u53d8\u5740\u5bfb\u5740 mov eax,[EBP+ESI] \u5e38\u7528\u4e8e\u8bbf\u95ee\u6570\u7ec4 \u76f8\u5bf9\u57fa\u5740\u52a0\u53d8\u5740\u5bfb\u5740 mov eax,[EBX+EDI-10H] \u5e38\u7528\u4e8e\u8bbf\u95ee\u7ed3\u6784"},{"location":"CS/x86assm/#obj-dump","title":"obj dump","text":"<p>\u6e90\u4ee3\u7801\u6587\u4ef6\u540dmytest.c</p> <pre><code>gcc -c -g -o mytest mytest.c\nobjdump -s -d main.o &gt; main.o.txt\n</code></pre> <p>\u76ee\u6807\u6587\u4ef6\u53cd\u6c47\u7f16\uff0c\u540c\u65f6\u663e\u793a\u6e90\u4ee3\u7801</p> <pre><code>gcc -g -c -o main.o main.c\nobjdump -S -d main.o &gt; main.o.txt\n</code></pre> <p>\u663e\u793a\u6e90\u4ee3\u7801\u7684\u540c\u65f6\u663e\u793a\u884c\u53f7</p> <pre><code>objdump -j .text -ld -C -S main.o &gt; main.o.txt\n</code></pre> <p>\u53ef\u6267\u884c\u6587\u4ef6\u53cd\u6c47\u7f16</p> <pre><code>gcc -o main main.c\nobjdump -s -d main &gt; main.txt\n</code></pre> <p>\u540c\u65f6\u663e\u793a\u6e90\u4ee3\u7801</p> <pre><code>gcc -g -o main main.c\nobjdump -S -d main &gt; main.txt\n</code></pre>"},{"location":"CS/x86assm/#_1","title":"\u671f\u672b\u8003\u8bd5","text":"<ol> <li>\u662f\u975e\u9898(10\u4e2a\uff0c\u6bcf\u98981\u5206\uff0c\u517110\u5206)</li> <li>\u586b\u7a7a(15\u4e2a\uff0c\u6bcf\u7a7a2\u5206\uff0c\u517130\u5206)\uff1a</li> <li> <p>\u7a0b\u5e8f\u586b\u7a7a\u9898(3\u9898\uff0c\u6bcf\u989810\u5206\uff0c\u517130\u5206)</p> <p>\u4e00\u822c\u90fd\u4f1a\u7528stack\u538b\u5165\u53c2\u6570 \u4f1a\u7ed9\u51fac\u8bed\u8a00\u7684\u539f\u578b\uff08\uff1f\uff0c\u53c2\u6570\u7684\u538b\u5165\u987a\u5e8f\u4ece\u53f3\u5230\u5de6\uff0ccaller\u6e05\u7406 pascal\uff0c\u4ece\u5de6\u5230\u53f3\uff0ccallee\u6e05\u7406 stdcall\uff0c\u4ece\u53f3\u5230\u5de6\uff0ccaller\u6e05\u7406 \u90fd\u7528ax\u8fd4\u56de\u53c2\u6570 \u4e00\u822c\u4e24\u4e2a\u7a7a\u4e0d\u53ef\u4ee5\u4ea4\u6362\u3002\u3002\u3002 \u5148\u81ea\u5df1\u5199\u4e00\u904d\u518d\u586b \uff08\u4e00\u822c20\u51e0\u884c\u7684\u7a0b\u5e8f\uff09</p> </li> <li> <p>\u7a0b\u5e8f\u9605\u8bfb(2\u9898\uff0c\u6bcf\u98985\u5206\uff0c\u517110\u5206)     \u4f1a\u95ee\u8fd0\u884c\u7ed3\u679c\u548c\u4e2d\u95f4\u7ed3\u679c\uff08#\uff09\uff08\u5982\u679c\u6709\u5faa\u73af\uff0c\u6bcf\u6b21\u5faa\u73af\u5230\u90fd\u8981\u5199\uff0c\u4f46\u662f\u4e0d\u4f1a\u592a\u591a\uff09</p> </li> </ol> <p>\u4e0d\u4f1a\u6709\u76f4\u63a5\u624b\u5199\u4e00\u6574\u4e2a\u7a0b\u5e8f\u7684\u9898</p> <p>\u91cd\u70b9\uff1a \u51fd\u6570\u53c2\u6570\u4f20\u9012\uff0c\u5982\u4f55\u6784\u9020\u4e00\u4e2a\u5806\u6808\u6846\u67b6\uff0cebp\u3002\u3002 \u9700\u8981\u770b\u61c2\u662f\u4e0d\u662f\u9012\u5f52\uff0c \u6709\u4e00\u4e2a\u7a0b\u5e8f\u586b\u7a7a\u4f1a\u51fa\u5355\u6b65\u8c03\u8bd5\uff0c\u8fb9\u89e3\u5bc6\u8fb9\u52a0\u5bc6\u90a3\u4e2a\u3002\u3002 \u4e0d\u4f1a\u8003\u4fdd\u62a4\u6a21\u5f0f\u3002</p>"},{"location":"CS/x86assm/#_2","title":"\u590d\u4e60","text":""},{"location":"CS/x86assm/#intel-808680386-cpu","title":"Intel 8086/80386 CPU \u529f\u80fd\u7ed3\u6784","text":""},{"location":"CS/x86assm/#_3","title":"\u5de5\u4f5c\u65b9\u5f0f","text":"<ol> <li>\u4ece\u5b58\u50a8\u5668\u4e2d\u53d6\u4e00\u6761\u6307\u4ee4</li> <li>\u5206\u6790\u6307\u4ee4\u7684\u64cd\u4f5c\u7801</li> <li>\u4ece\u5b58\u50a8\u5668\u4e2d\u8bfb\u53d6\u64cd\u4f5c\u6570</li> <li>\u6267\u884c\u6307\u4ee4</li> <li>\u5199\u5165\u7ed3\u679c\u96c6</li> <li>\u56de\u52301</li> </ol> <p>\u8fd0\u7b97\u5668\u8fdb\u884c\u4fe1\u606f\u5904\u7406\uff0c\u5bc4\u5b58\u5668\u8fdb\u884c\u4fe1\u606f\u5b58\u50a8\uff0c\u63a7\u5236\u5668\u63a7\u5236\u5404\u79cd\u5668\u4ef6\u5de5\u4f5c\uff0c\u603b\u7ebf\u8fde\u63a5\u5404\u79cd\u5668\u4ef6\u3002</p>"},{"location":"CS/x86assm/#163280x86-view","title":"16\u4f4d\u548c32\u4f4d\u768480x86\u7684\u533a\u522b - \u64cd\u4f5c\u7cfb\u7edfview","text":"<ul> <li>16\u4f4d\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u4e2d\u65ad\u8c03\u7528\u76f8\u5f53\u4e8e32\u4f4d\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684API\u8c03\u7528\u300216\u4f4d\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u6bb5\u5730\u5740\u548c\u4fbf\u5b9c\u5730\u5740\u572832\u4f4d\u4e2d\u6d88\u5931\u4e86\uff0c\u572832\u4f4d\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7edf\u4e00\u91c7\u7528\u5e73\u5766\u7684\u5185\u5b58\u5730\u5740\u6a21\u5f0f\u5bfb\u5740\u3002</li> <li>16\u4f4d\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u7a0b\u5e8f\u8fd0\u884c\u5728RING0\u7ea7\uff0c\u4e5f\u5c31\u662f\u8bf4\u666e\u901a\u7a0b\u5e8f\u548c\u64cd\u4f5c\u7cfb\u7edf\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u7ea7\u522b\u5e76\u62e5\u6709\u6700\u9ad8\u6743\u9650\uff0c\u800c32\u4f4d\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u7a0b\u5e8f\u4e00\u822c\u53ea\u62e5\u6709RING3\u7ea7\u8fd0\u884c\u6743\u9650\uff0c\u7a0b\u5e8f\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u53d7\u5230\u64cd\u4f5c\u7cfb\u7edf\u63a7\u5236\uff0c\u82e5\u7a0b\u5e8f\u8981\u83b7\u5f97RING0\u64cd\u4f5c\u7279\u6743\uff0c\u53ea\u80fd\u901a\u8fc7\u9a71\u52a8\u7a0b\u5e8f\u5b9e\u73b0\u3002</li> <li>16\u4f4d\u64cd\u4f5c\u7cfb\u7edf\u7684\u53ef\u6267\u884c\u6587\u4ef6\u683c\u5f0f\u548c32\u4f4d\u64cd\u4f5c\u7cfb\u7edf\u7684\u53ef\u6267\u884c\u6587\u4ef6\u683c\u5f0f\u4e0d\u540c\uff0c\u572832\u4f4d\u7684windows\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u53ef\u6267\u884c\u6587\u4ef6\u7684\u683c\u5f0f\u53ebPE\u683c\u5f0f\uff0c32\u4f4d\u7684windows\u64cd\u4f5c\u7cfb\u7edf\u8fd0\u884c\u5728CPU\u7684\u4fdd\u62a4\u6a21\u5f0f\u4e4b\u4e0a\uff0c\u800c16\u4f4d\u7684\u7cfb\u7edf\u5219\u8fd0\u884c\u5728CPU\u7684\u5b9e\u6a21\u5f0f\u4e0a\u3002</li> </ul>"},{"location":"CS/x86assm/#_4","title":"\u903b\u8f91\u5730\u5740\u4e0e\u7269\u7406\u5730\u5740\u8f6c\u6362\uff1a","text":"<p>1234h:0058h \u8f6c\u5316\u6210\u7269\u7406\u5730\u5740=12340h+0058h=12398h \u8865\u7801</p>"},{"location":"CS/x86assm/#_5","title":"\u6807\u5fd7\u4f4d","text":"<p>\u72b6\u6001\u6807\u5fd7\uff1aCF ZF SF OF AF PF \u63a7\u5236\u6807\u5fd7\uff1aDF(direction flags) TF(trace/trap flag) IF(interrupt flag)</p>"},{"location":"CS/x86assm/#_6","title":"\u6570\u636e\u5728\u5185\u5b58\u4e2d\u7684\u5b58\u653e\u89c4\u5f8b\uff1a","text":"<p>\u5c0f\u7aef\u683c\u5f0f\u3002\u4f4e\u5b57\u8282\u5728\u524d\uff0c\u9ad8\u5b57\u8282\u5728\u540e\u3002 \u8bbeds=1000h, bx=2000h, ax=1234h Mov ds:[bx], ax \u6267\u884c\u540e1000:2001\u6307\u5411\u7684\u5b57\u8282=12h</p>"},{"location":"CS/x86assm/#_7","title":"\u5bc4\u5b58\u5668","text":"<p>\u603b\u7ed3</p> \u5bc4\u5b58\u5668 \u7c7b\u522b \u7528\u9014 AX \u6570\u636e\u5bc4\u5b58\u5668 \u7b97\u672f\u8fd0\u7b97\u4e2d\u7684\u4e3b\u8981\u5bc4\u5b58\u5668\uff0c\u5728\u4e58\u9664\u8fd0\u7b97\u4e2d\u7528\u6765\u5236\u5b9a\u88ab\u9664\u6570\uff0c\u4e5f\u662f\u4e58\u9664\u8fd0\u7b97\u540e\u7ed3\u679c\u7684\u9ed8\u8ba4\u5b58\u50a8\u5355\u5143\u3002\u53e6\u5916I/O\u6307\u4ee4\u5747\u4f7f\u7528\u8be5\u5bc4\u5b58\u5668\u4e0eI/O\u8bbe\u5907\u4f20\u9001\u4fe1\u606f\u3002 BX \u6570\u636e\u5bc4\u5b58\u5668 \u6307\u4ee4\u5bfb\u5740\u65f6\u5e38\u7528\u505a\u57fa\u5740\u5bc4\u5b58\u5668\uff0c\u5b58\u5165\u504f\u79fb\u91cf\u6216\u504f\u79fb\u91cf\u7684\u6784\u6210\u6210\u5206 CX \u6570\u636e\u5bc4\u5b58\u5668 \u5728\u5faa\u73af\u6307\u4ee4\u64cd\u4f5c\u6216\u4e32\u5904\u7406\u6307\u4ee4\u4e2d\u9690\u542b\u8ba1\u6570 DX \u6570\u636e\u5bc4\u5b58\u5668 \u5728\u53cc\u5b57\u8282\u957f\u8fd0\u7b97\u4e2d\u4e0eAX\u6784\u621032\u4f4d\u64cd\u4f5c\u6570\uff0cDX\u4e3a\u9ad816\u4f4d\u3002\u5728\u67d0\u4e9bI/O\u6307\u4ee4\u4e2d\uff0cDX\u88ab\u7528\u6765\u5b58\u653e\u7aef\u53e3\u5730\u5740 SP \u6307\u9488\u53ca\u53d8\u5740\u5bc4\u5b58\u5668 \u59cb\u7ec8\u662f\u6808\u9876\u7684\u4f4d\u7f6e\uff0c\u4e0eSS\u5bc4\u5b58\u5668\u4e00\u8d77\u6784\u6210\u6808\u9876\u6570\u636e\u7684\u7269\u7406\u5730\u5740 BP \u6307\u9488\u53ca\u53d8\u5740\u5bc4\u5b58\u5668 \u7cfb\u7edf\u9ed8\u8ba4\u5176\u6307\u5411\u5806\u6808\u4e2d\u67d0\u4e00\u5355\u5143\uff0c\u5373\u63d0\u4f9b\u6808\u4e2d\u8be5\u5355\u5143\u7684\u504f\u79fb\u91cf\u3002\u52a0\u6bb5\u524d\u7f00\u540e\uff0cBP\u53ef\u4f5c\u4e3a\u975e\u5806\u6808\u6bb5\u7684\u5730\u5740\u6307\u9488 SI \u6307\u9488\u53ca\u53d8\u5740\u5bc4\u5b58\u5668 \u4e0eDS\u8054\u7528\uff0c\u6307\u793a\u6570\u636e\u6bb5\u4e2d\u67d0\u64cd\u4f5c\u7684\u504f\u79fb\u91cf\u3002\u5728\u505a\u4e32\u5904\u7406\u65f6\uff0cSI\u6307\u793a\u6e90\u64cd\u4f5c\u6570\u5730\u5740\uff0c\u5e76\u6709\u81ea\u52a8\u589e\u91cf\u548c\u81ea\u52a8\u51cf\u91cf\u7684\u529f\u80fd\u3002\u53d8\u5740\u5bfb\u5740\u65f6\uff0cSI\u4e0e\u67d0\u4e00\u4f4d\u79fb\u91cf\u5171\u540c\u6784\u6210\u64cd\u4f5c\u6570\u7684\u504f\u79fb\u91cf DI \u6307\u9488\u53ca\u53d8\u5740\u5bc4\u5b58\u5668 \u4e0eDS\u8054\u7528\uff0c\u6307\u793a\u6570\u636e\u6bb5\u4e2d\u67d0\u64cd\u4f5c\u6570\u7684\u504f\u79fb\u91cf\uff0c\u6216\u4e0e\u67d0\u4e00\u4f4d\u79fb\u91cf\u5171\u540c\u6784\u6210\u64cd\u4f5c\u6570\u7684\u504f\u79fb\u91cf\uff0c\u4e32\u5904\u7406\u64cd\u4f5c\u65f6\uff0cDI\u6307\u793a\u9644\u52a0\u6bb5\u4e2d\u76ee\u7684\u5730\u5740\uff0c\u5e76\u6709\u81ea\u52a8\u589e\u91cf\u548c\u51cf\u91cf\u7684\u529f\u80fd\u3002 CS \u6bb5\u5bc4\u5b58\u5668 \u5b58\u653e\u5f53\u524d\u7a0b\u5e8f\u7684\u6307\u793a\u4ee3\u7801 DS \u6bb5\u5bc4\u5b58\u5668 \u5b58\u653e\u7a0b\u5e8f\u6240\u8bbe\u8ba1\u7684\u6e90\u6570\u636e\u6216\u7ed3\u679c SS \u6bb5\u5bc4\u5b58\u5668 \u4ee5\u201c\u5148\u5165\u540e\u51fa\u201d\u4e3a\u539f\u5219\u7684\u6570\u636e\u533a ES \u6bb5\u5bc4\u5b58\u5668 \u8f85\u52a9\u6570\u636e\u533a\uff0c\u5b58\u653e\u4e32\u6216\u5176\u5b83\u6570\u636e IP \u63a7\u5236\u5bc4\u5b58\u5668 \u5b83\u59cb\u7ec8\u6307\u5411\u5f53\u524d\u5c06\u8981\u6267\u884c\u6307\u4ee4\u5728\u4ee3\u7801\u6bb5\u4e2d\u7684\u504f\u79fb\u91cf FR \u63a7\u5236\u5bc4\u5b58\u5668 \u63a7\u5236\u6807\u5fd7\u4f4d <p></p> <p></p>"},{"location":"CS/x86assm/#_8","title":"\u901a\u7528\u5bc4\u5b58\u5668","text":"<p>IA-32\u67b6\u6784\u4e2d\u4e00\u5171\u67094\u4e2a32\u4f4d\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u4fdd\u5b58\u4e34\u65f6\u6570\u636e\uff0c\u8fd94\u4e2a\u901a\u7528\u5bc4\u5b58\u5668\u53ef\u4ee5\u5f53\u4f5c16\u4f4d\u7528\uff0c\u4e5f\u53ef\u4ee5\u4f5c8\u4f4d\u7528\u3002</p> <p>AX BX CX DX\uff1a\u6570\u636e\u5bc4\u5b58\u5668\uff0c\u6bcf\u4e2a\u6570\u636e\u5bc4\u5b58\u5668\u90fd\u53ef\u4ee5\u62c6\u6210\u4e24\u4e2a 8 \u4f4d\u5bc4\u5b58\u5668\u72ec\u7acb\u4f7f\u7528\uff0c\u5982 AX \u53ef\u62c6\u5206\u4e3a AH \u548c AL\uff0cBX \u62c6\u5206\u4e3a BH \u548c BL \u7b49\u3002H \u548c L \u5206\u522b\u8868\u793a\u9ad8 8 \u4f4d\u548c\u4f4e 8 \u4f4d\u3002</p> <p>AX(accumulator)\uff1a\u7d2f\u52a0\u5668\u3002\u5728\u4e58\u9664\u6cd5\u8fd0\u7b97\u3001\u4e32\u8fd0\u7b97\u3001 I/O \u6307\u4ee4\u4e2d\u90fd\u4f5c\u4e3a\u4e13\u7528\u5bc4\u5b58\u5668\uff1b BX (base)\uff1a\u57fa\u5740\u5bc4\u5b58\u5668\uff0c\u5e38\u7528\u4e8e\u5b58\u6863\u5185\u5b58\u5730\u5740\u3002</p> <p>CX (count)\uff1a\u8ba1\u6570\u5bc4\u5b58\u5668\u3002\u5e38\u7528\u4e8e\u5b58\u653e\u5faa\u73af\u8bed\u53e5\u7684\u5faa\u73af\u6b21\u6570\uff0c\u5b57\u7b26\u4e32\u64cd\u4f5c\u4e2d\u4e5f\u5e38\u7528\u3002</p> <p>DX (data)\uff1a\u6570\u636e\u5bc4\u5b58\u5668\u3002\u5e38\u5e38\u548cEAX\u4e00\u8d77\u4f7f\u7528\u3002</p>"},{"location":"CS/x86assm/#_9","title":"\u53d8\u5740\u5bc4\u5b58\u5668","text":"<p>\u5b58\u653e\u5728\u53d8\u52a8\u7684\u5185\u5b58\u5730\u5740</p> <p>ESI(source index): \u6e90\u53d8\u5740\u5bc4\u5b58\u5668\uff0c\u901a\u5e38\u5b58\u653e\u8981\u5904\u7406\u7684\u6570\u636e\u7684\u5185\u5b58\u5730\u5740\u3002</p> <p>EDI(destination index)\uff1a\u76ee\u7684\u53d8\u5740\u5bc4\u5b58\u5668\uff0c\u901a\u5e38\u5b58\u653e\u5904\u7406\u540e\u7684\u6570\u636e\u7684\u5185\u5b58\u5730\u5740\u3002</p> <p>ESI\u548cEDI\u5e38\u7528\u6765\u914d\u5408\u4f7f\u7528\u5b8c\u6210\u6570\u636e\u7684\u8d4b\u503c\u64cd\u4f5c</p> <pre><code>rep movs dword ptr[edi], dword ptr[esi];\n</code></pre> <p>\u8fd9\u53e5\u7684\u610f\u601d\u662f\u628aESI\u6307\u5411\u7684\u5185\u5b58\u5730\u5740\u4e2d\u7684\u5185\u5bb9\u590d\u5236\u5230EDI\u6240\u6307\u5411\u7684\u5185\u5b58\u4e2d\uff0c\u6570\u636e\u957f\u5ea6\u5728ECX\u4e2d\u6307\u5b9a\u3002</p>"},{"location":"CS/x86assm/#_10","title":"\u6307\u9488\u5bc4\u5b58\u5668","text":"<p>ESP\uff08stack pointer\uff09\uff1a\u5806\u6808\u6307\u9488\u5bc4\u5b58\u5668\u3002SS\uff1aSP\u6307\u5411\u5806\u6808\u7684\u6808\u9876\uff0c\u56e0\u6b64\u867d\u7136\u662f\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u4f46\u4e0d\u5e94\u968f\u4fbf\u6539\u53d8SP\u7684\u503c\u3002\u4e0d\u53ef\u4ee5\u4f5c\u4e3a\u901a\u7528\u5bc4\u5b58\u5668\u4f7f\u7528\uff0cESP\u5b58\u653e\u5f53\u524d\u5806\u6808\u6808\u9876\u7684\u5730\u5740\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0cESP\u548cEBP\u8054\u5408\u4f7f\u7528\u6765\u8bbf\u95ee\u51fd\u6570\u4e2d\u7684\u53c2\u6570\u548c\u5c40\u90e8\u53d8\u91cf\u3002 EBP\uff08base pointer\uff09\uff1a\u57fa\u5740\u6307\u9488\u5bc4\u5b58\u5668\u3002\u53ef\u4ee5\u4f5c\u4e3a\u901a\u7528\u5bc4\u5b58\u5668\u7528\u4e8e\u5b58\u653e\u64cd\u4f5c\u6570\uff0c\u5e38\u7528\u6765\u4ee3\u66ff\u5806\u6808\u6307\u9488\u8bbf\u95ee\u5806\u6808\u7684\u6570\u636e\u3002 EIP\uff1a\u6307\u4ee4\u6307\u9488\u5bc4\u5b58\u5668\uff0c\u603b\u662f\u6307\u5411\u4e0b\u4e00\u6761\u8981\u6267\u884c\u7684\u6307\u4ee4\u7684\u5730\u5740\u3002 \u5e38\u89c1\u7684\u8bbf\u95ee\u5806\u6808\u6307\u4ee4\uff1a</p> <pre><code>push ebp\nmov ebp, esp\nsub esp, 78\npush esi\npush edi\ncmp dword ptr [ebp+8], 0\n</code></pre> <p>ss\u6808\u6bb5\u5bc4\u5b58\u5668 sp\u6808\u9876\u6307\u9488\u5bc4\u5b58\u5668 bp\u9ed8\u8ba4\u7684\u6808\u5bfb\u5740\u5bc4\u5b58\u5668</p>"},{"location":"CS/x86assm/#_11","title":"\u6807\u5fd7\u5bc4\u5b58\u5668","text":"<p>\u6807\u5fd7\u5bc4\u5b58\u5668EFLAGS\u4e00\u5171\u670932\u4f4d\uff0c\u5728\u8fd932\u4f4d\u4e2d\u5927\u90e8\u5206\u662f\u4fdd\u7559\u7ed9\u7f16\u5199\u64cd\u4f5c\u7cfb\u7edf\u7684\u4eba\u7528\u7684\u3002</p> <p>IP (instruction pointer)\uff1a\u6307\u4ee4\u6307\u9488\u5bc4\u5b58\u5668\u3002\u4ee3\u7801\u6bb5\u5bc4\u5b58\u5668 CS \u548c\u6307\u4ee4\u6307\u9488\u5bc4\u5b58\u5668 IP \u662f 8086CPU \u4e2d\u6700\u5173\u952e\u7684\u4e24\u4e2a\u5bc4\u5b58\u5668\u3002\u5b83\u4eec\u5206\u522b\u7528\u6765\u63d0\u4f9b\u5f53\u524d\u6307\u4ee4\u7684\u6bb5\u5730\u5740\u548c\u504f\u79fb\u5730\u5740\u3002\u5373\u4efb\u610f\u65f6\u523b\uff0c8086CPU \u5c06 CS:IP \u6307\u5411\u7684\u5185\u5bb9\u5f53\u505a\u547d\u4ee4\u6267\u884c\u3002\u6bcf\u6761\u6307\u4ee4\u8fdb\u5165\u6307\u4ee4\u7f13\u51b2\u5668\u540e\u3001\u6267\u884c\u524d\uff0cIP += \u6240\u8bfb\u53d6\u6307\u4ee4\u7684\u957f\u5ea6\uff0c\u4ece\u800c\u6307\u5411\u4e0b\u4e00\u6761\u6307\u4ee4\u3002\u7528\u6237\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee IP \u5bc4\u5b58\u5668\u3002</p> <p>FL (flags)\uff1a\u6807\u5fd7\u5bc4\u5b58\u5668\u3002\u4e0e\u5176\u4ed6\u5bc4\u5b58\u5668\u4e00\u6837\uff0c\u6807\u5fd7\u5bc4\u5b58\u5668\u4e5f\u6709 16 \u4f4d\uff0c\u4f46\u662f\u6807\u5fd7\u5bc4\u5b58\u5668\u53ea\u7528\u5230\u5176\u4e2d\u7684 9 \u4f4d\u3002\u8fd9 9 \u4f4d\u5305\u62ec 6 \u4e2a\u72b6\u6001\u6807\u5fd7\u548c 3 \u4e2a\u63a7\u5236\u6807\u5fd7\uff0c\u53c2\u89c1\u4e0b\u9762\u7684\u201c\u6807\u5fd7\u4f4d\u201d\u3002</p> <p>OF\uff08Overflow Flag\uff09:\u6ea2\u51fa\u6807\u5fd7\uff0c\u6ea2\u51fa\u65f6\u4e3a1\uff0c\u5426\u5219\u7f6e0\u3002\u4e24\u4e2a\u6b63\u6570\u76f8\u52a0\u53d8\u8d1f\uff0c\u6216\u4e24\u4e2a\u8d1f\u6570\u76f8\u52a0\u53d8\u6b63\u4f1a\u6ea2\u51fa\u3002#</p> <p>DF \uff08Direction Flag\uff09:\u65b9\u5411\u6807\u5fd7\uff0c\u5728\u4e32\u5904\u7406\u6307\u4ee4\u4e2d\u63a7\u5236\u4fe1\u606f\u7684\u65b9\u5411\u30020:\u6b63\u65b9\u5411\uff0c1\uff1a\u53cd\u65b9\u5411\u3002cld\uff0cstd\u3002#</p> <p>IF (Interrupt Flag) :\u4e2d\u65ad\u6807\u5fd7\u3002\u7981\u6b62\u4e2d\u65ad0\uff0c\u5141\u8bb8\u4e2d\u65ad1\u3002cli\uff0csti\u3002#</p> <p>AF (Auxiliary carry Flag) :\u8f85\u52a9\u8fdb\u4f4d\u6807\u5fd7\uff0c\u6709\u8fdb\u4f4d\u65f6\u7f6e1\uff0c\u5426\u5219\u7f6e0\u3002</p> <p>ZF (Zero Flag) :\u96f6\u6807\u5fd7\uff0c\u8fd0\u7b97\u7ed3\u6784\u4e3a0\u65f6ZF\u4f4d\u4f4d\u7f6e1\uff0c\u5426\u5219\u7f6e0\u3002</p> <p>SF (Sign Flag):\u7b26\u53f7\u6807\u5fd7\uff0c\u7ed3\u679c\u4e3a\u8d1f\u65f6\u7f6e1\uff0c\u5426\u5219\u7f6e0\u3002#</p> <p>CF (Carry Flag): \u8fdb\u4f4d\u6807\u5fd7\uff0c\u8fdb\u4f4d\u65f6\u7f6e1\uff0c\u5426\u5219\u7f6e0\u3002\u914d\u5957\u7684clc\uff0cstc\u4e24\u6761\u8bbe\u7f6e\u6307\u4ee4\uff1a\u6e05\u9664\u548c\u7f6e1\u3002#</p> <p>PF (Parity Flag): \u5947\u5076\u6807\u5fd7\u3002\u7ed3\u679c\u64cd\u4f5c\u6570\u4e2d1\u7684\u4e2a\u6570\u4e3a\u5076\u6570\u65f6\u7f6e1\uff0c\u5426\u5219\u7f6e0\u3002</p> <p>TF\uff1a\u5355\u6b65\u8c03\u8bd5\u8981\u7528\u3002#</p> <p></p> <p></p> <p>EFLAGS\u662f\u5b9e\u73b0\u6761\u4ef6\u5224\u65ad\u548c\u903b\u8f91\u5224\u65ad\u7684\u4e00\u79cd\u673a\u5236\uff0c\u5728\u6c47\u7f16\u8bed\u8a00\u4e2d\u4e00\u822c\u4e0d\u76f4\u63a5\u8bbf\u95eeEFLAGS\u5bc4\u5b58\u5668\uff0c\u800c\u662f\u901a\u8fc7\u6307\u4ee4\u7684\u64cd\u4f5c\u9690\u542b\u8bbf\u95eeEFLAGS\u5bc4\u5b58\u5668\u3002</p> <pre><code>cmp dword ptr [ebp+8], 0. // \u5f71\u54cd\u6807\u5fd7\u4f4dCF\uff0cZF\uff0cSF\uff0cOF\uff0cAF\u548cPF\nJz 99495898 //\u5982\u679cZF\u7b49\u4e8e1\uff0c\u5219\u8df3\u8f6c\u523000405898 </code></pre>"},{"location":"CS/x86assm/#_12","title":"\u6307\u4ee4","text":"<p>\u603b\u7ed3</p> \u6307\u4ee4 \u4f5c\u7528 \u53c2\u6570 \u6539\u53d8\u6807\u5fd7\u4f4d mov \u8d4b\u503c \u88ab\u8d4b\u503c\u5bc4\u5b58\u5668\uff0c\u3010\u5bc4\u5b58\u5668\uff0c\u5185\u5b58\uff0c\u503c\u3011 no xchg \u6570\u636e\u4ea4\u6362 \u3010\u5bc4\u5b58\u5668\uff0c\u5185\u5b58\u3011\uff0c\u3010\u5bc4\u5b58\u5668\uff0c\u5185\u5b58\u3011 no push \u8fdb\u6808 \u6e90\u64cd\u4f5c\u6570\u3010\u5bc4\u5b58\u5668\u3011 pop \u51fa\u6808 \u76ee\u7684\u64cd\u4f5c\u6570\u3010\u5bc4\u5b58\u5668\u3011 pushf \u6807\u5fd7\u4f4d\u8fdb\u6808 \u65e0 popf \u6807\u5fd7\u4f4d\u51fa\u6808 \u65e0 lea Load effect address\uff0c\u5bfb\u5740\uff0c\u53d6\u504f\u79fb\u5730\u5740 lds \u5f53\u6307\u4ee4\u6307\u5b9a\u7684\u662f16\u4f4d\u5bc4\u5b58\u5668\u65f6\uff0c\u628a\u6e90\u64cd\u4f5c\u6570\u5b58\u50a8\u5355\u5143\u4e2d\u5b58\u653e\u7684\u5341\u516d\u4f4d\u504f\u79fb\u5730\u5740\u53d6\u51fa\u5b58\u653e\u5728\u5bc4\u5b58\u5668\u4e2d\uff0c\u7136\u540e\u628a\u6e90\u64cd\u4f5c\u6570+2\u7684\u5341\u516d\u4f4d\u6570\u88c5\u5165\u6307\u4ee4\u6307\u5b9a\u7684\u6bb5\u5bc4\u5b58\u5668\u3002\u5f53\u6307\u4ee4\u6307\u5b9a\u7684\u662f32\u4f4d\u5bc4\u5b58\u5668\u65f6 \u628a\u6e90\u64cd\u4f5c\u6570\u5b58\u50a8\u5355\u5143\u4e2d\u5b58\u653e\u768432\u4f4d\u504f\u79fb\u5730\u5740\u88c5\u5165\u5bc4\u5b58\u5668 \u7136\u540e\u628a \u6e90\u64cd\u4f5c\u6570+4 \u768416\u4f4d\u6570\u88c5\u5165\u6bb5\u5bc4\u5b58\u5668\u3002mem\u6307\u5411\u7684\u5730\u5740,\u9ad8\u4f4d\u5b58\u653e\u5728DS\u4e2d,\u4f4e\u4f4d\u5b58\u653e\u5728reg\u4e2d. LDS reg,mem les \u628a\u5185\u5b58\u4e2d\u6307\u5b9a\u4f4d\u7f6e\u7684\u53cc\u5b57\u64cd\u4f5c\u6570\u7684\u4f4e\u4f4d\u5b57\u88c5\u5165\u6307\u4ee4\u4e2d\u6307\u5b9a\u7684\u5bc4\u5b58\u5668\u3001\u9ad8\u4f4d\u5b57\u88c5\u5165ES\u5bc4\u5b58\u5668\u3002 cbw 8\u4f4d\u6570\u6269\u5c55\u4e3a16\u4f4d\u6570\uff0c\u6709\u7b26\u53f7\u6269\u5145 no cwd \u5b57(16\u4f4d)\u6269\u5c55\u4e3a\u53cc\u5b57(32\u4f4d)\uff0c\u6709\u7b26\u53f7\uff1f no add \u52a0 OPRDS\uff0cOPRDD adc \u5e26\u8fdb\u4f4d\u52a0\uff08\u7ed3\u679c\u542b\u6807\u5fd7\u4f4dCF\u7684\u503c\uff0c=OPRDS\uff0bOPRDD\uff0bCF\uff09 OPRDS\uff0cOPRDD sub \u51cf OPRDD\uff0cOPRDS sbb \u5e26\u8fdb\u4f4d\u51cf\uff08\u7ed3\u679c\u542b\u6807\u5fd7\u4f4dCF\u7684\u503c\uff0c=OPRDD\uff0dOPRDS\uff0dCF\uff09 OPRDD\uff0cOPRDS inc \u81ea\u589e1 \u5bc4\u5b58\u5668 dec \u81ea\u51cf1 \u5bc4\u5b58\u5668 mul 32\u4f4d\uff1a\u88ab\u4e58\u6570\u9ed8\u8ba4\u4e3aEAX\uff0c\u90a3\u4e48\u4e58\u79ef\u5c06\u5b58\u653e\u5728EDX\uff1aEAX\u4e2d 32\u4f4d\u4e58\u6570 16\u4f4d\uff1a\u88ab\u4e58\u6570\u9ed8\u8ba4\u4e3aAX\u90a3\u4e48\u4e58\u79ef\u5c06\u653e\u5728DX\uff1aAX\u4e2di 16\u4f4d\u4e58\u6570 8\u4f4d\uff1a\u88ab\u4e58\u6570\u9ed8\u8ba4\u4e3aAL\uff0c\u90a3\u4e48\u4e58\u79ef\u5c06\u653e\u5728AX 8\u4f4d\u4e58\u6570 div 32\u4f4d\uff1a\u88ab\u9664\u6570\u5c06\u662fEDX\uff1aEAX\uff0c \u6700\u7ec8\u7684\u5546\u5c06\u5b58\u653e\u5728EAX\uff0c \u4f59\u6570\u5c06\u5b58\u653e\u5728EDX\u4e2d 32\u4f4d\u4e58\u6570 16\u4f4d\uff1a\u88ab\u9664\u6570\u4e3aEAX\uff0c\u6700\u7ec8\u5f97\u5230\u7684\u5546\u653e\u5728AX\uff0c\u4f59\u6570\u653e\u5728EAX\u7684\u9ad816\u4f4d 16\u4f4d\u4e58\u6570 8\u4f4d\uff1a\u88ab\u9664\u6570\u662f16\u4f4d\uff0c\u6700\u7ec8\u5f97\u5230\u7684\u5546\u5c06\u653e\u5728AL\u4e2d\uff0c\u4f59\u6570\u653e\u5728AH\u4e2d 8\u4f4d\u4e58\u6570 imul \u65e0\u7b26\u53f7\u4e58 idiv \u65e0\u7b26\u53f7\u9664 xlat \u6362\u7801\u6307\u4ee4\uff0c\u4ee5bx\u4e3a\u9996\u5730\u5740\u7684\uff0c\u504f\u79fb\u5730\u5740\u4e3aal\u7684\u5185\u5bb9\u9001\u7ed9al\u3002 in \u7aef\u53e3\u8bfb\u5199\u6307\u4ee4 IN AL,21H\uff1b\u8868\u793a\u4ece21H\u7aef\u53e3\u8bfb\u53d6\u4e00\u5b57\u8282\u6570\u636e\u5230AL out \u7aef\u53e3\u8bfb\u5199\u6307\u4ee4 and \u6309\u4f4d\u4e0e or \u6309\u4f4d\u6216 xor \u6309\u4f4d\u5f02\u6216 not \u64cd\u4f5c\u6570\u6309\u4f4d\u53d6\u53cd neg \u64cd\u4f5c\u6570\u6309\u4f4d\u53d6\u53cd\u52a0\u4e00 test \u5bf9\u4e24\u4e2a\u64cd\u4f5c\u6570\u8fdb\u884c\u6309\u4f4d\u4e0e\u64cd\u4f5c\u3002\u4e0eand\u4e0d\u540c\uff0c\u4e0d\u5f71\u54cd\u76ee\u6807\u64cd\u4f5c\u6570\u7684\u503c\u3002 shl \u903b\u8f91\u5de6\u79fb\uff0c\u5c06\u4e00\u4e2a\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u6216\u5355\u5143\u4e2d\u7684\u6570\u636e\u5411\u5de6\u79fb\u4f4d\uff0c\u5c06\u6700\u540e\u79fb\u51fa\u7684\u4e00\u4f4d\u5199\u5165cf\u4e2d\u3002\u6700\u4f4e\u4f4d\u75280\u8865\u5145\u3002 shr \u903b\u8f91\u53f3\u79fb\uff0c\u5c06\u4e00\u4e2a\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u6216\u5355\u5143\u4e2d\u7684\u6570\u636e\u5411\u5de6\u79fb\u4f4d\uff0c\u5c06\u6700\u540e\u79fb\u51fa\u7684\u4e00\u4f4d\u5199\u5165cf\u4e2d\u3002\u6700\u9ad8\u4f4d\u75280\u8865\u5145\u3002 sal \u7b97\u672f\u5de6\u79fb\uff0c\u4e0eshl\u4e00\u6837\uff0c\u88650 sar \u7b97\u672f\u53f3\u79fb\uff0c\u4e0eshr\u4e0d\u4e00\u6837\uff0c\u7b97\u672f\u53f3\u79fb\u8865\u6700\u9ad8\u4f4d rol \u5faa\u73af\u5de6\u79fb ror \u5faa\u73af\u53f3\u79fb rcl \u5e26\u8fdb\u4f4d\u5faa\u73af\u5de6\u79fb\uff0c\u5de6\u79fb\u7684\u65f6\u5019\u79fb\u51fa\u53bb\u7684\u4f1a\u653e\u5728cf\uff1f rcr \u5e26\u8fdb\u4f4d\u5faa\u73af\u53f3\u79fb cmp \u6bd4\u8f83 ja jump if above jb Jump if below jae Jump if above or equal jbe Jump if below or equal jg jump if greater\uff0c\u6709\u7b26\u53f7\u5927\u4e8e\u8df3\u8f6c jl jump less\uff0c\u6709\u7b26\u53f7\u5c0f\u4e8e\u8df3\u8f6c jge jump if greater or equal jle Jump if less or equal jc jump if with carry, CF = 1 jnc jump if not with carry, CF = 0 je = jz jump if equal, ZF = 1 jne = jnz jump if not equal, ZF = 0 jz jump if zero, ZF = 1 jnz jump if not zero, ZF = 0 jcxz jump if cx equals zero js SF = 1 jns SF = 0 jo Jump if overflow, OF = 1 jno jump if not overflow, OF = 0 loop \u5faa\u73af \u4ee3\u7801\u6bb5\uff08\uff1f\uff09\u540d clc clear carry flag\uff0c\u5c06cf\u4f4d\u6e05\u96f6 stc set carry flag\uff0cCF\u7f6e1 cli clear interrupt endable flag\uff0cIF\u6e05\u96f6\uff0c\u5173\u95ed\u4e2d\u65ad sti set interrupt endable flag\uff0cIF\u7f6e\u4f4d1\uff0c\u6253\u5f00\u4e2d\u65ad CMC complement carry flag\uff0cCF\u53d6\u53cd CLD clear direction flag\uff0cDF\u6e05\u96f6 STD set interrupt endable flag\uff0cDF\u7f6e1 call \u8fd1\u8c03\u7528 ret \u8fd1\u8fd4\u56de call far ptr \u8fdc\u8c03\u7528\u3002\u4e09\u4e2apush\u4e00\u4e2ajmp\u3002push f\uff0cpush cs\uff0cpush ip\uff0cjump retf \u8fdc\u8fd4\u56de\u3002\u4e09\u4e2apop\u3002\u6307\u4ee4\u2f64\u6808\u4e2d\u7684\u6570\u636e\uff0c\u4fee\u6539CS\u548cIP\u7684\u5185\u5bb9\uff0c\u4ece\u2f7d\u5b9e\u73b0\u8fdc\u8f6c\u79fb int \u4e2d\u65ad\u6307\u4ee4 iret \u4e2d\u65ad\u8fd4\u56de jmp short \u6bb5\u5185\u77ed\u8f6c\u79fb\uff0c\u77ed\u662f\u6307\u8981\u8df3\u2f84\u7684\u2f6c\u6807\u5730\u5740\u4e0e\u5f53\u524d\u5730\u5740\u524d\u540e\u76f8\u5dee\u4e0d\u8d85\u8fc7128\u5b57\u8282 jmp near ptr \u6bb5\u5185\u8fd1\u8f6c\u79fb\u3002\u8fd1\u662f\u6307\u8df3\u8f6c\u7684\u2f6c\u6807\u5730\u5740\u4e0e\u5f53\u524d\u5730\u5740\u5728\u2f64\u2f00\u4e2a\u6bb5\u5185\uff0c\u5373CS\u7684\u503c\u4e0d\u53d8\uff0c\u53ea\u6539\u53d8EIP\u7684\u503c jmp far ptr \u6bb5\u95f4\u8f6c\u79fb\uff0c\u8fdc\u6307\u8df3\u5230\u53e6\u2f00\u4e2a\u4ee3\u7801\u6bb5\u53bb\u6267\u2f8f\uff0cCS/EIP\u90fd\u8981\u6539\u53d8 Jmp dword ptr \u6bb5\u95f4\u8f6c\u79fb\uff0c\u4ee5\u5185\u5b58\u5730\u5740\u5355\u5143\u5904\u7684\u53cc\u5b57\u6765\u4fee\u6539\u6307\u4ee4\uff0c\u2fbc\u5730\u5740\u5185\u5bb9\u4fee\u6539CS\uff0c\u4f4e\u5730\u5740\u5185\u5bb9 \u4fee\u6539IP\uff0c\u5185\u5b58\u5730\u5740\u53ef\u4ee5\u4ee5\u4efb\u4f55\u5408\u6cd5\u7684\u2f45\u5f0f\u7ed9\u51fa repe/renpe scasb \u5b57\u7b26\u4e32\u626b\u63cf\u6307\u4ee4\u3002cmp al, es:[di] di++; \u5f53DF=1\u65f6\uff0c\u4e3adi-- repne:\u5f53ECX!=0\u5e76\u4e14ZF==0\u65f6 \u91cd\u590d repe: cx != 0\u4e14zf != 0\u91cd\u590d repe/renpe cmpsb \u5b57\u7b26\u4e32\u6bd4\u8f83\u6307\u4ee4\u3002\u2f50\u8f83byte ptr ds:[si]\u4e0ebyte ptr es:[di] \u5f53DF=0\u65f6\uff0cSI++\uff0cDI++ \u5f53DF=1\u65f6\uff0cSI--\uff0cDI-- repne:\u5f53ECX!=0\u5e76\u4e14ZF==0\u65f6 \u91cd\u590d repe: cx != 0\u4e14zf != 0\u91cd\u590d rep movsb \u5b57\u7b26\u4e32\u79fb\u52a8\u6307\u4ee4\u3002\u5176\u4e2drep\u8868\u793arepeat\uff0cs\u8868\u793astring\uff0cb\u8868\u793abyte \u5728\u6267\u2f8f\u6b64\u6307\u4ee4\u524d\u8981\u505a\u4ee5\u4e0b\u51c6\u5907\u2f2f\u4f5c\uff1a \u2460ds:si lodsb \u5757\u88c5\u5165\u6307\u4ee4\uff0c\u628aSI\u6307\u5411\u7684\u5b58\u50a8\u5355\u5143\u8bfb\u5165\u7d2f\u52a0\u5668\uff0clodsb\u5c31\u8bfb\u5165ax\uff0clodsw\u5c31\u8bfb\u5165ax\uff0c\u7136\u540esi\u81ea\u52a8\u589e\u52a0\u6216\u51cf\u5c0f1\u62162 stosb/stosw/stosd SI\u6307\u5411\u7684\ud83d\udd17,\u5176\u4e2dLODSB\u662f\u8bfb\u5165AL, LODSW\u662f\u8bfb\u5165AX\u4e2d, \u7136\u540eSI\u81ea\u52a8\u589e\u52a0\u6216\u51cf\u5c0f1\u62162\u4f4d.\u5f53\u65b9\u5411\u6807\u5fd7\u4f4dDF=0\u65f6\uff0c\u5219SI\u81ea\u52a8\u589e\u52a0\uff1bDF=1\u65f6\uff0cSI\u81ea\u52a8\u51cf\u5c0f\u3002 rep stosb lodsb"},{"location":"CS/x86assm/#_13","title":"\u6570\u636e\u4f20\u9001\u6307\u4ee4","text":"<p>\u6570\u636e\u4f20\u9001\u6307\u4ee4\u662f\u4e3a\u4e86\u5b9e\u73b0CPU\u548c\u5185\u5b58\uff0c\u8f93\u5165\u548c\u8f93\u51fa\u7aef\u53e3\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u9001\u3002</p> <p>mov</p> <pre><code>mov eax, 56 // \u5c0656H\u4f20\u9001\u5230eax\u5bc4\u5b58\u5668\nmov esi, dword ptr [eax * 2 + 1]  // \u5c06\u5185\u5b58\u5730\u5740\u4e3aeax*2+1\u76844\u5b57\u8282\u6570\u636e\u4f20\u9001\u5230esi\u5bc4\u5b58\u5668\nmov ah, byte ptr [esi * 2 + eax]  // \u5c06\u5185\u5b58\u5730\u5740\u4e3aesi*+eax\u5904\u76848\u4f4d\u6570\u636e\u4f20\u9001\u5230AH\u5bc4\u5b58\u5668\n</code></pre> <p>xchg</p> <p>\u5bc4\u5b58\u5668\u548c\u5185\u5b58\u7684\u6570\u636e\u4ea4\u6362\uff0c\u4ea4\u6362\u7684\u6570\u636e\u53ef\u4ee5\u662f8\u5b57\u8282\u300116\u5b57\u8282\u621632\u5b57\u8282\uff0c\u5fc5\u987b\u683c\u5f0f\u76f8\u540c</p> <pre><code>xchg eax, edx; // \u5c06edx\u5bc4\u5b58\u5668\u7684\u503c\u548ceax\u5bc4\u5b58\u5668\u7684\u503c\u4ea4\u6362\nxchg [esp-55], edi; // \u5c06edi\u5bc4\u5b58\u5668\u7684\u503c\u548c\u5806\u6808\u5730\u5740\u4e3a[esp-55]\u5904\u7684\u503c\u4ea4\u6362\n</code></pre> <p>push pop</p> <p>push\u548cpop\uff1a\u79f0\u4e3a\u538b\u5165\u5806\u6808\u6307\u4ee4\u548c\u5f39\u51fa\u5806\u6808\u6307\u4ee4\uff0c\u683c\u5f0f\u662fpush src(\u6e90\u64cd\u4f5c\u6570)\u548cpop dst(\u76ee\u7684\u64cd\u4f5c\u6570)\uff0cpush\u6307\u4ee4\u548cpop\u6307\u4ee4\u9700\u8981\u5339\u914d\u51fa\u73b0\uff0c\u5426\u5219\u5806\u6808\u4f1a\u4e0d\u5e73\u8861\u3002push\u6307\u4ee4\u5c06\u539f\u64cd\u4f5c\u6570src\u538b\u5165\u5806\u6808\uff0c\u540c\u65f6esp-4\uff08\u6808\u9876\u6307\u9488\u51cf\u4e00\u4e2a4\u4f4d\uff09\uff0c\u800cpop\u53cd\u4e4b\uff0c\u4ece\u5806\u6808\u7684\u9876\u90e8\u5f39\u51fa4\u5b57\u8282\u7684\u6570\u503c\u7136\u540e\u653e\u5165dst\u3002\u572832\u4f4d\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0cpush\u548cpop\u7684\u64cd\u4f5c\u662f\u4ee54\u5b57\u8282\u4e3a\u5355\u4f4d\u7684\uff0cpush\u548cpop\u6307\u4ee4\u5e38\u7528\u4e8e\u5411\u51fd\u6570\u4f20\u53c2\u3002</p> <pre><code>push eax // \u5c06eax\u5bc4\u5b58\u5668\u7684\u503c\u4ee54\u5b57\u8282\u538b\u5165\u5806\u6808\uff0c\u540c\u65f6esp-4\npush dword ptr [12FF8589] // \u5c06\u5806\u6808\u9876\u90e8\u76844\u5b57\u8282\u5f39\u51fa\u5230\u5185\u5b58\u5730\u5740\u4e3a12FF8589\u6240\u6307\u5730\u65b9\uff0c\u540c\u65f6esp+4\n-----------------------------------------------------------------------------\npop dword ptr [12FF8589] // \u5c06\u5806\u6808\u9876\u90e8\u76844\u5b57\u8282\u5f39\u51fa\u5230\u5185\u5b58\u5730\u5740\u4e3a12FF8589\u6240\u6307\u7684\u5730\u65b9\uff0c\u540c\u65f6esp+4\npop eax // \u5c06\u5806\u6808\u9876\u90e8\u76844\u5b57\u8282\u5f39\u51fa\u5230eax\u5bc4\u5b58\u5668\uff0c\u540c\u65f6esp+4\n</code></pre>"},{"location":"CS/x86assm/#_14","title":"\u5730\u5740\u4f20\u9001\u6307\u4ee4","text":"<p>x86\u67093\u6761\u5730\u5740\u4f20\u9001\u6307\u4ee4\uff0c\u5206\u522b\u662fLEA\uff0cLDS\u548cLES\u3002\u5176\u5b9eLDS\u548cLES\u6307\u4ee4\u548c\u6bb5\u5bc4\u5b58\u5668\u6709\u5173\uff0c\u572832\u4f4d\u7684windows\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0c\u4e00\u822c\u7684\u7a0b\u5e8f\u5458\u90fd\u4e0d\u9700\u8981\u7ba1\u7406\u6bb5\u5bc4\u5b58\u5668\uff0c\u6240\u4ee5\u76f8\u5bf9\u800c\u8a00\uff0cLDS\u548cLES\u5bc4\u5b58\u5668\u4f7f\u7528\u5f97\u6bd4\u8f83\u5c11\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u5e38\u89c1\u7684\u53ea\u6709LEA\u6307\u4ee4\u3002</p> <p>LEA</p> <p>\u79f0\u4e3a\u5730\u5740\u4f20\u9001\u6307\u4ee4\uff0c\u683c\u5f0f\u662f\u201cLEA DST, ADDR\u201d\u3002LEA\u5c06ADDR\u5730\u5740\u52a0\u8f7d\u5230DST\uff0c\u5176\u4e2dADDR\u53ef\u4ee5\u662f\u5185\u5b58\uff0c\u4e5f\u53ef\u4ee5\u662f\u5bc4\u5b58\u5668\uff0c\u800cDST\u5fc5\u987b\u662f\u4e00\u4e2a\u901a\u7528\u5bc4\u5b58\u5668\u3002</p> <pre><code>lea eax, [12345678]; // \u6307\u4ee4\u6267\u884c\u540eeax\u5bc4\u5b58\u5668\u7684\u503c\u4e3a12345678H\nmov eax, [12345678]; // \u800cmov eax, [12345678] \u6307\u4ee4\u6267\u884c\u540eeax\u5bc4\u5b58\u5668\u7684\u503c\u4e3a\u5185\u5b58\u5730\u574012345678\u6307\u5411\u7684\u90a3\u4e2a\u6570\u503c\n// LEA\u6307\u4ee4\u53ef\u7528\u4e8e\u7b97\u6cd5\u8fd0\u7b97\nlea ecx, [ecx + eax*4];  // ecx = ecx + eax * 4\n// \u76f8\u5f53\u4e8e\u8ba1\u7b97\u51faecx+eax*4\u7684\u6570\u503c\uff0c\u5728[]\u91cc\u662f\u4e00\u4e2a\u5730\u5740\uff0clea\u53d6\u5730\u5740\u540e\u5c31\u53d6\u5230\u4e86\u8fd9\u4e2a\u6570\u503c\n</code></pre>"},{"location":"CS/x86assm/#_15","title":"\u7b97\u6570\u8fd0\u7b97\u6307\u4ee4","text":"<p>80x86\u63d0\u4f9b\u4e868\u6761\u52a0\u51cf\u6cd5\u6307\u4ee4\uff0c4\u6761\u4e58\u9664\u6cd5\u6307\u4ee4\u3002</p> <p>ADD\uff1a\u52a0\u6cd5\u6307\u4ee4</p> <pre><code>add eax, esi; // \u5c06eax\u5bc4\u5b58\u5668\u7684\u503c\u52a0\u4e0aesi\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u5f97\u51fa\u7684\u7ed3\u679c\u4fdd\u5b58\u5728eax\u7684\u5bc4\u5b58\u5668\u4e2d\nadd ebx, dword ptr[12345678] // \u5c06ebx\u5bc4\u5b58\u5668\u7684\u503c\u52a0\u4e0a\u5185\u5b58\u5730\u5740\u4e3a12345678\u6240\u5728\u76844\u5b57\u8282\u503c\uff0c\u5f97\u51fa\u7684\u7ed3\u679c\u4fdd\u5b58\u5728ebx\u5bc4\u5b58\u5668\u4e2d\n// \u4e0d\u540c\u7684\u5e73\u53f0\u548c\u7f16\u8bd1\u5668\u4e2d\uff0cdword\u5360\u7528\u7684\u5b57\u8282\u6570\u4e0d\u540c\uff0c\u572832\u4f4d\u7684windows\u4e2d\u4e00\u4e2aword\u536016\u5b57\u8282\uff0cdword\u536032\u5b57\u8282\n// 64\u4f4d\u4e2d\u4e00\u4e2aword\u536032\u5b57\u8282\uff0cdword\u536064\u5b57\u8282\n</code></pre> <p>sub \u51cf\u6cd5\u6307\u4ee4</p> <pre><code>sub ecx, 4H; // \u5c06ecx\u5bc4\u5b58\u5668\u7684\u503c\u51cf\u53bb4H\uff0c\u5f97\u51fa\u7684\u7ed3\u679c\u4fdd\u5b58\u5728eax\u5bc4\u5b58\u5668\u4e2d\nsub byte ptr[eax], ch; // \u5c06\u5185\u5b58\u5730\u5740\u4e3aeax\u6240\u6307\u5411\u7684\u6570\u636e\u7ed3\u6784\u6309\u5b57\u8282\u4e3a\u5355\u4f4d\u548cch\u5bc4\u5b58\u5668\u76f8\u51cf\uff0c\u5f97\u51fa\u7684\u7ed3\u679c\u6309\u5b57\u8282\u4e3a\u5355\u4f4d\u4fdd\u5b58\u5728eax\u6240\u6307\u5411\u7684\u4f4d\u7f6e\n</code></pre> <p>inc\u52a01\u6307\u4ee4</p> <pre><code>inc eax; // \u5c06eax\u5bc4\u5b58\u5668\u7684\u503c\u52a01\uff0c\u5f97\u51fa\u7684\u7ed3\u679c\u5b58\u653e\u5728\u539f\u6765\u7684\u5730\u65b9\n</code></pre> <p>dec\u51cf1\u6307\u4ee4</p> <pre><code>dec edx; // \u5c06dec\u5bc4\u5b58\u5668\u7684\u503c\u51cf1\uff0c\u5f97\u51fa\u7684\u7ed3\u679c\u5b58\u653e\u5728\u539f\u6765\u7684\u5730\u65b9\n</code></pre> <p>cmp\u6bd4\u8f83\u6307\u4ee4</p> <p>\u79f0\u6bd4\u8f83\u6307\u4ee4\u683c\u5f0f\u662f\u201dcmp oper1, oper2\u201d</p> <p>cmp\u6307\u4ee4\u5c06oper1\u51cf\u53bboper2\uff0c\u5f97\u51fa\u7684\u7ed3\u679c\u4e0d\u4fdd\u5b58\uff0c\u53ea\u662f\u76f8\u5e94\u5730\u8bbe\u7f6e\u5bc4\u5b58\u5668eflags\u7684cf\uff0cpf\uff0czf\uff0caf\uff0csf\u548cof\u3002\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u901a\u8fc7\u6d4b\u8bd5\u5bc4\u5b58\u5668eflags\u76f8\u5173\u7684\u6807\u5fd7\u503c\u5f97\u77e5cmp\u6267\u884c\u540e\u7684\u7ed3\u679c</p> <pre><code>cmp eax, 56H; // \u5c06eax\u5bc4\u5b58\u5668\u7684\u503c\u51cf\u53bb56H\uff0c\u5f97\u51fa\u7684\u7ed3\u679c\u4e0d\u4fdd\u5b58\uff0c\u5e76\u4e14\u8bbe\u7f6e\u5bc4\u5b58\u5668eflags\u76f8\u5173\u7684\u6807\u5fd7\u4f4d\n</code></pre> <p>neg</p> <p>neg\uff1a\u53d6\u8865\u6307\u4ee4\uff0c\u683c\u5f0f\u662fneg oper</p> <p>neg\u6307\u4ee4\u5c06oper\u64cd\u4f5c\u6570\u53d6\u53cd\uff0c\u7b80\u800c\u8a00\u4e4b\u5c31\u662f\u5c060\u51cf\u53bboper\u64cd\u4f5c\u6570\uff0c\u5f97\u51fa\u7684\u7ed3\u679c\u5b58\u5728oper\u81ea\u8eab\u4e2d\u3002</p> <pre><code>neg eax; \n</code></pre> <p>mul imul</p> <p>\u65e0\u7b26\u53f7\u4e58\u6cd5\u6307\u4ee4\u548c\u6709\u7b26\u53f7\u4e58\u6cd5\u6307\u4ee4\u3002mul\u6307\u4ee4\u9690\u542b\u4e86\u4e00\u4e2a\u53c2\u52a0\u8fd0\u7b97\u7684\u64cd\u4f5c\u6570eax\u5bc4\u5b58\u5668\uff0c\u5c06eax\u5bc4\u5b58\u5668\u91cc\u7684\u503c\u4e58oper\uff0c\u7ed3\u679c\u4fdd\u5b58\u5728eax\u4e2d\u3002\u5982\u679c\u7ed3\u679c\u8d85\u8fc732\u4f4d\u5219\u9ad832\u4f4d\u4f7f\u7528edx\u5bc4\u5b58\u5668\u4fdd\u5b58\uff0ceax\u5bc4\u5b58\u5668\u4fdd\u5b58\u4f4e32\u4f4d\u3002</p> <pre><code>mul edx; // \u5c06eax\u5bc4\u5b58\u5668\u7684\u503c\u4e58\u4ee5edx\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u5f97\u51fa\u7684\u7ed3\u679c\u4fdd\u5b58\u5728eax\u5bc4\u5b58\u5668\u4e2d\n</code></pre> <p>div idiv</p> <p>\u9664\u6cd5\u6307\u4ee4\u548c\u6709\u7b26\u53f7\u9664\u6cd5\u6307\u4ee4\u3002</p> <pre><code>div ecx; // \u5c06eax\u5bc4\u5b58\u5668\u7684\u503c\u63094\u5b57\u8282\u4e3a\u5355\u4f4d\u9664\u4ee5ecx\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u5f97\u51fa\u7684\u7ed3\u679c\u5546\u4fdd\u5b58\u5728eax\u5bc4\u5b58\u5668\u4e2d\uff0c\u4f59\u6570\u4fdd\u5b58\u5728edx\u5bc4\u5b58\u5668\u4e2d\u3002\ndiv word ptr [esp+36]; // \u5c06eax\u5bc4\u5b58\u5668\u7684\u503c\u6309word\u4e3a\u5355\u4f4d\u9664\u4ee5\u5806\u6808\u5730\u5740\u4e3aesp+36\u6240\u6307\u5411\u7684\u6570\u636e\uff0c\u5f97\u51fa\u7684\u7ed3\u679c\u5546\u4fdd\u5b58\u5728eax\u5bc4\u5b58\u5668\u4e2d\uff0c\u4f59\u6570\u4fdd\u5b58\u5728edx\u5bc4\u5b58\u5668\u4e2d\u3002\n</code></pre>"},{"location":"CS/x86assm/#80386","title":"\u9ad8\u7ea7\u8bed\u8a00\u4e2d\u7684\u6570\u636e\u7ed3\u6784\u4e0e80386\u95f4\u63a5\u5bfb\u5740","text":"<p>BX BP SI DI</p> <p>BX\uff1a</p> <p>BP\uff1a</p> <p>SI\uff1a</p> <p>DI\uff1a</p> <p>\u95f4\u63a5\u5bfb\u5740\uff1abx\uff0cbp\uff0csi\uff0cdi\uff0c\u53ef\u4ee5\u653e\u5728\u65b9\u62ec\u53f7\u5185</p> <p>\u7f3a\u7701\u6bb5\u5740\uff1ads\u548css\uff0c\u5982\u679c\u65b9\u62ec\u53f7\u5185\u6709bp\uff0c\u4e00\u5b9a\u662fss\uff0cbx\u4e00\u5b9a\u662fds</p> <p>CS (code segment): \u4ee3\u7801\u6bb5\u5bc4\u5b58\u5668\uff0c\u7528\u6765\u5b58\u50a8\u4ee3\u7801\u6bb5\u7684\u6bb5\u5730\u5740\u3002</p> <p>DS (data segment)\uff1a\u6570\u636e\u6bb5\u5bc4\u5b58\u5668\uff0c\u7528\u6765\u5b58\u50a8\u6570\u636e\u6bb5\u7684\u6bb5\u5730\u5740\u3002</p> <p>SS (stack segment)\uff1a\u5806\u6808\u6bb5\u5bc4\u5b58\u5668\uff0c\u7528\u6765\u5b58\u50a8\u5806\u6808\u6bb5\u7684\u6bb5\u5730\u5740\u3002</p> <p>ES (extra segment)\uff1a\u9644\u52a0\u6570\u636e\u6bb5\u5bc4\u5b58\u5668\uff0c\u7528\u6765\u5b58\u653e\u9644\u52a0\u6bb5\u7684\u6bb5\u5730\u5740\u3002\u6709\u65f6\uff0c\u4e00\u4e2a\u6570\u636e\u6bb5\u4e0d\u591f\u7528\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2a\u9644\u52a0\u6bb5\u6765\u5b58\u653e\u66f4\u591a\u7684\u6570\u636e\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u58f0\u660e 2 \u4e2a\u6570\u636e\u6bb5\uff0c\u5206\u522b\u7528 DS \u548c ES \u6307\u5411\u3002</p> <p>\u7a0b\u5e8f\u5f00\u59cb\u8fd0\u884c\u65f6\uff0cDOS \u4f1a\u628a ds \u548c es \u8d4b\u503c\u4e3a psp(program segment prefix) \u6bb5\u5730\u5740\u3002psp \u6bb5\u4f4d\u4e8e\u7a0b\u5e8f\u9996\u4e2a\u6bb5\u7684\u524d\u9762\uff0c\u957f\u5ea6\u4e3a 100h \u5b57\u8282\uff0c\u5176\u7528\u9014\u662f\u4fdd\u5b58\u5f53\u524d exe \u76f8\u5173\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u5982 psp:80h \u5f00\u59cb\u5b58\u653e\u4e86 exe \u7684\u547d\u4ee4\u884c\u53c2\u6570\u3002</p> <p>\u95f4\u63a5\u5bfb\u5740\uff1a \u53ef\u4ee5\u2f64\u4f5c\u95f4\u63a5\u5bfb\u5740\u7684\u5bc4\u5b58\u5668\u53ea\u6709\u56db\u4e2a\uff1abx, bp, si, di [bx], [bp], [si], [di]\u662f\u6700\u7b80\u5355\u7684\u95f4\u63a5\u5bfb\u5740 [bx + si], [bp + si], [bx + di], [bp + di]\u6ce8\u610f\u524d\u2faf\u5fc5\u987b\u662fbx/bp\uff0c\u540e\u2faf\u5fc5\u987b\u662fdi/si [bx+2] [bp-2] [si+1] [di-1] [bx+si+2] [bx+di-2]</p> <p>[bp+si+1] [bp+di-1] tips\uff1a\u4e24\u4e2a\u5bc4\u5b58\u5668\u76f8\u52a0\u7684\u95f4\u63a5\u5bfb\u5740\u2f45\u5f0f\u4e2d, bx\u6216bp\u901a\u5e38\u2f64\u6765\u8868\u793a\u6570\u7ec4\u7684\u2fb8\u5730\u5740, \u2f7dsi\u6216di\u5219\u2f64\u6765\u8868\u793a\u4e0b \u6807\u3002</p> <p>\u7f3a\u7701\u6bb5\u5740\uff1a\u4e0d\u542bbp\u7684\u6e90\u64cd\u4f5c\u6570\u2f00\u822c\u90fd\u7701\u7565\u7684\u6bb5\u5730\u5740ds\uff0c\u542b\u6709bp\u7684\u6e90\u64cd\u4f5c\u6570\u7701\u7565\u4e86ss\uff0c\u2f7d\u8fd9\u4e2a\u9ed8\u8ba4\u7684\u6bb5\u5730\u5740\u662f \u53ef\u4ee5\u88ab\u6539\u53d8\u7684 </p> <p>\u7528\u5806\u6808\u4f20\u9012\u53c2\u6570\u65f6\uff0c\u5982\u4f55\u7528[bp+]\u5b9e\u73b0\u5bf9\u53c2\u6570\u7684\u5f15\u7528\uff1f</p> <p>bp + \u591a\u5c11\u5c31\u662f\u6808\u91cc\u7684\u591a\u5c11</p> <p>\u738b\u723d\u300a\u6c47\u7f16\u8bed\u2f94\u300b\u7b2c\u56db\u7248 \u9644\u5f554:\u2f64\u6808\u4f20\u9012\u53c2\u6570</p> <pre><code>difcube:\n    mov bp, sp\n    mov ax, [bp+4]  ;a\u7684\u503c\u9001\u5165ax\u4e2d\n    sub ax, [bp+6]  ;\u51cf\u6808\u4e2db\u7684\u503c\n    mov bp, ax\n    mul bp\n    mul bp\n    pop bp\n    ret 4\n</code></pre>"},{"location":"CS/x86assm/#_16","title":"\u5176\u5b83\u7684\u7b14\u8bb0","text":""},{"location":"CS/x86assm/#x86_1","title":"x86\uff1a","text":"<p>Intel\u4ece16\u4f4d\u5fae\u5904\u7406\u56688086\u5f00\u59cb\u7684\u6574\u4e2aCPU\u82af\u7247\u7cfb\u5217\uff0c\u7cfb\u5217\u4e2d\u7684\u6bcf\u79cd\u578b\u53f7\u90fd\u4fdd\u6301\u4e0e\u4ee5\u524d\u7684\u5404\u79cd\u578b\u53f7\u517c\u5bb9\uff0c\u4e3b\u8981\u67098086\uff0c8088\uff0816\u4f4dCPU\uff09\uff0c80186\uff0c80286\uff08\u8fd9\u4e24\u4e2a\u662f\u8fc7\u6e21\u4ea7\u54c1\uff09\uff0c 80386\uff0c80486\u4ee5\u53ca\u4ee5\u540e\u5404\u79cd\u578b\u53f7\u7684Pentium\u82af\u7247\uff0832\u4f4dCPU\uff09\uff0c\u901a\u5e38\u6240\u8bf4\u7684x86\u90fd\u662f\u630732\u4f4dCPU</p> <p>80386: 32\u4f4d\u6c47\u7f16\u3002</p> <p>80836\u5bc4\u5b58\u5668</p> <p>\u901a\u7528\u5bc4\u5b58\u5668(EAX EBX ECX EDX,ESP,EBP,ESI,EDI)</p> <p>\u901a\u7528\u5bc4\u5b58\u5668\u4e0e8086\u7684\u5bc4\u5b58\u5668\u76f8\u6bd4,\u753116\u4f4d\u53d8\u4e3a\u4e8632\u4f4d</p> <p>ESP:\u6808\u9876</p> <p>EBP:\u6808\u5e95</p> <p>EAX\uff0cEBX\uff0cECX\uff0cEDX\u901a\u7528\u5bc4\u5b58\u5668</p> <p>EAX\uff1a\u7d2f\u52a0\u5668\uff08\u4e58\u6cd5\u7684\u65f6\u5019\u5b58\u4f4e\u4f4d\uff09</p> <p>EBX\uff1a\u57fa\u5740\uff08\uff3bEBX\uff0b100\uff28\uff3d\uff09</p> <p>ECX\uff1a\u8ba1\u6570\uff08\u5faa\u73af\u7684\u65f6\u5019\u8ba1\u6570\uff09</p> <p>EDX\uff1a\u6570\u636e\uff08\u9ed8\u8ba4EDX\uff0a10H\uff0b\uff0e\uff0e\uff0e\uff1b\u4e58\u6cd5\u7684\u65f6\u5019\u5b58\u9ad8\u4f4d\uff09</p> <p>ESI\uff0cEDI\uff1a\u53d8\u5740\u5bc4\u5b58\u5668</p> <p>ESI\uff1a\u6e90\u53d8\u5740\u5bc4\u5b58\u5668</p> <p>EDI\uff1a\u76ee\u7684\u53d8\u5740\u5bc4\u5b58\u5668\u3000\u4e0eEBX\u57fa\u5740\u642d\u914d\u4f7f\u7528</p>"},{"location":"CS/x86assm/#_17","title":"\u53c2\u8003\u6587\u732e","text":"<p>asm_sum.doc</p> <p>xxjj\u7684\u300a\u6c47\u7f16\u8bed\u8a00\u8003\u8bd5\u603b\u7ed3\u300b https://www.yuque.com/xianyuxuan/coding/mkte6u</p> <p>[80386]80x86\u6c47\u7f16\u6307\u4ee4_CarlosX\u7684\u535a\u5ba2-CSDN\u535a\u5ba2_80386\u6307\u4ee4\u96c6</p> <p>80386 \u7b97\u672f\u8fd0\u7b97\u6307\u4ee4\uff0c\u903b\u8f91\u8fd0\u7b97\u6307\u4ee4\uff0c\u79fb\u4f4d\u6307\u4ee4 (\u4e09) _ttzyanswer\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p>"},{"location":"CS/CA/","title":"\u7d22\u5f15","text":"<p>\u6253\u7b97\u7a0d\u5fae\u5199\u4e00\u70b9\u662f\u56e0\u4e3a\u81ea\u5df1\u5b66\u4f53\u7cfb\u7684\u65f6\u5019\u6ca1\u627e\u5230\u7279\u522b\u5b8c\u6574\u7b14\u8bb0\u8d44\u6599 + \u6ca1\u4e0a\u8ba1\u7ec4\uff0c\u81ea\u5df1\u5b8c\u5168\u6ca1\u7406\u89e3\uff0c\u5355\u7eaf\u786c\u80cc\u901f\u6210\u7684\uff0c\u8bb0\u4e00\u4e0b\u81ea\u5df1\u901f\u6210\u770b\u4e86\u54ea\u4e9b\u4e1c\u897f</p> <p>\u5f53\u7136\u9996\u5148\u82b1\u4e86\u4e24\u4e2a\u4e0b\u5348\u8fc7\u4e86\u4e00\u904d\u9a6c\u5fb7\u8ba1\u7ec4\u7684\u667a\u4e91 + xyx\u8ba1\u7ec4\u7b14\u8bb0\uff0c\u8fb9\u5b66\u8fb9\u52a8\u7b14</p> <ul> <li>chap1: Fundamentals of Analysis \u4e0d\u5199\u4e86<ul> <li>\u597d\u50cf\u5c31\u8003\u4e00\u4e9b\u9009\u62e9\uff0c\u8bfe\u672c\u7b2c 6 \u7248\u5c01\u9762\u540e\u7684\u7b2c 1 \u9875\u6709\u672c\u4e66\u4e2d\u7684\u6240\u6709\u516c\u5f0f\uff0c\u7406\u89e3\u4f1a\u7528 Amdahl's Law / CPU time / MTTF / Means-arithmetic \u7b49\u4e09\u56db\u4e2a\u516c\u5f0f</li> </ul> </li> <li>chap2: Memory Hierachy Design \u5199\u4e86</li> <li>chap3: Instruction-level Parallelism \u5199\u4e86</li> <li>chap4: Data-level parallelism \u4e0d\u5199\u4e86<ul> <li>\u4e5f\u662f\u8003\u9009\u62e9\uff0c\u4e00\u822c\u95ee SISD / SIMD (vector/array processor) / MISD (\u7406\u8bba\u6a21\u578b\u5b9e\u9645\u4e0d\u5b58\u5728) / MIMD (multi-core, kernel-level thread)\uff0c\u8fd9\u5757\u5728\u738b\u9053\u8ba1\u7ec4\u6709\u4e00\u4e2a\u5c0f\u4e13\u9898\u6765\u8bb2\uff08\u5fd8\u4e86\u7b2c\u51e0\u9875\u4e86\uff09\uff0c\u628a\u90a3\u5757\u8bfb\u4e86\u4e86\u89e3\u4e86\u4e00\u4e0b</li> </ul> </li> <li>chap5: Thread-level Parallelism \u5199\u4e86\uff0c\u4e0d\u8fc7\u597d\u50cf\u53ea\u8003 cache coherence &amp; consistency \u6240\u4ee5\u6211\u53ea\u4f1a\u8fd9\u4e2a</li> <li>chap6 &amp; chap7 \u597d\u50cf\u4e0d\u8003 \u6240\u4ee5\u4e0d\u4f1a \u4e0d\u5199\u4e86</li> </ul> <p>\u8fd8\u6709\u6284 A4 \u7684\u89c4\u5212\u8bf7\u89c1\u6211 github \u90a3\u4e2a ZJU \u8d44\u6e90\u4ed3\u5e93</p> <p>\u53c2\u8003\u8d44\u6599</p> <ul> <li>\u667a\u4e91\u9a6c\u5fb7ls\u8ba1\u7ec4</li> <li>xyx\u8ba1\u7ec4</li> <li>\u74dc\u8c6a\u8f85\u5b66ppt</li> <li>\u53e6\u51e0\u4efd\u540c\u5b66\u53d1\u6211\u7684\u7b14\u8bb0\uff0c\u4f46\u6211\u4e00\u65f6\u6ca1\u627e\u5230\u516c\u5f00\u94fe\u63a5\uff0c\u6025\u6025\u6025\uff0c\u4e0d\u627e\u4e86</li> </ul>"},{"location":"CS/CA/chap2/","title":"chap2: Memory Hierachy Design","text":""},{"location":"CS/CA/chap2/#_1","title":"\u76ee\u5f55","text":"<ul> <li>cache \u57fa\u7840\u6982\u5ff5\uff08\u4e0e\u8ba1\u7ec4\u91cd\u5408\uff09</li> <li>cache \u4f18\u5316\u65b9\u6cd5</li> </ul>"},{"location":"CS/CA/chap2/#cache","title":"cache \u57fa\u7840\u6982\u5ff5","text":"<p>\u8fd9\u5757\u5e38\u8003\u5927\u9898\uff0c\u6bd4\u5982\u8ba1\u7b97\u5730\u5740\u957f\u5ea6\uff0c\u8ba1\u7b97 AMAT\uff0c\u8ba1\u7b97 miss \u6b21\u6570\u7b49\u3002 </p>"},{"location":"CS/CA/chap2/#cache_1","title":"cache \u7684\u5206\u7c7b\u548c\u5730\u5740\u7684\u8ba1\u7b97\u65b9\u6cd5","text":"<p>Warning</p> <p>\u8fd9\u4e2a\u8868\u8bb0\u4e0d\u6e05\u4e86\u6253\u7b97\u7b49\u4e0a\u8ba1\u7ec4\u518d\u8865\u3002</p> \u7c7b\u522b \u89e3\u91ca \u6807\u8bb0\u9879\u7ed3\u6784 \u5730\u5740\u8ba1\u7b97 \u4f18\u70b9 \u7f3a\u70b9 direct-mapping \u76f4\u63a5\u6620\u5c04 fully associative \u5168\u5173\u8054 2^n-set associative 2^n\u8def\u7ec4\u5173\u8054 <ul> <li>\u6807\u8bb0\u9879\u7ed3\u6784: cache \u91cc\u7684\u6570\u636e\u548c\u6807\u8bb0\u9879\u662f\u5206\u6210\u4e24\u4e2a\uff08\u6216\u66f4\u591a\uff0c\u89c1\u738b\u9053\uff09\u5b58\u50a8\u7684\uff0c\u7136\u540e\u6807\u8bb0\u9879\u56e0\u4e3a\u5360\u7528\u989d\u5916\u7684\u7a7a\u95f4\u6240\u4ee5\u5c31\u662f\u6240\u8c13\u7684 overhead</li> </ul>"},{"location":"CS/CA/chap2/#cache-write","title":"cache write \u7684\u5904\u7406\u65b9\u6cd5","text":"write \u7b56\u7565 \u89e3\u91ca \u7ecf\u5e38\u642d\u914d\u7684 write-miss \u7b56\u7565 \u89e3\u91ca write through \u6bcf\u6b21\u5199\u6570\u636e\u65f6\u65e2\u5199\u5728cache\u4e5f\u5199\u5728main memory\u3002\u597d\u5904\u662fcache\u548cmain memory\u603b\u662f\u4e00\u81f4\u7684\uff0c\u4f46\u662f\u5f88\u6162\u3002\u53ef\u4ee5\u901a\u8fc7\u5f15\u5165\u4e00\u4e2awrite buffer\u6765\u6539\u8fdb\u3002 write around\uff08\u4e5f\u53ebnon-allocate\uff09 \u8003\u8651\u5230\u65e2\u7136\u672c\u6765\u5c31\u8981\u53bb\u4e00\u6b21main memory\uff0c\u4e0d\u5982\u76f4\u63a5\u5199\u5728\u91cc\u9762\uff0c\u4e0d\u518d\u62ff\u5230cache\u91cc\u4e86\u3002 write back \u53ea\u5c06\u4fee\u6539\u540e\u7684\u5185\u5bb9\u653e\u5728cache\u91cc\uff0c\u8be5block\u8981\u88ab\u8986\u76d6\u7684\u65f6\u5019\u518d\u5199\u56de\u5185\u5b58\u3002\u8fd9\u79cd\u60c5\u51b5\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684dirty bit\u6765\u8bb0\u5f55\u8fd9\u4e2acache\u662f\u5426\u88ab\u66f4\u6539\u8fc7\uff0c\u4ece\u800c\u76f4\u5230\u88ab\u8986\u76d6\u524d\u662f\u5426\u9700\u8981\u88ab\u5199\u56de\u5185\u5b58\u3002 write allocate \u50cfread miss\u4e00\u6837\u5148\u628ablock\u62ff\u5230cache\u91cc\u518d\u5199\u5165"},{"location":"CS/CA/chap2/#cache-miss-3c","title":"cache miss \u7684\u79cd\u7c7b \uff08\u7b80\u79f0\u4e3a3C\uff09","text":"\u79cd\u7c7b \u89e3\u91ca compulsory miss \u51b7\u542f\u52a8\u5931\u914d\uff0c\u521a\u4e0a\u7535cache\u662f\u7a7a\u7684\uff0c\u6240\u4ee5\u4e0d\u8bba\u4ec0\u4e48\u8bbf\u95ee\u90fd\u8981miss\u4e00\u6b21\u3002cache\u8d8a\u5927compulsory miss\u8d8a\u591a\u3002 capacity miss cache\u5757\u7684\u5927\u5c0f\u4e0d\u6ee1\u8db3\u7a0b\u5e8f\u5c40\u90e8\u6027\u65f6\u53d1\u751f\u7684\u5931\u914d\uff0c\u79f0\u4e3a\u5bb9\u91cf\u5931\u914d\u3002cache\u5757\u5927\u5c0f\u589e\u5927\uff0c\u5bb9\u91cf\u5931\u914d\u7387\u51cf\u5c0f\uff0c\u4e0e\u5173\u8054\u5ea6\u65e0\u5173\u3002 conflict miss \u5728\u91c7\u7528\u7ec4\u5173\u8054\u548c\u76f4\u63a5\u6620\u50cf\u65b9\u5f0f\u7684cache\u4e2d\uff0c\u4e3b\u5b58\u7684\u5f88\u591a\u5757\u90fd\u6620\u5c04\u5230cache\u7684\u540c\u4e00\u5757\uff0c\u5982\u679c\u67d0\u5757\u672c\u6765\u5728cache\u4e2d\uff0c\u521a\u88ab\u66ff\u6362\u51fa\u53bb\uff0c\u53c8\u88ab\u8bbf\u95ee\u5230\u3002\u6709\u70b9\u50cf OS \u91cc\u9875\u66ff\u6362\u65f6\u8bb2\u5230\u7684\u201c\u6296\u52a8\u201d\u3002\u5173\u8054\u5ea6\u8d8a\u5927\uff0cConflict\u5931\u914d\u8d8a\u5c0f\u3002"},{"location":"CS/CA/chap2/#cache_2","title":"cache \u4f18\u5316\u65b9\u6cd5","text":"<p>\u8fd9\u5757\u5e38\u8003\u9009\u62e9\u3002</p> <p>\u603b\u7ed3\u6027\u7684\u56fe </p> <p>\u63a5\u4e0b\u6765\u5177\u4f53\u8bb2\u89e3\u6bcf\u4e00\u79cd\u4f18\u5316\u65b9\u6cd5\u3002</p> <p>\u9996\u5148\u56db\u5927\u7c7b\u4f18\u5316\u7684\u601d\u8def\u662f\u5982\u4f55\u4ea7\u751f\u7684\uff1f\u6765\u81ea\u4e8e\u8861\u91cf\u5185\u5b58\u6027\u80fd\u7684\u516c\u5f0f\uff1a</p> \\[ Average\\space Memory\\_access\\space Time\\space (AMAT) = Hit\\_time + Miss\\_rate \\times Miss\\_penalty \\] <p>\u9996\u5148\u8fd9\u4e2a\u516c\u5f0f\u7684\u610f\u601d\u662f\uff0c\u5f53 CPU \u9700\u8981\u5185\u5b58\u8bbf\u95ee\u7684\u65f6\u5019\uff0c\u8bbf\u95ee\u65f6\u95f4\u7684\u8ba1\u7b97\u65b9\u6cd5\u662f\uff1a - \u5982\u679c\u5728 cache \u91cc\u627e\u5230\u4e86\uff0c\u5373\u53d1\u751f cache hit\uff0c\u90a3\u4e48\u9700\u8981\u7684\u65f6\u95f4\u53ea\u6709 cache \u7684\u8bbf\u95ee\u7528\u65f6\u5373hit_time\u3002 - \u5982\u679c\u5728 cache \u91cc\u6ca1\u627e\u5230\uff08\u6b64\u65f6\u5df2\u7ecf\u7528\u4e86\u4e00\u4e2a hit_time\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 hit_time \u662f 100% \u8981\u7528\u6389\u7684\uff09\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u53bb\u5185\u5b58\u91cc\u627e\uff0c\u53bb\u5185\u5b58\u91cc\u627e\u7684\u7528\u65f6\u662f\u8fd9\u79cd\u60c5\u51b5\u6240\u5360\u7684\u767e\u5206\u6bd4 miss_rate \u4e58\u4e0a\u53bb\u5185\u5b58\u91cc\u627e\u4e00\u6b21\u7684\u8017\u65f6 miss_penalty\u3002</p> <p>Note</p> <p>\u5f53\u7136\u9898\u76ee\u91cc\u8fd8\u53ef\u80fd\u4f1a\u8bf4 \"cache \u548c memory \u662f\u540c\u65f6\u8bbf\u95ee\u7684\"\uff0c\u610f\u601d\u5c31\u662f cache \u548c memory \u4e00\u8d77\u627e\uff0c\u5982\u679c cache \u91cc\u627e\u5230\u4e86\uff0c\u5c31\u628a memory \u8bbf\u95ee\u6390\u6389\uff0c\u8fd9\u6837\u5728 miss \u7684\u60c5\u51b5\u4e0b\u662f\u6bd4\u5148\u5728 cache \u91cc\u627e\u5b8c\u518d\u53bb memory \u627e\u66f4\u5feb\u7684\u3002\u8fd9\u6837\u7684\u6761\u4ef6\u4e0b\u8ba1\u7b97 AMAT \u5c31\u9700\u8981\u628a hit_time \u4e58\u4e0a\u4e00\u4e2a hit_rate\uff0c\u4e0d\u518d\u662f 100% \u7528\u6389\u4e86\u3002</p> <p>\u603b\u4e4b\uff0cAMAT \u7684\u8868\u8fbe\u5f0f\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u4e09\u79cd\u4f18\u5316\u7684\u5927\u65b9\u5411\uff0c\u5373 (1)\u964d\u4f4e hit_time (2)\u51cf\u5c0f miss_rate (3)\u51cf\u5c0f miss_penalty\u3002\u6b64\u5916\u8fd8\u6709\u4e00\u4e2a\u5927\u65b9\u5411\u53eb (4)\u505a\u5e76\u884c\u7684 cache\uff0c\u5728\u6709\u7684\u8001\u5e08\u7684 PPT \u91cc\u7b2c(4)\u9879\u597d\u50cf\u4f1a\u62c6\u51fa\u4e24\u7c7b\u6765\u8bb2\uff0c\u4e0d\u8fc7\u6211\u4eec\u8fd9\u91cc\u5c31\u6309\u603b\u5171\u56db\u79cd\u5927\u65b9\u5411\u6765\u5199\uff0c\u8ddf\u56fe\u4e00\u81f4\uff0c\u6bd4\u8f83\u8212\u670d\u3002</p>"},{"location":"CS/CA/chap2/#miss-penalty","title":"Miss Penalty","text":"<p>Multilevel Caches</p> <p>\u7ecf\u5178\u7684\u5185\u5b58\u6a21\u578b\u662f</p> <pre><code>\u5c0f/\u5feb &lt;---------------&gt; \u5927/\u6162\n[\u5bc4\u5b58\u5668] - [cache] - [\u5185\u5b58] - [\u5916\u5b58]\n</code></pre> <p>\u8fd9\u4e2a\u65b9\u6cd5\u662f\u628a\u5b83\u53d8\u6210</p> <p><pre><code>\u5c0f/\u5feb &lt;---------------&gt; \u5927/\u6162\n[\u5bc4\u5b58\u5668] - [\u5c0fcache] - [\u5927cache] - [\u5185\u5b58] - [\u5916\u5b58]\n</code></pre> \u6bd4\u5982\u5c0f cache \u6ca1\u627e\u5230\u7684\u5148\u4ece\u5927 cache \u627e\uff0c\u5927 cache \u6ca1\u627e\u5230\u7684\u518d\u53bb\u5185\u5b58\u627e\u3002\u6b64\u7c7b\u53ef\u80fd\u51fa AMAT \u7684\u8ba1\u7b97\u9898\uff0c\u628a\u5404\u79cd rate \u62ce\u6e05\u4ee5\u540e\u5c31\u50cf\u4f55\u8001\u5e08\u8bf4\u7684\u201c\u5f53\u6210\u521d\u4e2d\u7269\u7406\u9898\u505a\u5c31\u884c\u201d\u3002</p> <p>Early Resart &amp; Critical Word 1st</p> <p>\u4f17\u6240\u5468\u77e5\uff08\u81f3\u5c11\u4f60\u73b0\u5728\u77e5\u9053\u4e86\uff09cache \u7684\u4e00\u4e2a block \u7ecf\u5e38\u662f\u542b\u6709\u591a\u4e2a word \u7684\uff08\u4f60\u53ef\u80fd\u4f1a\u604d\u7136\u5927\u609f\u6709\u4e9b\u9898\u76ee\u91cc\u8bf4\u7684\u201ccache \u6309 word \u7f16\u5740\u201d\u662f\u4ec0\u4e48\u610f\u601d\uff09\uff0c\u800c block \u5f80\u5f80\u662f\u5927\u4e8e cache \u548c\u5185\u5b58\u4e4b\u95f4\u7684\u6570\u636e\u7ebf\u4f4d\u5bbd\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u60f3\u8981\u66ff\u6362\u4e00\u4e2a block\uff0c\u9700\u8981\u5728 cache \u548c\u5185\u5b58\u4e4b\u95f4\u4f20\u9001\u597d\u51e0\u8d9f\u624d\u80fd\u628a\u4e00\u4e2a block \u66ff\u6362\u5b8c\u3002</p> <p>\u4f46\u662f miss \u53d1\u751f\u65f6 CPU \u9700\u8981\u7684\u53ef\u80fd\u53ea\u6709\u4e00\u4e2a word\uff0c\u90a3\u4e48\u53ef\u4ee5\u5148\u628a CPU \u9700\u8981\u7684\u8fd9\u4e2a word \u5199\u56de\u6765\uff0c\u8ba9 CPU \u5148\u7ee7\u7eed\u8dd1\u8d77\u6765\uff0c\u5728 CPU \u7ee7\u7eed\u8dd1\u7684\u540c\u65f6\u518d\u628a\u5269\u4e0b\u7684 word \u5199\u8fdb cache\u3002</p> <p>Priority to Read Miss</p> <p>\u5728\u4f7f\u7528 write buffer \u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c write \u7684\u6570\u636e\u5f88\u5feb\u5c31\u8981 read\uff0c\u53ef\u4ee5\u5148\u4e0d\u5c06 buffer \u7684\u6570\u636e\u5199\u8fdb\u5185\u5b58\uff0c\u800c\u662f\u7b49\u5230read\u7684\u65f6\u5019\u76f4\u63a5\u4ecebuffer\u91cc\u8bfb\uff0c\u8bfb\u591a\u6b21\u4e4b\u540e\u518d\u4e00\u6b21\u4ecebuffer\u91cc\u5199\u5185\u5b58\u3002</p> <p>\u5176\u4e2d\uff0cwrite buffer \u662f\u4e00\u4e2a\u53ef\u4ee5\u8bbe\u5728 cache \u548c\u5185\u5b58\u4e4b\u95f4\u7684\u7ed3\u6784\uff0c\u610f\u601d\u662f\uff0c\u5047\u8bbe\u5185\u5b58\u53ea\u6709\u4e00\u4e2a\u8bfb\u5199\u7aef\u53e3\uff0c\u5199\u5165\u5185\u5b58\u975e\u5e38\u6162\uff0c\u90a3\u4e48 cache \u53ef\u4ee5\u5c06\u9700\u8981\u5199\u5230\u5185\u5b58\u7684\u4e1c\u897f\u5148\u642c\u5230 write buffer \u91cc\uff0c\u7136\u540e cache \u5148\u8dd1\u7740\uff0c\u5185\u5b58\u53bb\u6162\u6162\u5199\u5165\u3002</p> <p>Merging Write Buffer</p> <p>\u540c\u6837\u662f\u4f7f\u7528 write buffer \u7684\u60c5\u51b5\u3002merging write buffer \u5c31\u662f\u5c06\u5728\u591a\u884c\u53ef\u4ee5\u4e00\u6b21\u5199\u56de\u7684\u5185\u5bb9\u5408\u5e76\u5230\u4e00\u884c\uff0c\u4ee5\u53ef\u4ee5\u4e00\u6b21\u5199\u56de\u3002write buffer \u7684\u5185\u5bb9\u662f\u6309 byte \u7f16\u5740\u7684\uff0c\u4f46\u5185\u5b58\u6570\u636e\u7ebf\u4f4d\u5bbd\u4e00\u822c\u5927\u4e8e byte\uff0c\u6bd4\u5982\u4e00\u6b21\u53ef\u4ee5\u5199\u56de\u4e00\u6574\u4e2a word\uff0c\u90a3\u4e48\u5047\u5982 write buffer \u91cc\u73b0\u5728\u6709\u56db\u884c mem[200], mem[400], mem[208], mem[408]\uff0c\u5199\u56de\u5185\u5b58\u5c31\u9700\u8981\u56db\u6b21\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u628a\u5728\u540c\u4e00\u4e2a word \u91cc\u7684 byte \u5408\u5e76\u4e00\u4e0b\uff0c\u53d8\u6210 mem[200] mem[208] \u548c mem[400] mem[408] \u4e24\u884c\uff0c\u4e24\u6b21\u5199\u56de\uff0c\u5c31\u4f1a\u53d8\u5feb\u3002</p> <p>Victim Caches</p> <p>\u662f\u4e00\u79cd\u51cf\u5c11 conflict miss \u7684\u65b9\u6cd5\uff0c\u5373\u66ff\u6362\u51fa\u53bb\u7684\u9875\u5148\u653e\u8fdb\u8fd9\u4e2a victim cache \u7ed3\u6784\u3002victim cache \u4e0e cache \u662f\u5168\u76f8\u5173\u7684\uff0c\u6709\u70b9\u50cf\u4e00\u4e2a\u4e8c\u7ea7 cache\uff0c\u662f\u4e00\u4e2a\u6bd4\u4e00\u7ea7 cache \u6162\u7684 cache\u3002\u8fd9\u6837\u5982\u679c\u53d1\u751f conflict miss\uff0c\u4ece\u8fd9\u4e2a victim cache \u91cc\u53d6\u6570\u636e\u6bd4\u4ece\u5185\u5b58\u91cc\u53d6\u66f4\u5feb\u3002</p>"},{"location":"CS/CA/chap2/#miss-rate","title":"Miss Rate","text":"<p>\u8fd9\u4e00\u680f\u7684\u524d\u4e09\u4e2a\u65b9\u6cd5\u90fd\u4e0d\u662f\u5f88\u806a\u660e\uff0c\u672c\u8d28\u4e0a\u662f\u5728 cache \u7684\u4e09\u79cd\u8bbe\u8ba1\u65b9\u6cd5\u4e2d\u53bb\u6743\u8861\uff0c\u800c\u6211\u4eec\u77e5\u9053 cache \u7684\u4e09\u79cd miss \u8fd8\u662f\u6b64\u6d88\u5f7c\u957f\u7684\uff0c\u54ea\u4e00\u79cd\u8bbe\u8ba1\u65b9\u6cd5\u90fd\u4e0d\u80fd\u5b8c\u7f8e\u89e3\u51b3\u3002\u4e0d\u8fc7\u6574\u4f53\u800c\u8a00\uff0cfrom \u738b\u9053\u8ba1\u7ec4\uff0c\u4f7f\u7528\u5408\u9002\u7684 2^n \u8def\u7ec4\u5173\u8054\u65f6\uff0c\u6700\u597d\u7684\u60c5\u51b5\u80fd\u591f\u51e0\u4e4e\u517c\u5177\u76f4\u63a5\u6620\u5c04\u7684\u6548\u7387\u548c\u5168\u5173\u8054\u7684\u547d\u4e2d\u7387\u3002</p> <p>Larger Block Size</p> <p>\u628a cache \u7684\u6bcf\u4e2a\u5757\u8bbe\u8ba1\u5f97\u66f4\u5927\uff0c\u8fd9\u6837\u6bcf\u4e2a\u5757\u5b58\u5f97\u4e1c\u897f\u591a\u4e86\uff0c\u5f53\u7136 miss_rate \u5c31\u4e0b\u964d\u3002\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\uff0cmiss_penalty \u4e0a\u5347\u4e86\uff0c\u56e0\u4e3a\u5199\u8d77\u6765\u53d8\u6162\u4e86\u3002</p> <p>Larger Cache Size</p> <p>\u628a cache \u7684\u5757\u6570\u589e\u591a\uff0c\u8fd9\u6837\u5b58\u5f97\u4e1c\u897f\u4e5f\u591a\u4e86\uff0cmiss_rate \u5c31\u4e5f\u4e0b\u964d\u3002\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\uff0c\u51b7\u542f\u52a8 compulsory miss \u4e0a\u5347\u4e86\uff1b\u5982\u679c\u4e0d\u662f\u76f4\u63a5\u6620\u5c04\uff0c\u67e5\u627e\u65f6\u95f4\u4e5f\u4e0a\u5347\u4e86\u3002</p> <p>Higher Associativity</p> <p>\u63d0\u5347\u7ec4\u5173\u8054\u6570\uff0c\u8fd9\u6837\u51cf\u5c11 cache \u91cc\u9762\u7684\u4e1c\u897f\u88ab\u66ff\u6362\u51fa\u53bb\u7684\u6982\u7387\uff0c\u51cf\u5c11 conflict miss\u3002\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\uff0c\u67e5\u627e\u65f6\u95f4\u589e\u52a0\u3002</p> <p>Way-predicting Cache</p> <p>\u5728\u7ec4\u5173\u8054\u8bbe\u8ba1\u4e2d\uff0c\u4f7f cache \u5177\u6709\u9884\u6d4b\u9700\u8981\u67e5\u627e\u7684 tag \u7684\u80fd\u529b\u3002\u56e0\u4e3a\u53bb\u67e5\u9700\u8981\u7684\u6570\u636e\u5728\u7ec4\u91cc\u54ea\u4e2a tag \u6bd4\u8f83\u6162\uff0c\u6240\u4ee5\u5148\u731c\u4e00\u4e2a tag \u5728 cache \u91cc\u627e\u7740\uff0c\u7b49 tag \u51c6\u5907\u597d\u540e\u5982\u679c\u731c\u5bf9\u4e86\uff0c\u90a3\u4e48\u8282\u7ea6\u4e86\u65f6\u95f4\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5 hit\u3002</p> <p>Pseudo-associative Caches</p> <p>\u65e2\u662f\u76f4\u63a5\u6620\u5c04\u53c8\u662f\u7ec4\u5173\u8054\u6620\u5c04\u7684 cache\u3002\u9996\u5148\u628a cache \u5f53\u4f5c\u4e00\u4e2a\u76f4\u63a5\u6620\u5c04 cache\uff0c\u7b2c\u4e00\u6b21\u67e5\u7684\u65f6\u5019\u5c31\u8fd9\u4e48\u67e5\uff0c\u6700\u5feb\u3002\u4f46\u662f\u8fd9\u79cd cache \u53c8\u540c\u65f6\u662f\u4e00\u4e2a\u7ec4\u5173\u8054\u6620\u5c04\uff0c\u5728 cache \u5757\u4e2d\u653e\u4e00\u4e2a\u989d\u5916\u7684\u6807\u5fd7\u8868\u793a\u4e0e\u4e4b\u5173\u8054\u7684\u5176\u5b83\u5757\uff0c\u5982\u679c miss \u4e86\u518d\u53bb\u67e5\u8fd9\u4e9b\u5757\u3002\u8fd9\u6837\u6709\u4e00\u4e2a\u5c0f\u7684 hit_time \u548c2^n - 1\u4e2a\u5927\u7684 pseudo_hit_time\uff0c\u4f46\u662f\u5e73\u5747\u6765\u8bf4 miss_rate \u6bd4\u76f4\u63a5\u6620\u5c04\u5c0f\uff0chit_time \u6bd4\u7ec4\u5173\u8054\u6620\u5c04\u5c0f\u3002</p> <p>Compiler Techniques Reduce Cache Misses</p> <p>\u7528\u8f6f\u4ef6\u65b9\u6cd5\uff0c\u4f18\u5316\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u56db\u4e2a\u4f8b\u7a0b\uff0c\u5206\u522b\u53eb Merging Arrays, Loop Interchange, Blocking, \u548c Loop Merging\u3002\u7b80\u5355\u7684\u76f4\u63a5\u7528\u6587\u5b57\u63cf\u8ff0\u4e86\u3002</p> <p>Merging Arrays</p> <p>\u6bd4\u5982\u6211\u4eec\u9700\u8981\u8bbf\u95ee\u7684\u662fa[100], b[100], \u5728\u540c\u4e00\u4e2a\u5faa\u73af\u91cc\u8fde\u7eed\u8bbf\u95eea[i] b[i]\u5373\u4e0b\u6807\u76f8\u540c\u7684\u9879\uff0ccache\u5982\u679c\u4e00\u6b21\u6027\u653e\u4e0d\u4e0b\u4e24\u4e2a\u6570\u7ec4\uff0c\u5c31\u4f1a\u4e24\u4e2a\u6570\u7ec4\u4ea4\u66ff\u4ece\u5185\u5b58\u91cc\u53d6\u51fa\u6765\u653e\u5230cache\u91cc\u3002\u8fd9\u65f6\u5019\u53ef\u4ee5\u8bbe\u8ba1\u6210\u4e00\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4struct ab { a[100], b[100] }\uff0c\u8fd9\u6837 cache \u53ef\u4ee5\u628a a \u548c b \u76f8\u90bb\u5730\u62ff\u8fdb\u6765\u3002\u51cf\u5c11miss\u3002</p> <p>Loop Interchange</p> <p>e.g.</p> <pre><code>/* Before: \u5916\u884c\u5185\u5217\uff0c\u4e00\u884c\u53ef\u4ee5\u4e00\u6b21\u88ab\u653e\u8fdb\u5185\u5b58 */\nfor (k = 0; k &lt; 100; k = k+1)\nfor (j = 0; j &lt; 100; j = j+1)\nfor (i = 0; i &lt; 5000; i = i+1)\nM[i][j] = 2 * M[i][j];\n/* After: \u5916\u5217\u5185\u884c */\nfor (k = 0; k &lt; 100; k = k+1)\nfor (i = 0; i &lt; 5000; i = i+1)\nfor (j = 0; j &lt; 100; j = j+1)\nM[i][j] = 2 * M[i][j];\n</code></pre> <p>\u4fee\u6539\u540e\u7684cache\u547d\u4e2d\u7387\u53d8\u9ad8\u4e86\uff0c\u56e0\u4e3a\u4ea4\u6362\u540e\u5bf9\u5185\u5b58\u7684\u8bbf\u95ee\u662f\u8fde\u7eed\u7684\u3002\u4e00\u822c\u662f\u884c\u5bf9\u9f50\u7684\uff0c\u6700\u4f4e\u7ef4\u662f\u76f8\u90bb\u7684\u3002</p> <p>Blocking</p> <p>\u9002\u5f53\u62c6\u5206\u8fd0\u7b97\uff0c\u4ee5\u914d\u5408cache\u5927\u5c0f\u3002e.g. \u77e9\u9635\u76f8\u4e58\u4f8b\u5b50\u3002</p> <p><pre><code>/* Before */\nfor (i = 0; i &lt; N: i += 1)\nfor (j = 0; j &lt; N; j += 1) {\nr = 0;      for (k = 0; k &lt; N; k +=1 )\nr = r + y[i][k] * z[k][j];  }\n/* After */\nfor (jj = 0 ; jj &lt; N; jj = jj+B)\nfor (kk = 0; kk &lt; N; kk = kk +B) {\n// ...\u8bb0\u4e0d\u6e05\u4e86\nfor (ii = 0; ii &lt; B; ii ++) {\n// \u603b\u4e4b\u8fd9\u4e2a\u5185\u5c42\u5faa\u73af\u53ea\u5904\u7406\u4e00\u4e2a B * B \u7684 block\uff0c\u5176\u4e2d block \u662f cache \u80fd\u653e\u4e0b\u7684\u5927\u5c0f\n}\n}\n</code></pre> \u90a3\u4e48\u4f18\u5316\u524d cache \u9700\u8981\u66ff\u6362\u66f4\u591a\u6b21\uff0c\u56e0\u4e3a\u4e0d\u8bba\u662f\u884c\u5faa\u73af\u8fd8\u662f\u5217\u5faa\u73af\uff0c\u8d85\u8fc7 B \u4e4b\u540e cache \u90fd\u8981\u91cd\u65b0\u5199\u4e00\u904d\u3002\u7136\u540e\u4e0b\u6b21\u5199\u5230\u8fd9\u4e2a block \u65f6\u518d\u6362\u8fdb\u6765\u4e00\u6b21\u3002</p> <p>\u4f18\u5316\u540e\u6bcf\u6b21\u5bf9\u6bcf\u4e00\u4e2a block \u4e00\u6b21\u6027\u5b8c\u6210\u64cd\u4f5c\u3002</p> <p>Loop Merging</p> <p>\u6bd4\u5982\u6709\u4e24\u4e2a\u5faa\u73af\u7684\u5faa\u73af\u8d77\u6b62\u6761\u4ef6\u4e00\u6837\uff0c\u90a3\u4e48\u5c31\u4e0d\u8981\u5f00\u4e24\u4e2a\u5faa\u73af\u4e86\uff0c\u5408\u5e76\u5230\u4e00\u4e2a\u5faa\u73af\u91cc\u5b8c\u6210\u3002</p>"},{"location":"CS/CA/chap2/#parallelism","title":"Parallelism","text":"<p>Non-blocking Caches</p> <p>cache miss\u65f6, \u7b49\u5f85\u5185\u5b58\u5199\u56de\u65f6\u7ee7\u7eed\u505a\u522b\u7684\u6ca1\u6709\u51b2\u7a81\u7684\u4e8b\u60c5\uff0c\u4e0d\u5fc5\u8981\u8ba9\u6240\u6709\u7684\u8d44\u6e90\u90fd\u7b49\u5f85\u5185\u5b58\u3002\u53ef\u4ee5\u8ba9\u522b\u7684\u5757\u5148\u5b8c\u6210\u522b\u7684\u6307\u4ee4\u7684\u9700\u6c42\u3002\u6bd4\u5982\u5728\u5904\u7406write miss\u7684\u65f6\u5019\uff0c\u5141\u8bb8\u5904\u7406read hit\u3002</p> <p>\u4e3b\u8981\u7528\u4e8eout of order\uff08\u4e71\u5e8f\uff09\u7684\u5904\u7406\u5668\u4e0a\u3002</p> <p>ppt \u7ed9\u7684\u5b9a\u4e49\u662f\uff1aallows cache to continues to supply hits while processing read misses (hit under miss, hit under multiple miss)</p> <p>Hardware Prefetching of Instr/Data</p> <p>\u53ef\u4ee5\u7531\u786c\u4ef6\u63a7\u5236\u6570\u636e\u9884\u53d6\uff0c\u4e00\u79cd\u7c7b\u4f3c branch-prediction \u7684\u505a\u6cd5\u3002\u9884\u6d4b\u5e76\u63d0\u524d\u53d6\u51fa\u53ef\u80fd\u9700\u8981\u7528\u5230\u7684\u6570\u636e\u653e\u5230cache\u91cc\u3002</p> <p>\u4f7f\u7528prefetching\u7684\u524d\u63d0\u662f\u6307\u4ee4\u662f\u5e76\u884c\u7684\uff0ccache \u4e5f\u662f non-blocking \u7684\u3002</p> <p>Compiler Controlled Prefetching</p> <p>\u4e0a\u9762\u4e00\u6761\u9884\u53d6\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u7531\u7a0b\u5e8f\u5458\u548c\u7f16\u8bd1\u5668\u624b\u52a8\u6307\u5b9a\u54ea\u4e9b\u5185\u5bb9\u5e94\u8be5\u88ab\u653e\u5230cache\u3002</p>"},{"location":"CS/CA/chap2/#hit-time","title":"Hit Time","text":"<p>Small &amp; Simple Caches</p> <p>\u6bd4\u5982\u5c31\u9488\u5bf9 cache \u672c\u8eab\uff0c\u51cf\u5c0f cache \u7684\u590d\u6742\u5ea6\u4ee5\u51cf\u5c0f\u7ec4\u5408\u903b\u8f91\u7684\u5ef6\u8fdf\u3002\u5f53\u7136\u7531\u4e8e\u6211\u4eec\u4e4b\u524d\u8ba8\u8bba\u8fc7\u7684 cache \u4e09\u4e2a\u6307\u6807\u7684\u76f8\u4e92\u5236\u7ea6\uff0c\u662f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5176\u5b83\u4e24\u4e2a\u6307\u6807\u53d8\u4e0d\u597d\u7684\u3002</p> <p>Avoiding Address Translation</p> <p>\u8fd9\u91cc\u9700\u8981\u5206\u522b\u56de\u5fc6\u4e00\u4e0b cache \u6807\u8bb0\u4f4d\u7684\u7ed3\u6784\u548c OS \u91cc\u7684\u9875\u8868\u9879\u3002\u4e00\u822c\u672c\u8bfe\u7a0b\u4e2d\u4f7f\u7528\u7684 cache \u8bbe\u8ba1\u89c4\u5219\u90fd\u662f \"physically tagged, virtually indexed\"(PTVI)\uff0c\u610f\u601d\u662f\uff0c\u7528\u4e8e\u67e5\u627e cache block \u7684 tag \u6574\u4e2a\u5168\u90fd\u5728 page offset \u91cc\uff0c\u8fd9\u5757 offset \u5b57\u6bb5\u5bf9\u4e8e\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u6765\u8bf4\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u53ea\u6709 page number \u9700\u8981\u9001\u8fdb tlb \u53bb\u5bfb\u627e\u7269\u7406\u5e27\u53f7\u3002\u5982\u56fe\u3002</p> <p></p> <p>\u5982\u679c\u4e4b\u524d\u7684\u505a\u6cd5\u662f cache \u7b49\u5230\u7269\u7406\u5e27\u53f7\u627e\u51fa\u6765\u3001\u5730\u5740\u7ffb\u8bd1\u5b8c\u518d\u53bb\u67e5\u627e\uff0c\u5c31\u592a\u6162\u4e86\u3002\u65e2\u7136 tag \u4e0d\u7528\u7b49\u5230\u5730\u5740\u7ffb\u8bd1\u5c31\u80fd\u62ff\u5230\uff0c\u53ef\u4ee5\u4f7f\u5730\u5740\u7ffb\u8bd1\u548c cache \u67e5\u627e\u540c\u65f6\u8fdb\u884c\u3002</p> <p>Pipelined Cache Access</p> <p>\u56e0\u4e3a cache management unit \u7684\u64cd\u4f5c\u5206\u4e3a\u597d\u591a\u6b65\uff0c\u53ef\u4ee5\u628a\u6bcf\u6b65\u53bb\u50cf\u6d41\u6c34\u7ebf\u4e00\u6837\u5e76\u884c\u3002\u7f3a\u70b9\u662f\u4f1a\u589e\u52a0\u7cfb\u7edf\u5f00\u9500\uff0c\u5bfc\u81f4 hit_time \u589e\u52a0\uff0c\u4f46\u662f\u597d\u5904\u662f\u524d\u9762\u7684\u6307\u4ee4 miss \u65f6\uff0c\u4e0b\u4e00\u6761\u6307\u4ee4\u53ef\u4ee5\u5e76\u884c\u3002</p> <p>Multi-banked Cache</p> <p>\u5c06\u591a\u8def\u7ec4\u5173\u8054\u7684\u6bcf\u4e00\u8def\u7684\u67e5\u627e\u5e76\u884c\u3002</p> <p>ppt \u7ed9\u7684\u5b9a\u4e49\u662f\uff1acache is divided into independent banks that can support simultateous accesses like interleaved memory banks.</p> <p>Trace Cache</p> <p>\u6838\u5fc3\u903b\u8f91\u662f\u7f13\u5b58\u903b\u8f91\u4e0a\u7684\u6307\u4ee4\u6d41\uff0c\u800c\u4e0d\u662f\u7f13\u5b58\u7269\u7406\u5730\u5740\u7684\u6307\u4ee4\u6d41\uff0c\u4ece\u800c\u52a0\u5feb\u6307\u4ee4\u7684\u9884\u53d6\u3002\u6bd4\u5982\u5206\u652f\u6307\u4ee4\u4e2d\u4e0d\u53bb\u9884\u6d4b\u91cc cache \u4e0d\u4f1a\u547d\u4e2d\u7684\u5206\u652f\uff0c\u8fd9\u6837\u8282\u7701\u4e86 cache \u7a7a\u95f4\uff0c\u4e5f\u8ba9\u76f8\u90bb\u7684\u6307\u4ee4\u5728 cache \u4e2d\u4e5f\u76f8\u90bb\u3002\u6211\u7684\u7406\u89e3\u5b83\u7684\u610f\u601d\u662f\u628a prediction \u7684\u529f\u80fd\u9001\u7ed9\u4e86 cache\uff0c\u5982\u679c\u5206\u652f\u9884\u6d4b\u9884\u6d4b\u5230\u4e86\u67d0\u4e2a\u8df3\u8f6c\u6307\u4ee4\u4f1a\u53d1\u751f\uff0c\u90a3\u4e48 cache \u5c31\u53bb\u9884\u53d6\u53d1\u751f\u7684\u5206\u652f\u540e\u9762\u7684\u6570\u636e\u3002</p>"},{"location":"CS/CA/chap3/","title":"chap3: Instruction-level Parallelism (ILP)","text":""},{"location":"CS/CA/chap3/#_1","title":"\u76ee\u5f55","text":"<ul> <li>ILP \u57fa\u7840\u6982\u5ff5\uff08\u4e0e\u8ba1\u7ec4\u91cd\u5408\uff09</li> <li>ILP \u5728\u4f53\u7cfb\u91cc\u5b66\u7684\u4e09\u79cd\u7b97\u6cd5\uff08\u4e0d\u77e5\u9053\u53d6\u4ec0\u4e48\u540d\u5b57\u4e86\uff09</li> <li>Branch prediction</li> </ul>"},{"location":"CS/CA/chap3/#ilp","title":"ILP \u57fa\u7840\u6982\u5ff5","text":"<p>Note</p> <p>\u662f\u5199\u5f97\u7b80\u5355\u70b9\u4e86\u54c8\u3002\u5199\u4e0d\u52a8\u4e86\u3002\u8981\u4e0d\u5927\u5bb6\u770b\u8ba1\u7ec4\u738b\u9053\u597d\u4e86\u3002</p> <p>\u4e09\u79cd\u7ade\u4e89</p> <ul> <li> <p>\u6570\u636e\u7ade\u4e89 Data Hazard     \u5206\u4e3a\uff08\u6ce8\u610f\u4e0b\u9762\u547d\u540d\u65b9\u6cd5\u90fd\u662f\u6309\u201c\u672c\u5e94\u53d1\u751f\u7684\u987a\u5e8f\u201d\uff0c\u6bd4\u5982 RAW \u5c31\u662f\u6307\uff0c\u6b63\u5e38\u7684\u8fd0\u884c\u987a\u5e8f\u5c31\u662f\u5148\u5199\u540e\u8bfb\u3002\uff09</p> <ul> <li>RAW \u5199\u540e\u8bfb\uff1a\u771f\u4f9d\u8d56\u3002\u53ea\u6709\u5b83\u662f\u771f\u4f9d\u8d56\u7684\u539f\u56e0\u662f\u53ea\u6709\u5b83\u9700\u8981\u8bfb\u7684\u662f\u5199\u51fa\u6765\u7684\u6570\u636e\uff0c\u6240\u4ee5\u5fc5\u987b\u8981\u7b49\u3002\u5176\u5b83\u4e24\u4e2a\u90fd\u53ea\u662f\u9700\u8981\u4e00\u4e2a\u5bc4\u5b58\u5668\u8fd9\u4e2a\u7a7a\u4f4d\uff0c\u6240\u4ee5\u5199\u7684\u4e1c\u897f\u5373\u4f7f\u5199\u5728\u522b\u7684\u5730\u65b9\u4e5f\u884c\uff0c\u5982\u679c\u6709\u522b\u7684\u5730\u65b9\u53ef\u4ee5\u5199\u5c31\u4e0d\u7528\u7b49\u3002</li> <li>WAW \u5199\u540e\u5199\uff1a\u5b83\u662f\u5565\u4f9d\u8d56\u4e0d\u7528\u8bb0\u3002</li> <li>WAR \u5199\u540e\u8bfb\uff1a\u5b83\u662f\u5565\u4f9d\u8d56\u4e0d\u7528\u8bb0\u3002</li> </ul> </li> <li> <p>\u7ed3\u6784\u7ade\u4e89 Structural Hazard     \u662f\u6307\u5982\u679c\u4e24\u4e2a\u6307\u4ee4\u9700\u8981\u540c\u65f6\u7528\u540c\u4e00\u4e2a Function Unit\uff0c\u6bd4\u5982\u540c\u65f6\u7528\u4e00\u4e2a\u9700\u8981\u4e24\u65f6\u949f\u5468\u671f\u624d\u80fd\u7b97\u5b8c\u7684 ALU\uff0c\u7ed3\u679c\u8be5 Function Unit \u53ea\u6709\u4e00\u4e2a\uff0c\u90a3\u4e48\u540e\u6765\u7684\u6307\u4ee4\u5c31\u5f97\u7b49\u5148\u6765\u7684\u6307\u4ee4\u7b97\u5b8c\u624d\u80fd\u53bb\u7b97\u3002</p> </li> <li> <p>\u63a7\u5236\u7ade\u4e89 Control Hazard     \u662f\u6307\u5982\u679c\u9047\u5230\u8df3\u8f6c\u6307\u4ee4\uff0c\u7ed3\u679c\u7528\u4e8e\u5224\u65ad\u8df3\u8f6c\u6761\u4ef6\u7684\u5bc4\u5b58\u5668\u503c\u8fd8\u6ca1\u597d\uff0c\u5c31\u9700\u8981\u7b49\u5bc4\u5b58\u5668\u51c6\u5907\u597d\u624d\u80fd\u77e5\u9053\u8df3\u4e0d\u8df3\uff0c\u90a3\u5c31\u9700\u8981\u505c\u4e0b\u7b49\u3002</p> </li> </ul> <p>\u6d41\u6c34\u7ebf\u7c7b\u578b</p> <ul> <li> <p>\u5355\u5468\u671f\u6d41\u6c34\u7ebf     \u4ee5\u8017\u65f6\u6700\u957f\u7684\u4e00\u4e2a\u9636\u6bb5\u7684\u7528\u65f6\u4e3a\u673a\u5668\u5468\u671f\u3002     \u6240\u6709\u6307\u4ee4\u8dd1\u5b8c\u7528\u65f6\u7684\u8ba1\u7b97\uff1a(\u6307\u4ee4\u6570 + \u9636\u6bb5\u6570 - 1) * \u673a\u5668\u5468\u671f\u3002\u7406\u89e3\u8d77\u6765\u5c31\u662f\u53ea\u6709\u7b2c\u4e00\u6761\u6307\u4ee4\u7684\u524d n-1 \u4e2a\u5468\u671f\u6ca1\u6709\u6307\u4ee4\u5b8c\u6210\uff0c\u4e4b\u540e\u6bcf\u4e2a\u5468\u671f\u90fd\u5b8c\u6210\u4e00\u6761\u6307\u4ee4\u3002</p> </li> <li> <p>\u591a\u5468\u671f\u6d41\u6c34\u7ebf     \u4f1a\u8003\u586b\u8868\u9898\u3002\u5c31\u662f\u90a3\u79cd\u4e58\u6cd5\u7b49 6 \u4e2a\u5468\u671f\u9664\u6cd5\u7b49 24 \u4e2a\u7684\u3002lab \u91cc\u4f1a\u590d\u4e60\u5230\u3002</p> </li> <li> <p>\u8fd8\u6709\u4e0b\u56fe\u8fd9\u51e0\u79cd</p> </li> </ul> <p></p> <p>\u770b\u7684\u65f6\u5019\u6ce8\u610f\u603b\u7ed3\u4e00\u4e0b\u6bcf\u4e00\u79cd\u7684 CPI \u662f\u5927\u4e8e\u7b49\u4e8e\u8fd8\u662f\u5c0f\u4e8e 1\u3002\u6211\u603b\u7ed3\u4e0d\u51fa\u6765\u4e86\u3002</p>"},{"location":"CS/CA/chap3/#ilp_1","title":"ILP \u5728\u4f53\u7cfb\u91cc\u5b66\u7684\u4e09\u79cd\u7b97\u6cd5","text":"<p>Note</p> <p>\u672c\u6765\u8fd9\u5757\u8be5\u5199\u7684\u4f46\u662f\u6211\u5199\u4e0d\u52a8\u4e86</p> <p>\u76f4\u63a5\u53bb bing \u641c\u7d22 (1)Scoreboard, (2)Tomasulo, (3)Tomasulo w speculation, \u53bb\u627e\u4e00\u4e2a\u5357\u5927\u540c\u5b66\u5199\u7684\u77e5\u4e4e\u5e16\u5b50\uff0c\u6211\u662f\u770b\u8fd9\u5957\u5e16\u5b50\u770b\u61c2\u7684\u3002\u8fd8\u6709 lab \u91cc\u8fd9\u5757\u7684\u5b9e\u9a8c\u4e5f\u80fd\u5e2e\u52a9\u7406\u89e3\u3002</p> <p>\u8bf7\u518d\u7ed3\u5408\u8fd9\u5f20\u56fe\u8bb0\u5fc6\u4e00\u4e0b\uff1a</p> <p></p> <p>\u8fd8\u6709\u4e00\u4e2a\u4e0a\u8ff0\u8d44\u6599\u4f3c\u4e4e\u6ca1\u8bb2\u5230\u7684\u70b9\uff0c\u5173\u4e8e ISSUE \u65f6\u673a\uff0c\u6211\u8bb0\u5f97\u662f - Scoreboard: \u9700\u8981\u7684 Function Unit \u4e3a\u7a7a\uff0c\u4e14\u9700\u8981\u5199\u7684 Reg State \u6ca1\u6709\u522b\u7684\u6307\u4ee4\u8fd8\u51c6\u5907\u5199\uff08\u907f\u514d WAW\uff09\u65f6\u3002 - Tomasulo: Reservation Station \u6709\u7a7a\u65f6\u3002 - Tomasulo w ROB (\u5373 w speculation): Reservation Station \u548c ROB \u90fd\u7a7a\u65f6\u3002</p> <p>Warning</p> <p>\u4f46\u662f\u4e0a\u8ff0 Tomasulo w ROB \u4f3c\u4e4e\u8ddf\u6211\u8003\u7684\u4e00\u4e2a\u671f\u672b\u9898\u4e0d\u517c\u5bb9\uff0c\u4e0d\u77e5\u9053\uff0c\u7b49\u540e\u4eba\u6765\u4e3a\u6211\u6307\u51fa</p>"},{"location":"CS/CA/chap3/#branch-prediction","title":"Branch prediction","text":"<p>\u56de\u5fc6 control hazard\uff0c\u6d41\u6c34\u7ebf CPU \u9047\u5230\u8df3\u8f6c\u8bed\u53e5\u5982\u679c\u5224\u65ad\u6761\u4ef6\u8fd8\u6ca1\u5c31\u7eea\uff0c\u5c31\u9700\u8981\u7b49\u64cd\u4f5c\u6570\u624d\u80fd\u7ee7\u7eed\u5f80\u4e0b\u8d70\u3002\u6211\u4eec\u60f3\u8ba9 CPU \u968f\u4fbf\u5148\u731c\u4e00\u4e2a\u5f80\u4e0b\u8d70\u7740\uff0c\u5982\u679c\u7b49\u64cd\u4f5c\u6570\u51c6\u5907\u597d\u53d1\u73b0\u731c\u9519\u4e86\uff0c\u5927\u4e0d\u4e86\u518d\u6390\u6389\uff0c\u731c\u5bf9\u4e86\u90a3\u5c31\u8282\u7ea6\u65f6\u95f4\u4e86\u3002</p> <p>\u731c\u7684\u6839\u636e\u6709\u4ec0\u4e48\u5462\uff0c\u786e\u5b9e\u6709\u6839\u636e\uff0c\u7edf\u8ba1\u8868\u660e\u5927\u90e8\u5206\u7a0b\u5e8f\u91cc\u53d1\u751f\u8df3\u8f6c\uff08branch taken\uff09\u548c\u4e0d\u53d1\u751f\u8df3\u8f6c\uff08branch not taken\uff09\u7684\u6570\u76ee\u662f\u4e25\u91cd\u4e0d\u6210\u6bd4\u4f8b\u7684\uff0c\u7ecf\u5e38\u5176\u4e2d\u4e00\u4e2a\u53ef\u80fd\u80fd\u5360\u5230 90% \u591a\u7684\u60c5\u51b5\u3002\u90a3\u4e48\uff0c\u5047\u8bbe\u5982\u679c\u77e5\u9053\u4e4b\u524d\u5f88\u591a\u8df3\u8f6c\u8bed\u53e5\u90fd\u8df3\u4e86\uff0c\u63a5\u4e0b\u6765\u53d1\u751f\u7684\u8df3\u8f6c\u8bed\u53e5\u4e5f\u5927\u6982\u7387\u4f1a\u8df3\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u72b6\u6001\u673a\uff0c\u6709\u56db\u79cd\u7f16\u7801 00(\u5f88\u53ef\u80fd\u8df3) 01(\u5e94\u8be5\u8df3\u5427) 10(\u5e94\u8be5\u4e0d\u8df3\u5427) 11(\u5f88\u53ef\u80fd\u4e0d\u8df3)\uff0c\u5982\u679c\u72b6\u6001\u673a\u5728 00 \u548c 01 \u72b6\u6001\u5c31\u9884\u6d4b\u4e0b\u4e00\u6b21\u4e5f\u8df3\u8f6c\uff0c\u5982\u679c\u72b6\u6001\u673a\u5728 10 \u548c 11 \u5c31\u9884\u6d4b\u4e0b\u4e00\u6b21\u4e0d\u8df3\u8f6c\u3002</p> <p>\u800c\u72b6\u6001\u8f6c\u79fb\u662f\u8fd9\u6837\u53d1\u751f\u7684\uff1a</p> <p>Note</p> <p>\u6211\u77e5\u9053 mkdocs \u5e94\u8be5\u6e32\u4e0d\u4e86 mermaid\uff0c\u4f46\u662f\u6211\u61d2\uff0c\u8bf7\u5927\u5bb6\u8111\u6e32\u4e00\u4e0b\u3002\u3002\u6216\u8005\u770b\u81ea\u5df1\u8001\u5e08 ppt\u3002\u3002\u662f\u4e00\u4e2a\u6709\u56db\u4e2a\u72b6\u6001\u7684\u7ea2\u7ea2\u84dd\u84dd\u7684\u72b6\u6001\u673a</p> <pre><code>graph LR\n00 --(\u672c\u6b21\u8df3\u4e86)--&gt; 00\n00 --(\u672c\u6b21\u6ca1\u8df3)--&gt; 01\n01 --(\u672c\u6b21\u8df3\u4e86)--&gt; 00\n01 --(\u672c\u6b21\u6ca1\u8df3)--&gt; 10\n10 --(\u672c\u6b21\u8df3\u4e86)--&gt; 01\n10 --(\u672c\u6b21\u6ca1\u8df3)--&gt; 11\n11 --(\u672c\u6b21\u8df3\u4e86)--&gt; 10\n11 --(\u672c\u6b21\u6ca1\u8df3)--&gt; 11\n</code></pre> <p>\u8ba1\u7b97\u9898\u4f1a\u8003\u4f7f\u7528\u8fd9\u6837\u7684 branch prediction\uff0c\u9884\u6d4b\u5931\u8bef\u7684\u6982\u7387\u662f\u591a\u5c11\u3002</p>"},{"location":"CS/CA/chap5/","title":"chap5: Thread-level Parallelism","text":""},{"location":"CS/CA/chap5/#_1","title":"\u76ee\u5f55","text":"<ul> <li>cache \u4e00\u81f4\u6027\u7684\u6982\u5ff5</li> <li>\u8fbe\u6210 cache \u4e00\u81f4\u6027\u4e24\u4e2a\u534f\u8bae</li> </ul>"},{"location":"CS/CA/chap5/#cache","title":"cache \u4e00\u81f4\u6027\u7684\u6982\u5ff5","text":"<p>\u4e0d\u77e5\u9053\u600e\u4e48\u63cf\u8ff0\u7684\u4e24\u4e2a\u672f\u8bed</p> <p>Note</p> <p>\u8ba1\u7ec4\u738b\u9053\u6709\u4e00\u7ae0\u4e13\u95e8\u8bb2\u3002\u5176\u5b83\u8bf7\u901a\u8fc7\u738b\u9053\u5b66\u4e60\uff0c\u8fd8\u6709\u59dc\u8001\u5e08 ppt \u4e5f\u6709\u4e00\u4e2a\u5c0f\u603b\u7ed3\u7684\u8868\u683c\u3002</p> \u6982\u5ff5 \u5168\u540d \u7279\u70b9 \u4f18\u70b9 UMA uniform memory access \u6bcf\u4e2a\u8282\u70b9\u5230 memory \u7684\u8bbf\u95ee\u65f6\u95f4\u4e00\u81f4 NUMA non-uniform memory access \u6bcf\u4e2a\u8282\u70b9\u5230 memory \u7684\u8bbf\u95ee\u65f6\u95f4\u4e0d\u4e00\u81f4\uff0c\u5230\u81ea\u5df1\u7684\u5feb\uff0c\u5230\u522b\u4eba\u7684\u6162 \u6269\u5c55\u5230\u66f4\u5927\u89c4\u6a21\u4e0a\u7684\u53ef\u6269\u5c55\u6027\u5f3a <p>cache \u4e00\u81f4\u6027\u7684\u672f\u8bed</p> <p>\u5982\u679c CPU \u6709\u591a\u4e2a\u6838\uff0c\u6216\u8005\u5982\u679c CPU \u662f\u5206\u5e03\u5f0f\u7684\uff0c\u5b83\u4eec\u5171\u7528\u4e00\u4e2a cache\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u4f7f cache \u5bf9\u6240\u6709\u6838/\u8282\u70b9\u7684\u8bfb\u5199\u4fdd\u6301\u4e00\u81f4\u6027\uff0c\u6bd4\u5982\u4e00\u4e2a\u6838/\u8282\u70b9\u5199\u7684\u4e1c\u897f\u5bf9\u5176\u5b83\u6838/\u8282\u70b9\u53ef\u89c1\uff0c\u5176\u5b83\u6838/\u8282\u70b9\u770b\u89c1\u7684\u90fd\u662f\u6700\u65b0\u7684\u3002</p> \u672f\u8bed \u4e00\u53e5\u8bdd\u5b9a\u4e49\uff08\u5728 ppt \u4e0a\u53d1\u73b0\u7684\uff0c\u4f46\u662f\u4e2a\u4eba\u611f\u89c9\u4e0d\u592a\u51c6\u786e\uff09 \u5173\u6ce8\u7684\u65b9\u9762\u662f\uff08\u8fd9\u680f from \u8bfe\u672c\u66f4\u51c6\u786e\uff0c\u4f46\u4e0d\u662f\u4e00\u53e5\u8bdd\u5b9a\u4e49\uff09 coherence Memory accesses executed by each processor were kept in order. reads and writes to the same location consistency Memory accesses among different processors were interleaved. reads and writes wrt other memory locations"},{"location":"CS/CA/chap5/#cache_1","title":"\u8fbe\u6210 cache \u4e00\u81f4\u6027\u4e24\u4e2a\u534f\u8bae","text":"<p>Note</p> <p>\u806a\u660e\u7684\u8bfb\u8005\u5df2\u7ecf\u53d1\u73b0\u6211\u5df2\u7ecf\u4e0d\u60f3\u5199\u4e86</p> <p>Snooping\u534f\u8bae</p> <p>Note</p> <p>\u8bf7\u901a\u8fc7\u81ea\u5df1\u73ed\u8001\u5e08 ppt \u5b66\u4e60\uff1aMOESI \u72b6\u6001\u673a + \u4f8b\u9898\u8868\u683c \u4e24\u4e2a\u56fe</p> <p>Directory\u534f\u8bae</p> <p>Note</p> <p>\u8bf7\u901a\u8fc7\u81ea\u5df1\u73ed\u8001\u5e08 ppt \u5b66\u4e60: \u4f8b\u9898\u8868\u683c \u4e00\u4e2a\u56fe</p>"},{"location":"CS/CO/","title":"Computer Organization","text":""},{"location":"CS/CO/basis/","title":"Basis","text":"<p>Eight Great Ideas 8 \u79cd\u4f1f\u5927\u7684\u601d\u60f3</p> <p>\u5728\u8ba1\u7b97\u673a\u7ec4\u6210\u53d1\u5c55\u7684\u8fc7\u53bb 60 \u5e74\u91cc\u6709 8 \u79cd\u4f1f\u5927\u7684\u601d\u60f3\u5f62\u6210\u4e86\uff0c\u8fd9\u4e9b\u601d\u60f3\u5c06\u8d2f\u7a7f\u6574\u95e8\u8bfe\uff0c\u6307\u5bfc\u6211\u4eec\u5bf9\u786c\u4ef6\u8fdb\u884c\u6027\u80fd\u7684\u4f18\u5316\u3002</p> <ul> <li> <p>Design for Moore's Law \u9002\u5e94\u6469\u5c14\u5b9a\u5f8b\u8bbe\u8ba1</p> <p>\u6469\u5c14\u5b9a\u5f8b\u8bf4\u6bcf\u5355\u4f4d\u96c6\u6210\u7535\u8def\u4e0a\u7684\u6676\u4f53\u7ba1\u6570\u91cf\u6bcf 18-24 \u4e2a\u6708\u7ffb\u4e00\u756a\u3002\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u5e94\u5f53\u9884\u6d4b\u6280\u672f\u53d1\u5c55\u7684\u901f\u5ea6\uff0c\u505a\u9002\u7528\u4e8e\u672a\u6765\u7684\u8bbe\u8ba1\u3002</p> </li> <li> <p>Use Abstraction to Simplify Design</p> <p>\u7528\u62bd\u8c61 Abstraction \u6765\u8868\u793a\u4e0d\u540c\u5c42\u6b21\u7684\u8bbe\u8ba1\u3002\u4f4e\u5c42\u6b21\u7684\u7ec6\u8282\u4e0d\u5e94\u5f53\u5bf9\u9ad8\u5c42\u6b21\u663e\u73b0\u3002</p> </li> <li> <p>Make the Common Case Fast</p> <p>\u52a0\u5feb\u4e00\u822c\u7684\u60c5\u51b5\uff0c\u6bd4\u52a0\u5feb\u7a00\u6709\u7684\u60c5\u51b5\u66f4\u6709\u6548\u3002</p> </li> <li> <p>Performance via Parallelism</p> <p>\u5e76\u884c\u3002</p> </li> <li> <p>Performance via Pipelining</p> <p>\u4e00\u79cd\u7279\u6b8a\u7684\u5e76\u884c\u6280\u5de7\u88ab\u547d\u540d\u4e3a pipeline\u3002\uff08\u5e94\u8be5\u662f\u4e00\u822c\u7528\u6765\u6307 pipeline CPU \u7684\u3002\uff09</p> </li> <li> <p>Performance via Prediction</p> <p>\u5728\u4e0d\u77e5\u9053\u672a\u6765\u60c5\u51b5\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5148\u505a\u9884\u6d4b\u7136\u540e\u5148\u5f00\u59cb\u505a\uff0c\u6bd4\u7b49\u5230\u672a\u6765\u60c5\u51b5\u518d\u5f00\u59cb\u505a\u53ef\u80fd\u66f4\u5feb\u3002\uff08\u5e94\u8be5\u662f\u4e13\u6307\u8df3\u8f6c\u9884\u6d4b\u7684\uff09</p> </li> <li> <p>Hierarchy of Memories</p> <p>\u5185\u5b58\u5206\u5c42\u3002</p> </li> <li> <p>Dependability via Redundency</p> <p>\u8ba1\u7b97\u673a\u4e0d\u6b62\u9700\u8981\u53d8\u5feb\uff0c\u4e5f\u9700\u8981\u53ef\u9760\u6027\u3002\u56e0\u4e3a\u786c\u4ef6\u8bbe\u5907\u53ef\u80fd\u574f\u6389\uff0c\u9700\u8981\u6dfb\u52a0\u4e00\u4e9b\u5197\u4f59\u7684\u90e8\u4ef6\u6765\u534f\u52a9\u68c0\u6d4b\u548c\u6062\u590d\u3002</p> </li> </ul>"},{"location":"CS/CPP/course/","title":"Courses \u542c\u8bfe","text":""},{"location":"CS/CPP/course/#cs106bcs106l","title":"\u5173\u4e8eCS106B\u548cCS106L","text":"<p>CS106B\u504f\u7b80\u5355\uff0c\u76f8\u5f53\u4e8eZJU\u7684\u6570\u636e\u7ed3\u6784+C++\u7684STL\u7528\u6cd5\u4e00\u5757\u8bb2\uff0c\u53e6\u5916\u518d\u8bb2\u4e00\u4e9bFDS\u7684\u7b97\u6cd5\u3002 CS106L\u662f\u4e13\u95e8\u8bb2C++\u8fdb\u9636\u7279\u6027\u7684\u3002</p> <p>\u56e0\u4e3a\u5728\u542cCS106B\u4e4b\u524d\u5b66\u8fc7FDS\uff0cCS106B\u82b1\u4e00\u5929\u901f\u901a\u4e86\u4e00\u4e0b\uff0c\u91cd\u590d\u5185\u5bb9\u6709\u70b9\u591a\uff0c\u622a\u4e0b\u4e86\u4e00\u5e45\u56fe\u3002 </p> <p>CS106L\u63d0\u4f9b\u7684C++\u5b66\u4e60\u8def\u7ebf\u56fe </p>"},{"location":"CS/CPP/course/#zju","title":"ZJU\u8bfe\u7a0b","text":""},{"location":"CS/CPP/course/#_1","title":"\u8bfe\u7a0b\u53c2\u8003\u8d44\u6599","text":"<p>CPP Reference Standard  C++ CppCon</p>"},{"location":"CS/CPP/course/#_2","title":"\u4e0a\u8bfe\u5fc3\u5f97","text":"<p>\u6211\u8ddf\u7684\u662fcx\u8001\u5e08\u7684\u73ed\uff0c\u5e94\u8be5\u662f\u6559\u5f97\u6700\u597d\u7684\u4e00\u6863orz  \u4f46\u662f\u4e0a\u8bfe\u5185\u5bb9\u4ecd\u4e0d\u80fd\u8986\u76d6\u4f5c\u4e1a\u548c\u671f\u672b\u7684\u5185\u5bb9\uff0c\u89c9\u5f97\u542c\u8bfe\u5185\u5bb9\u53ea\u80fd\u8d77\u5230\u4e00\u4e2a\u9aa8\u67b6\u4f5c\u7528\uff0c\u8bfe\u540e\u9700\u8981\u82b1\u4e0a\u8bfe2\u81f33\u500d\u7684\u65f6\u95f4\u81ea\u5b66\u81ea\u5df1\u6574\u7406\u7b14\u8bb0\uff0c\u591a\u8bfb\u591a\u5199\u4ee3\u7801\uff0c\u4e0d\u7136\u671f\u672b\u4f1a\u9047\u5230\u6ca1\u89c1\u8fc7\u7684\u7279\u6027\uff0c\u4f1a\u6709\u70b9\u60e8orz\uff08\u50cf\u6211\u4e00\u6837\uff09</p>"},{"location":"CS/CPP/course/#_3","title":"\u9762\u5411\u5bf9\u8c61\u56db\u5927\u7279\u6027","text":"<ul> <li>\u62bd\u8c61</li> <li>\u5c01\u88c5</li> <li>\u7ee7\u627f</li> <li>\u591a\u6001</li> </ul>"},{"location":"CS/CPP/course/#_4","title":"\u7c7b\u548c\u5bf9\u8c61/\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570","text":""},{"location":"CS/CPP/course/#class-struct","title":"class \u4e0e struct \u7684\u6bd4\u8f83","text":"<ul> <li>\u7c7b\u662fC++\u5bf9C\u4e2d\u7ed3\u6784\u7684\u6269\u5c55</li> <li>C\u8bed\u8a00\u4e2d\u7684struct\u662f\u6570\u636e\u6210\u5458\u96c6\u5408\uff0cC++\u4e2d\u7684\u7c7b\u662f\u6570\u636e\u6210\u5458\u548c\u6210\u5458\u51fd\u6570\u7684\u96c6\u5408</li> <li>\u7c7b\u662f\u4e00\u79cd\u6784\u9020\u6570\u636e\u7c7b\u578b</li> <li>\u7c7b\u5c06\u6570\u636e\u548c\u4e0e\u4e4b\u5173\u8054\u7684\u6570\u636e\u5c01\u88c5\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u4e00\u4e2a\u6574\u4f53\uff0c\u5177\u6709\u826f\u597d\u7684\u5916\u90e8\u63a5\u53e3\u53ef\u4ee5\u9632\u6b62\u6570\u636e\u672a\u7ecf\u6388\u6743\u7684\u8bbf\u95ee\uff0c\u63d0\u4f9b\u4e86\u6a21\u5757\u4e4b\u95f4\u7684\u72ec\u7acb\u6027\u3002</li> </ul>"},{"location":"CS/CPP/course/#_5","title":"\u7c7b\u7684\u7ed3\u6784\uff1a\u6570\u636e\u6210\u5458\u548c\u6210\u5458\u51fd\u6570","text":""},{"location":"CS/CPP/course/#_6","title":"\u7c7b\u7684\u58f0\u660e\u683c\u5f0f","text":"<pre><code>class Name\n{\n    public:\n        public_data;\n        public_functions;\n    protected:\n        protected_data;\n        protected_functions;\n    private:\n        private_data;\n        private_functions;\n}\n</code></pre> <ul> <li>private\u662f\u7c7b\u7684\u79c1\u6709\u90e8\u5206\uff0c\u53ea\u80fd\u7531\u672c\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee\uff0c\u6765\u81ea\u5916\u90e8\u7684\u4efb\u4f55\u8bbf\u95ee\u90fd\u662f\u975e\u6cd5\u7684\u3002</li> <li>public\u662f\u7c7b\u7684\u5171\u6709\u90e8\u5206\uff0c\u5bf9\u5916\u5b8c\u5168\u5f00\u653e\uff0c\u53ef\u4ee5\u7531\u5916\u90e8\u4efb\u610f\u8bbf\u95ee\u3002</li> <li>protected\u662f\u7c7b\u7684\u4fdd\u62a4\u90e8\u5206\uff0c\u53ef\u4ee5\u7531\u672c\u7c7b\u548c\u672c\u7c7b\u7684\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee\uff0c\u5176\u5b83\u8bbf\u95ee\u90fd\u662f\u975e\u6cd5\u7684\u3002</li> </ul>"},{"location":"CS/CPP/course/#_7","title":"\u4e60\u60ef","text":"<ul> <li>\u7c7b\u58f0\u660e\u683c\u5f0f\u7684\u4e09\u4e2a\u90e8\u5206\u4e0d\u4e00\u5b9a\u5168\u90fd\u6709\uff0c\u4f46\u81f3\u5c11\u6709\u5176\u4e2d\u7684\u4e00\u4e2a\u90e8\u5206\u3002</li> <li>\u4e00\u822c\u5c06\u6570\u636e\u6210\u5458\u58f0\u660e\u4e3a\u79c1\u6709\u6210\u5458\uff0c\u6210\u5458\u51fd\u6570\u58f0\u660e\u4e3a\u5171\u6709\u6210\u5458\u3002</li> <li>private\u5904\u4e8e\u7c7b\u4e2d\u7684\u7b2c\u4e00\u90e8\u5206\u65f6\uff0cprivate\u5173\u952e\u5b57\u53ef\u4ee5\u7701\u7565\u3002</li> <li>\u6570\u636e\u6210\u5458\u53ef\u4ee5\u662f\u4efb\u4f55\u6570\u636e\u7c7b\u578b\uff0c\u4f46\u4e0d\u80fd\u7528auto regitser\u6216extern\u8fdb\u884c\u58f0\u660e\u3002</li> <li>\u4e0d\u80fd\u5728\u7c7b\u58f0\u660e\u4e2d\u7ed9\u6570\u636e\u6210\u5458\u8d4b\u503c\uff0c\u53ea\u6709\u5728\u7c7b\u5bf9\u8c61\u5b9a\u4e49\u4e4b\u540e\u624d\u80fd\u7ed9\u6570\u636e\u6210\u5458\u8d4b\u503c\u3002</li> </ul>"},{"location":"CS/CPP/course/#_8","title":"\u7c7b\u5916\u5b9a\u4e49","text":"<p>\u8fd4\u56de\u7c7b\u578b \u7c7b\u540d::\u6210\u5458\u51fd\u6570\u540d\uff08\u53c2\u6570\u8868\uff09 {     // \u51fd\u6570\u4f53 }</p>"},{"location":"CS/CPP/course/#_9","title":"\u5185\u8054\u51fd\u6570\u548c\u5916\u8054\u51fd\u6570","text":"<ul> <li>\u5185\u8054\u51fd\u6570\u662f\u5b9a\u4e49\u5728\u7c7b\u4f53\u91cc\u7684\u6210\u5458\u51fd\u6570\uff0c\u5373\u8be5\u51fd\u6570\u7684\u51fd\u6570\u4f53\u653e\u5728\u7c7b\u4f53\u91cc\u3002\u7f16\u8bd1\u65f6\u4f1a\u76f4\u63a5\u7528\u51fd\u6570\u5b9a\u4e49\u66ff\u6362\u8c03\u7528\u4ee3\u7801\uff0c\u63d0\u5347\u8fd0\u884c\u901f\u5ea6\u3002\u5185\u8054\u51fd\u6570\u50cf\u5b9a\u4e49\u4f18\u5316\u4e86\u7684\u5b8f\u3002</li> <li>\u5916\u8054\u51fd\u6570\u662f\u8bf4\u660e\u5728\u7c7b\u4f53\u91cc\uff0c\u5b9a\u4e49\u5728\u7c7b\u4f53\u5916\u7684\u51fd\u6570\u3002\u53ea\u8981\u5728\u51fd\u6570\u5b9a\u4e49\u65f6\u524d\u9762\u52a0\u4e0ainline\u5c31\u53ef\u4ee5\u53d8\u6210\u5185\u8054\u51fd\u6570\uff0c\u5fc5\u987b\u548c\u51fd\u6570\u4f53\u653e\u5728\u4e00\u8d77\u3002</li> <li>\u5185\u8054\u51fd\u6570\u53ef\u4ee5\u52a0inline\u4e5f\u53ef\u4ee5\u4e0d\u52a0inline\u3002</li> </ul>"},{"location":"CS/CPP/course/#_10","title":"\u5bf9\u8c61","text":"<p>\u53ef\u4ee5\u628a\u76f8\u540c\u6570\u636e\u7ed3\u6784\u548c\u76f8\u540c\u64cd\u4f5c\u96c6\u7684\u5bf9\u8c61\u770b\u4f5c\u5c5e\u4e8e\u540c\u4e00\u7c7b\u3002\u5bf9\u8c61\u662f\u7c7b\u7684\u5b9e\u4f8b\u3002</p>"},{"location":"CS/CPP/course/#_11","title":"\u5bf9\u8c61\u7684\u5b9a\u4e49","text":"<ul> <li>\u53ef\u4ee5\u76f4\u63a5\u5728\u58f0\u660e\u7c7b\u7684\u540c\u65f6\u5b9a\u4e49\uff08\u5168\u5c40\u53d8\u91cf\uff09\uff0c\u4e5f\u53ef\u4ee5\u7c7b\u540d+\u5b9a\u4e49\u3002</li> <li>\u53ea\u58f0\u660e\u7c7b\u4e0d\u58f0\u660e\u5bf9\u8c61\u65f6\u4e0d\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\uff0c\u58f0\u660e\u5bf9\u8c61\u540e\u624d\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\u3002</li> </ul>"},{"location":"CS/CPP/course/#_12","title":"\u5bf9\u8c61\u4e2d\u6210\u5458\u7684\u8bbf\u95ee","text":"<p>\u5bf9\u8c61\u540d.\u6570\u636e\u6210\u5458\u540d\uff08\u662f \u5bf9\u8c61\u540d.\u7c7b\u540d::\u6210\u5458\u540d \u7684\u7f29\u5199\uff09 \u5bf9\u8c61\u540d.\u6210\u5458\u51fd\u6570\u540d\uff08\u53c2\u6570\u8868\uff09 <pre><code>class Sample\n{\npublic:\nint k;\nint geti(){return i;}\nint getj(){return j;}\nint getk(){return k;}\nprivate:\nint i;\nprotected:\nint j;\n};\nint main()\n{\nSample a;\na.i;        // \u975e\u6cd5\na.j:        // \u975e\u6cd5\na.k;        // \u5408\u6cd5\n}\n</code></pre></p>"},{"location":"CS/CPP/course/#_13","title":"\u7c7b\u7684\u4f5c\u7528\u57df","text":"<ul> <li>\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u6210\u5458\u90fd\u5728\u7c7b\u7684\u4f5c\u7528\u57df\u4e2d\uff0c\u4e00\u4e2a\u7c7b\u7684\u4efb\u4f55\u6210\u5458\u53ef\u4ee5\u8bbf\u95ee\u8be5\u7c7b\u7684\u5176\u4ed6\u6210\u5458\u3002</li> <li>\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u4e0d\u53d7\u9650\u5236\u5730\u8bbf\u95ee\u8be5\u7c7b\u7684\u6210\u5458\uff0c\u5728\u7c7b\u7684\u5916\u90e8\u5c31\u4e0d\u884c\u3002</li> </ul>"},{"location":"CS/CPP/course/#_14","title":"\u6784\u9020\u51fd\u6570\u4e0e\u6790\u6784\u51fd\u6570","text":"<p>\u7c7b\u7684\u6784\u9020\u51fd\u6570\u662f\u7c7b\u7684\u4e00\u4e2a\u7279\u6b8a\u6210\u5458\u51fd\u6570\uff0c\u6ca1\u6709\u8fd4\u56de\u7c7b\u578b\uff08\u4e0d\u662fvoid\uff09\uff0c\u53ef\u4ee5\u6709\u53c2\u6570\uff0c\u51fd\u6570\u540d\u548c\u7c7b\u540d\u4e00\u6837\u3002\u5f53\u521b\u5efa\u7c7b\u7684\u4e00\u4e2a\u65b0\u5bf9\u8c61\u65f6\uff0c\u81ea\u52a8\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u5b8c\u6210\u521d\u59cb\u5316\u5de5\u4f5c\u3002</p>"},{"location":"CS/CPP/course/#namespace","title":"Namespace","text":""},{"location":"CS/CPP/course/#namespace_1","title":"\u4ec0\u4e48\u662fnamespace\uff1f","text":"<p>\u662f\u5355\u4e00\u7684\u5168\u5c40\u540d\u5b57\u7a7a\u95f4\u3002\u9632\u6b62\u5728\u4e00\u4e2a\u7a7a\u95f4\u4e2d\u76f8\u540c\u7684\u540d\u5b57\u5f15\u8d77\u51b2\u7a81\u3002 \u4f8b\u5b50\uff1a <pre><code>namespace myown1\n{\nstring user_name = \"myown1\";\n}\nnamespace myown2\n{\nstring user_name = \"myown2\";\n}\nint main()\n{\n// using namespace myown1; \ncout &lt;&lt; \"\\\\n\" &lt;&lt; \"Hello, \"\n&lt;&lt; myown1::user_name\n&lt;&lt; \"...and goodbye!\\\\n\"\ncout &lt;&lt; \"\\\\n\" &lt;&lt; \"Hello, \"\n&lt;&lt; myown2::user_name\n&lt;&lt; \"...and goodbye!\\\\n\"\nreturn 0;\n}\n</code></pre></p> <p>\u5173\u952e\u8bcdusing\u5c06\u4e00\u4e2a\u540d\u5b57\u7a7a\u95f4\u53d8\u4e3a\u53ef\u89c1\uff0c\u4e0d\u4f1a\u8986\u76d6\u5f53\u524d\u7684namespace\u3002</p>"},{"location":"CS/CPP/course/#_15","title":"\u7ee7\u627f\u4e0e\u6d3e\u751f\u7c7b","text":"<ul> <li>\u7ee7\u627f\uff1a\u4fdd\u6301\u5df2\u6709\u7c7b\u7684\u7279\u6027\u800c\u6784\u9020\u65b0\u7c7b\u7684\u8fc7\u7a0b\u3002\u88ab\u7ee7\u627f\u7684\u7c7b\u79f0\u4e3a\u57fa\u7c7b/\u7236\u7c7b\u3002</li> <li>\u6d3e\u751f\uff1a\u5728\u5df2\u6709\u7c7b\u7684\u57fa\u7840\u4e0a\u65b0\u589e\u81ea\u5df1\u7684\u7279\u6027\u800c\u4ea7\u751f\u65b0\u7c7b\u7684\u8fc7\u7a0b\u3002\u6d3e\u751f\u51fa\u7684\u7c7b\u79f0\u4e3a\u6d3e\u751f\u7c7b\u3002</li> </ul> \u76ee\u7684 \u4ee3\u7801\u7684\u91cd\u7528\u548c\u4ee3\u7801\u7684\u6269\u5145 \u7ee7\u627f\u79cd\u7c7b \u5355\u7ee7\u627f/\u591a\u7ee7\u627f \u7ee7\u627f\u5185\u5bb9 \u9664\u6784\u9020\u51fd\u6570/\u6790\u6784\u51fd\u6570/\u79c1\u6709\u6210\u5458\u5916\u7684\u6240\u6709\u6210\u5458"},{"location":"CS/CPP/course/#_16","title":"\u7ee7\u627f\u7684\u8bbf\u95ee\u63a7\u5236","text":"<p>\u6d3e\u751f\u7c7b\u7ee7\u627f\u4e86\u57fa\u7c7b\u4e2d\u9664\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u4e4b\u5916\u7684\u6240\u6709\u6210\u5458\u3002\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u5305\u62ec\uff1a - \u7ee7\u627f\u57fa\u7c7b\u7684\u6210\u5458 - \u6d3e\u751f\u7c7b\u5b9a\u4e49\u65f6\u58f0\u660e\u7684\u6210\u5458</p> <p>\u4ece\u5df2\u6709\u7c7b\u6d3e\u751f\u51fa\u65b0\u7c7b\u65f6\uff0c\u53ef\u4ee5\u5728\u6d3e\u751f\u7c7b\u5185\u5b8c\u6210\u4ee5\u4e0b\u51e0\u79cd\u529f\u80fd\uff1a - \u589e\u52a0\u65b0\u7684\u6570\u636e\u6210\u5458 - \u589e\u52a0\u65b0\u7684\u6210\u5458\u51fd\u6570 - \u91cd\u65b0\u5b9a\u4e49\u57fa\u7c7b\u4e2d\u5df2\u6709\u7684\u6210\u5458\u51fd\u6570 - \u53ef\u4ee5\u6539\u53d8\u73b0\u6709\u6210\u5458\u7684\u5c5e\u6027</p> <p>\u58f0\u660e\u4e00\u4e2a\u6d3e\u751f\u7c7b\u7684\u4e00\u822c\u683c\u5f0f <pre><code>class \u6d3e\u751f\u7c7b\u540d:\u7ee7\u627f\u65b9\u5f0f \u57fa\u7c7b\u540d\n{\n// \u6d3e\u751f\u7c7b\u65b0\u589e\u7684\u6570\u636e\u6210\u5458\u548c\u6210\u5458\u51fd\u6570\n};\n</code></pre></p> <p>\u4e09\u79cd\u7ee7\u627f\u65b9\u5f0f <pre><code>class employee: public person\n{};\n// default\nclass employee: private person\n{};\nclass employee: protected person\n{};\n</code></pre></p> <p>\u57fa\u7c7b\u6210\u5458\u5728\u6d3e\u751f\u7c7b\u4e2d\u7684\u8bbf\u95ee\u5c5e\u6027</p> \u5728\u57fa\u7c7b\u4e2d\u7684\u8bbf\u95ee\u5c5e\u6027 \u7ee7\u627f\u65b9\u5f0f \u5728\u6d3e\u751f\u7c7b\u4e2d\u7684\u8bbf\u95ee\u5c5e\u6027 \u89e3\u91ca private public inaccessible \u57fa\u7c7b\u4e2dprivate\u7684\u5bf9\u8c61\u5728\u7c7b\u5916\u5f53\u7136\u4e0d\u53ef\u8bbf\u95ee private private inaccessible private protected inaccessible public public public \u57fa\u7c7b\u4e0d\u7ba1 public private private public protected protected protected public protected \u6743\u9650\u4f1a\u88ab\u7ee7\u627f\u65b9\u5f0f\u7f29\u5c0f\u800c\u4e0d\u4f1a\u653e\u5927 protected private private protected protected protected <p>\u6d3e\u751f\u7c7b\u5bf9\u57fa\u7c7b\u7684\u8bbf\u95ee\u89c4\u5219 - \u5185\u90e8\u8bbf\u95ee\uff1a\u7531\u6d3e\u751f\u7c7b\u4e2d\u65b0\u589e\u6210\u5458\u5bf9\u57fa\u7c7b\u7ee7\u627f\u6765\u7684\u6210\u5458\u7684\u8bbf\u95ee\u3002 - \u5bf9\u8c61\u8bbf\u95ee\uff1a\u5728\u6d3e\u751f\u7c7b\u5916\u90e8\uff0c\u901a\u8fc7\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u5bf9\u4ece\u57fa\u7c7b\u7ee7\u627f\u6765\u7684\u6210\u5458\u7684\u8bbf\u95ee\u3002</p> \u57fa\u7c7b\u6210\u5458 private\u6210\u5458 public\u6210\u5458 protected\u6210\u5458 \u5185\u90e8\u8bbf\u95ee \u4e0d\u53ef\u8bbf\u95ee \u53ef\u8bbf\u95ee \u53ef\u8bbf\u95ee \u5bf9\u8c61\u8bbf\u95ee \u4e0d\u53ef\u8bbf\u95ee \u4e0d\u53ef\u8bbf\u95ee \u4e0d\u53ef\u8bbf\u95ee <p>\u79c1\u6709\u7ee7\u627f\u4e3e\u4f8b <pre><code>class Point\n{\npublic:\nvoid InitP(float x = 0, float y = 0)\n{\nthis-&gt;X = x;\nthis-&gt;Y = y;\n}\nvoid Move(float offX, float offY)\n{\nX += offX;\nY += offY;\n}\nfloat GetX() const{return X;}\nfloat GetY() const{return Y;}\nprivate:\nfloat X, Y;\n};\nclass Rectangle: private Point // \u6d3e\u751f\u7c7b\u58f0\u660e\n{\npublic: //\u65b0\u589e\u5916\u90e8\u63a5\u53e3\nvoid InitR(float x, float y, float w, float h)\n{\nInitR(x, y);\nW = w;\nH = h;\n} // \nvoid Move(float xOff, float yOff)\n{\nPoint::\n}\n}\n</code></pre></p>"},{"location":"CS/CPP/final_review/","title":"ZJU \u671f\u672b\u590d\u4e60","text":"<p>\u9762\u5411\u671f\u672b\u9898\u7684\u76f8\u4f3c\u77e5\u8bc6\u70b9\u805a\u7c7b</p>"},{"location":"CS/CPP/final_review/#_1","title":"\u6784\u9020\u987a\u5e8f","text":"<p>\uff081\uff09main\u51fd\u6570\u4ee5\u5916\u7684\u5bf9\u8c61\uff0c\u5168\u5c40\u7c7b\u5b9a\u4e49\u540e\u76f4\u63a5\u5b9a\u4e49\u7684\u7c7b\u5bf9\u8c61 \uff082\uff09main\u51fd\u6570\u5185\u7684\u5bf9\u8c61 \uff083\uff09\u7236\u7c7b\u6784\u9020 \uff084\uff09\u5b50\u7c7b\u7c7b\u6210\u5458 \uff085\uff09\u5b50\u7c7b\u6784\u9020 \u6790\u6784\u987a\u5e8f\u76f8\u53cd</p>"},{"location":"CS/CPP/final_review/#_2","title":"\u4ec0\u4e48\u65f6\u5019\u751f\u6210\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff1f","text":"<p>\u5982\u679c\u5df2\u7ecf\u6709\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u751f\u6210\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 \u6ca1\u6709\u7684\u65f6\u5019\u4e5f\u4e0d\u4e00\u5b9a\u4f1a\u751f\u6210 \u9700\u8981\u7528\u624d\u751f\u6210</p>"},{"location":"CS/CPP/final_review/#_3","title":"\u91cd\u8f7d\u89c4\u5219","text":"<p>\u4e0d\u80fd\u91cd\u8f7d\u7684\u6709\uff1a - \u4f5c\u7528\u57df\u64cd\u4f5c\u7b26:: - \u6761\u4ef6\u64cd\u4f5c\u7b26?:\uff08\u5e94\u8be5\u662f\u95ee\u53f7\u8868\u8fbe\u5f0f\uff1f\uff09 - \u70b9\u64cd\u4f5c\u7b26\u3001\u7c7b\u6210\u5458\u6307\u9488 - \u9884\u5904\u7406\u7b26\u53f7#</p> <p>\u53ea\u80fd\u91cd\u8f7d\u4e3a\u53cb\u5143\u4e0d\u80fd\u6210\u5458\u51fd\u6570\uff1a - &lt;&lt;\u548c&gt;&gt; \u539f\u56e0\u662f\u6210\u5458\u51fd\u6570\u91cd\u8f7d\uff0c\u53ea\u80fd\u5e26\u4e00\u4e2a\u53c2\u6570\uff0clhs\u5fc5\u987b\u662f\u6210\u5458\u81ea\u8eab</p> <p>\u4f46\u662f\u6d41\u64cd\u4f5c\u7b26\u5de6\u8fb9\u662fcin\u6216cout\uff0c\u91cd\u8f7d\u4e3a\u53cb\u5143\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u6bd4\u6210\u5458\u51fd\u6570\u591a\u8bf4\u660e\u4e00\u4e2a\u5f62\u53c2\u505alhs</p> <p>\u91cd\u8f7d\u548c\u91cd\u5199\u90fd\u662f\u591a\u6001\uff1a \u91cd\u8f7d\uff1a\u8fd0\u884c\u65f6\u591a\u6001 \u91cd\u5199\uff1a\u7f16\u8bd1\u65f6\u591a\u6001</p> <p>static\u548cvirtual\u53ea\u80fd\u6709\u4e00\u4e2a</p> <p>\u6790\u6784\u51fd\u6570\u4e0d\u80fd\u5e26\u53c2\u6570</p>"},{"location":"CS/CPP/final_review/#_4","title":"\u5b50\u7c7b\u548c\u7236\u7c7b\u6307\u9488","text":"<ul> <li>\u5b50\u7c7b\u6307\u5b50\u7c7b\uff1a     \u5982\u679c\u5b50\u7c7b\u8986\u76d6\u4e86\u7236\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570\uff0c\u5219\u8bbf\u95ee\u5b50\u7c7b\u7684     \u6ca1\u6709\u8986\u76d6\u7684\u5c31\u8bbf\u95ee\u7236\u7c7b\u7684</li> <li>\u7236\u7c7b\u6307\u9488\u53ef\u4ee5\u76f4\u63a5\u6307\u5411\u5b50\u7c7b</li> <li>\u5982\u679c\u4e0d\u662fvirtual\uff1a\u8bbf\u95ee\u7236\u7c7b\u6709\u7684\u6210\u5458\u53d8\u91cf\u548c\u51fd\u6570\uff08\u5176\u5b9e\u6ca1\u6709\u7684\u4e5f\u80fd\uff0c\u9700\u8981\u4e00\u4e9b\u5199\u6cd5\uff09     \u5982\u679c\u662fvirtual\uff1a\u8bbf\u95ee\u7684\u662f\u5b50\u7c7b\u91cd\u5199\u8fc7\u7684\u7248\u672c</li> <li>\u7236\u7c7b\u6ca1\u6709\u7684\u5b50\u7c7b\u65b0\u51fd\u6570\u5c31\u8bbf\u95ee\u4e0d\u5230\uff08\u7531\u7c7b\u578b\u5927\u5c0f\u63a7\u5236\uff09</li> <li>\u5b50\u7c7b\u6307\u9488\u4e0d\u80fd\u76f4\u63a5\u6307\u5411\u7236\u7c7b\uff0c\u9700\u8981\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362</li> </ul>"},{"location":"CS/CPP/final_review/#static_castdynamic_cast","title":"static_cast\u548cdynamic_cast","text":"<ul> <li>static cast\u53ef\u4ee5\u7236\u5230\u5b50\uff0c\u53ef\u4ee5\u5b50\u5230\u7236\uff0c\u4e0d\u53ef\u4ee5\u65e0\u7ee7\u627f\u5173\u7cfb\u7684\u4e24\u4e2a\u7c7b</li> <li>dynamic cast\u4e0d\u5141\u8bb8\u7236\u5230\u5b50\uff08\u56e0\u4e3a\u4e0d\u77e5\u9053\u5b50\u7c7b\u591a\u4e86\u54ea\u4e9b\u5b9e\u73b0\uff0c\u8fd4\u56de\u7a7a\u6307\u9488\uff09\uff0c\u5728\u7236\u7c7b\u91cc\u9762\u6709virtual function\u7684\u65f6\u5019\u5141\u8bb8\u5b50\u5230\u7236\uff0c\u6ca1\u6709virtual function\u5c31\u4e0d\u80fd\u505a\u3002\u8981\u6c42\u7236\u7c7b\u5fc5\u987b\u662f\u591a\u6001\u7c7b</li> <li>reinterpret cast\u53ef\u4ee5\u65e0\u7ee7\u627f\u5173\u7cfb\u7684\u4e24\u4e2a\u7c7b</li> <li>const cast\u53ea\u7528\u6765remove const</li> </ul>"},{"location":"CS/CPP/final_review/#_5","title":"\u5f15\u7528","text":"<p>\u4ec0\u4e48\u65f6\u5019\u5fc5\u987b\u7528\u5e38\u5f15\u7528\uff08const &amp;\uff09\uff1a\u5f15\u7528\u578b\u53c2\u6570\u5e94\u5f53\u5728\u80fd\u5b9a\u4e49\u4e3aconst\u7684\u60c5\u51b5\u4e0b\u5c3d\u91cf\u5b9a\u4e49\u4e3aconst\u3002</p> <p>\u4f7f\u7528\u5f15\u7528\u7684\u4e3b\u8981\u539f\u56e0\uff1a \u7a0b\u5e8f\u80fd\u591f\u4fee\u6539\u8c03\u7528\u51fd\u6570\u4e2d\u7684\u6570\u636e\u5bf9\u8c61 \u901a\u8fc7\u4f20\u9012\u5f15\u7528\u800c\u4e0d\u662f\u6574\u4e2a\u6570\u636e\u5bf9\u8c61\uff0c\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u8fd0\u884c\u901f\u5ea6</p> \u53ea\u4f7f\u7528\u4f20\u9012\u8fc7\u6765\u7684\u503c\u800c\u4e0d\u4fee\u6539 \u9700\u8981\u4fee\u6539\u4f20\u9012\u8fc7\u6765\u7684\u503c \u5185\u7f6e\u6570\u636e\u7c7b\u578b\uff08\u5c0f\u578b\u7ed3\u6784\uff09 \u6309\u503c\u4f20\u9012 \u6307\u9488\u4f20\u9012 \u6570\u7ec4 \u6307\u9488\u4f20\u9012 \u6307\u9488\u4f20\u9012 \u8f83\u5927\u7684\u7ed3\u6784\uff09 \u6307\u9488\u6216\u5f15\u7528 \u6307\u9488\u6216\u5f15\u7528 \u7c7b/\u5bf9\u8c61 \u5f15\u7528\u4f20\u9012 \u5f15\u7528\u4f20\u9012 <p>\u5f15\u7528\u548c\u6307\u9488\u7684\u533a\u522b\uff1a \u53ef\u4ee5\u628a\u5f15\u7528\u7406\u89e3\u6210\u4e00\u4e2a\u5e38\u91cf\u6307\u9488\uff0c\u56e0\u6b64\u5f15\u7528\u58f0\u660e\u65f6\u5c31\u5fc5\u987b\u521d\u59cb\u5316\uff0c\u4e00\u7ecf\u58f0\u660e\u4e0d\u80fd\u518d\u548c\u5176\u5b83\u5bf9\u8c61\u7ed1\u5b9a\u3002</p> <p>Copy constructor must pass its first argument by reference</p>"},{"location":"CS/CPP/final_review/#_6","title":"\u7c7b\u5185\u9759\u6001\u6210\u5458\u7684\u521d\u59cb\u5316","text":"<p>const static\u53ef\u4ee5\u5728\u7c7b\u5185\u76f4\u63a5\u521d\u59cb\u5316\uff0c\u975econst static\u6210\u5458\u9700\u8981\u5728\u7c7b\u5916\u521d\u59cb\u5316\u3002</p> <p>\u53ef\u4ee5\u8c03\u7528\u9ed8\u8ba4\u521d\u59cb\u5316A::n\uff0c\u81ea\u52a8\u521d\u59cb\u5316\u4e3a0\u3002\u6b64\u65f6\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u4e0d\u80fd\u7528n()\uff0c\u5426\u5219\u8ba4\u4e3a\u662f\u4e2a\u51fd\u6570\u3002\u6216\u8005\u5e26\u521d\u59cb\u503c\u521d\u59cb\u5316A::n(9)</p> <p>static\u548cconst - \u6ca1\u6709static\u5c31\u662fconst\u7684\u8bf4\u6cd5</p> <p>const\u7684\u51e0\u79cd\u5f62\u5f0f <pre><code>const int&amp; fun(int&amp; a); // \u4fee\u9970\u8fd4\u56de\u503c \nint&amp; fun(const int&amp; a); // \u4fee\u9970\u5f62\u53c2 \nint&amp; fun(int&amp; a) const {} // const\u6210\u5458\u51fd\u6570\n</code></pre></p> <p>const\u8fd4\u56de\u503c\uff1a\u662f\u4fee\u9970\u8fd4\u56de\u503c\u5f15\u7528\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u4e3a\u4e86\u907f\u514d\u8fd4\u56de\u503c\u88ab\u4fee\u6539\u7684\u60c5\u51b5</p> <p>\u8fd4\u56de\u503c\u662f\u5f15\u7528\u7684\u51fd\u6570\uff0c\u8fd9\u4e2a\u5f15\u7528\u5fc5\u7136\u4e0d\u662f\u4e34\u65f6\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u4e00\u5b9a\u662f\u6210\u5458\u53d8\u91cf\u6216\u8005\u51fd\u6570\u53c2\u6570\u3002\uff08\u53ea\u8981\u53c2\u6570\u4e0d\u9700\u8981\u4fee\u6539\u4e00\u5b9a\u52a0\u4e0aconst\uff09</p> <p>const\u53c2\u6570\u5fc5\u987b\u4f20\u7b7e\u540d\u540e\u5e26const\u7684\u51fd\u6570\uff1a\u8981\u628athis\u6307\u9488\u53d8\u6210const</p> <p>\u600e\u6837\u6784\u6210\u91cd\u8f7d - \u4e0d\u91cd\u8f7d\u7684     <pre><code>const int&amp; fun(int&amp; a); // \u53c2\u6570\u5217\u8868\u6ca1\u6709\u53d8 \nint&amp; fun(const int a); // \u56e0\u4e3a\u662f\u503c\u4f20\u9012\uff0c\u4e0d\u662fconst\u7684\u4e5f\u80fdtype conversion\n</code></pre></p> <ul> <li>\u91cd\u8f7d\u7684\uff1a\u53ea\u770b\u53c2\u6570\u5217\u8868\u53d8\u6ca1\u53d8 <pre><code>    int&amp; fun(const int&amp; a); // \u56e0\u4e3a\u662f\u53d8\u91cf\u4f20\u9012\uff0c\u8981\u6c42\u68c0\u67e5\u53c2\u6570\u7684const\uff0c\u662f\u53c2\u6570\u5217\u8868\u53d8\u4e86 \nint&amp; fun(int&amp; a) const {} // \u56e0\u4e3a\u9690\u542b\u53c2\u6570this\u7684const\u4e0e\u5426\u4e0d\u4e00\u6837\uff0c\u4e5f\u662f\u53c2\u6570\u5217\u8868\u53d8\u4e86\n</code></pre> \u200b</li> </ul>"},{"location":"CS/CPP/final_review/#inline-function","title":"inline function","text":"<p>\u4ee3\u66ff\u5b8f\u7684\u4e00\u79cd\u64cd\u4f5c\uff0c\u5728\u7f16\u8bd1\u9636\u6bb5\u628a\u6240\u6709\u51fd\u6570\u540d\u66ff\u6362\u6210inline function\u7684\u5b9e\u73b0 \u6bd4\u51fd\u6570\u7684\u4f18\u70b9\uff1a\u4e0d\u7528\u9891\u7e41\u8fdb\u6808\u51fa\u6808 \u6bd4\u5b8f\u7684\u4f18\u70b9\uff1a\u6709\u7c7b\u578b\u68c0\u67e5\uff0c\u80fd\u5199\u591a\u884c\uff0c\u80fd\u64cd\u4f5c\u7c7b\u7684\u79c1\u6709\u6210\u5458 inline\u5173\u952e\u5b57\u53ea\u6709\u51fa\u73b0\u5728\u51fd\u6570\u7684\u5b9a\u4e49\u800c\u4e0d\u662f\u58f0\u660e\u524d\u65f6\u624d\u6709\u7528\u3002 \u9759\u6001\u7ed1\u5b9a\u00a0Static\u00a0Binding \u3002\u80fd\u591f\u660e\u786e\u8fd0\u884c\u7684\u662f\u54ea\u4e2a\u7c7b\u7684\u65b9\u6cd5\u65f6\u4f1a\u53d1\u751f\u9759\u6001\u7ed1\u5b9a \u3002\u53d1\u751f\u5728\u7f16\u8bd1\u65f6\u523b\uff0c\u6240\u4ee5\u53c8\u53eb\u65e9\u7ed1\u5b9a \u52a8\u6001\u7ed1\u5b9aDynamic\u00a0Binding \u3002\u51fa\u73b0\u591a\u6001\uff0c\u7f16\u8bd1\u5668\u4e0d\u80fd\u660e\u786e\u5230\u5e95\u4f7f\u7528\u54ea\u4e2a\u7c7b\u7684\u65b9\u6cd5\u65f6\u53d1\u751f\u52a8\u6001\u7ed1\u5b9a \u3002\u53d1\u751f\u5728\u8fd0\u884c\u65f6\u523b\uff0c\u6240\u4ee5\u53c8\u53eb\u665a\u7ed1\u5b9a \u3002\u53ea\u6709\u5b58\u5728\u00a0virtual\u00a0\u65e6\u901a\u8fc7\u6307\u9488\u8bbf\u95ee\u65f6\uff0c\u624d\u4f1a\u53d1\u751f\u52a8\u6001\u7ed1\u5b9a</p> <p>static binding \u7f16\u8bd1\u65f6 <pre><code>class Animal { public: void eat() { cout &lt;&lt; \"Animal eats\" &lt;&lt; endl; } }; class Dog : public Animal { public: void eat() { cout &lt;&lt; \"Dog eats\" &lt;&lt; endl; } };\n</code></pre></p> <p>dynamic binding \u8fd0\u884c\u65f6 <pre><code>class Animal { public: virtual void eat() { cout &lt;&lt; \"Animal eats\" &lt;&lt; endl; } }; class Dog : public Animal { public: void eat() { cout &lt;&lt; \"Dog eats\" &lt;&lt; endl; } };\n</code></pre> \u200b</p> <p>\u5728\u4e0b\u9762\u7684\u60c5\u51b5\u4e0b\uff0c\u6784\u9020\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\uff1a - \u5bf9\u4e8e\u5168\u5c40\u5bf9\u8c61\uff0c\u5728main()\u4e24\u6570\u8fd0\u884c\u4e4b\u524d\uff0c\u6216\u8005\u5728\u540c\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143\u5185\u5b9a\u4e49\u7684\u4efb\u4e00\u51fd\u6570\u6216\u5bf9\u8c61 \u88ab\u4f7f\u7528\u4e4b\u524d\u3002\u5728\u540c\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143\u5185\uff0c\u5b83\u4eec\u7684\u6784\u9020\u4e24\u6570\u6309\u7167\u58f0\u660e\u7684\u987a\u5e8f\u521d\u59cb\u5316\u3002 - \u5bf9\u4e8e static\u00a0local\u00a0variables\uff0c\u00a0\u5728\u7b2c\u4e00\u6b21\u8fd0\u884c\u5230\u5b83\u7684\u58f0\u660e\u7684\u65f6\u5019. - \u5bf9\u4e8e automatic\u00a0storage\u00a0duration\u00a0\u7684\u5bf9\u8c61\uff0c\u5728\u5176\u58f0\u660e\u88ab\u8fd0\u884c\u65f6\u3002 - \u5bf9\u4e8e dynamic\u00a0storage\u00a0duration\u00a0\u7684\u5bf9\u8c61\uff0c\u5728\u5176\u7528\u00a0new\u00a0\u8868\u8fbe\u5f0f\u521b\u5efa\u65f6\u3002</p>"},{"location":"CS/CPP/final_review/#_7","title":"\u667a\u80fd\u6307\u9488","text":"<pre><code>std::unique_ptr&lt;T&gt; //\u72ec\u5360\u8d44\u6e90\u6240\u6709\u6743\u7684\u6307\u9488\u3002 \nstd::shared_ptr&lt;T&gt; //\u5171\u4eab\u8d44\u6e90\u6240\u6709\u6743\u7684\u6307\u9488\u3002 \nstd::weak_ptr&lt;T&gt; //\u5171\u4eab\u8d44\u6e90\u7684\u89c2\u5bdf\u8005\uff0c\u9700\u8981\u548cstd::shared_ptr \u4e00\u8d77\u4f7f\u7528\uff0c\u4e0d\u5f71\u54cd\u8d44\u6e90\u7684\u751f\u547d\u5468\u671f\u3002\n</code></pre> <p>\u4f7f\u7528\u88f8\u6307\u9488 \u6240\u4ee5\u9ed8\u8ba4\u53c2\u6570\u662f\u548c\u865a\u8868\u65e0\u5173\u4e0e\u5f53\u524d\u7c7b\u578b\u6709\u5173\u5417 \u662f\u7684 \u9ed8\u8ba4\u53c2\u6570\u4e0d\u8fdb\u865a\u8868 \u2192 upcasting\u7684\u65f6\u5019</p>"},{"location":"CS/CPP/final_review/#upcasting","title":"upcasting","text":"<ul> <li>\u57fa\u7c7b\u6307\u9488\u6307\u5b50\u7c7b</li> <li>\u9ed8\u8ba4\u53c2\u6570\u662f\u57fa\u7c7b\u7684</li> <li>\u57fa\u7c7b\u7684virtual\u51fd\u6570\uff0c\u8c03\u7528\u5b50\u7c7b\u7684</li> <li>\u57fa\u7c7b\u7684virtual\u51fd\u6570\u5728\u4e0b\u9762\u5168\u90fd\u662fvirtual</li> <li>\u57fa\u7c7b\u7684const\u548c\u5b50\u7c7b\u975econst\u4e0d\u662f\u4e00\u4e2a\u51fd\u6570</li> <li>\u57fa\u7c7b\u975evirtual\uff0c\u7528\u57fa\u7c7b\u6307\u9488\u8c03\u8c03\u7684\u662f\u57fa\u7c7b\u7684</li> <li>\u57fa\u7c7b\u975evirtual\uff0c\u7528\u5b50\u7c7b\u6307\u9488\u8c03\u8c03\u7684\u662f\u5b50\u7c7b\u7684</li> <li>\u57fa\u7c7b\u4e2d\u5b50\u7c7b\u4e0d\u5b58\u5728\u51fd\u6570\uff0c\u5b50\u7c7b\u80fd\u8c03\u57fa\u7c7b\u7684\u3002\u4f18\u5148\u7528\u5b50\u7c7b\u7684type conversion</li> <li>static\u5728\u5168\u5c40\u521d\u59cb\u5316\u540e\u624d\u80fd\u7528</li> </ul>"},{"location":"CS/CPP/templates/","title":"\u6a21\u677fTemplate \u548c \u6807\u51c6\u6a21\u677f\u5e93STL","text":"<p>\u9700\u6c42\uff1a\u8ba9\u6211\u4eec\u7684\u4ee3\u7801\u72ec\u7acb\u4e8e\u5177\u4f53\u7684\u7c7b\u578b\u5de5\u4f5c\u3002</p> <p>\u6211\u4eec\u5199\u51fa\u4e00\u4e2a\u9002\u7528\u4e8e\u6240\u6709\u7c7b\u578b\u7684\u6570\u636e\u7ed3\u6784\u7684\u7c7b\u6216\u7b97\u6cd5\uff08\u51fd\u6570\uff09\uff0c\u5728\u771f\u6b63\u9700\u8981\u4f7f\u7528\u65f6\u751f\u6210\u4e00\u4e2a\u9002\u7528\u4e8e\u6240\u9700\u7c7b\u578b\u7684\u5b9e\u4f8b\u3002\u8fd9\u79cd\u7f16\u7a0b\u8303\u5f0f\u79f0\u4e3a\u8303\u578b\u7f16\u7a0b\u3002</p> <p>\u6a21\u677f\u7c7b\u7684\u5199\u6cd5 <pre><code>template&lt;typename T&gt;\nclass Container{\nT *data;\nunsigned size, capa;\npiblic:\nContainer(unsigned capa = 512): data(new T[capa]){}\n~Container() {delete[] data;}\nT&amp; operator[](unsigned index) {return data[index];}\n}\n</code></pre></p> <p>\u8fd9\u91cctemplate T\u8868\u660e\u5b83\u63a5\u53d7\u4e00\u4e2a\u7c7b\u578b\u4f5c\u4e3a\u53c2\u6570\uff0c\u540d\u5b57\u662fT\u3002\u5728\u6a21\u677f\u7684\u5b9a\u4e49\u5185\u90e8\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5230\u8fd9\u4e2a\u7c7b\u578b\u53d8\u91cfT\u3002</p> <p>\u7279\u5316\uff1a\u6839\u636e\u6a21\u677f\u751f\u6210\u5b9e\u9645\u7684\u7c7b\u7684\u8fc7\u7a0b <pre><code>Container&lt;int&gt; ci;\nContainer&lt;double&gt; cd;\n</code></pre></p> <p>\u6a21\u677f\u51fd\u6570\u8981\u600e\u4e48\u5199 <pre><code>template&lt;typename T&gt;\nT abs(T x) {return x&gt;0?x:-x;}\n</code></pre></p> <p>\u6a21\u677f\u8fd0\u7b97\u7b26\u91cd\u8f7d\u600e\u4e48\u5199 <pre><code>template&lt;typename T&gt;\nclass Container {\nT* data;\nunsigned size = 0, capa;\npublic: Container(unsigned capa = 512) : data(new T[capa]), capa(capa){}\n~Container(){delete[] data;}\nT&amp; operator[](unsigned index) {return data[index];}\nconst T&amp; operator[](unsigned idnex) const {return data[index];}\nunsigned getSize() const {return size;}\nunsigned getCapa() const {return capa;}\nContainer &amp;add(T val){\ndata[size++] = val;\nreturn *this;\n}\n};\ntemplate&lt;typename T&gt;\nostream &amp; operator&lt;&lt;(ostream&amp; os, const Container&lt;T&gt;&amp;c){\nfor (unsigned i = 0; i &lt; c.getSize(); i++){\nos &lt;&lt; c[i] &lt;&lt; ' ';\nreturn os;\n}\n}\n</code></pre></p>"},{"location":"CS/CPP/templates/#reference","title":"Reference","text":"<p>7 \u6a21\u677f (I) - \u57fa\u672c\u77e5\u8bc6\u4e0e STL \u4f7f\u7528 - \u54b8\u9c7c\u6684\u7684\u4ee3\u7801\u7a7a\u95f4</p>"},{"location":"CS/CPP/templates/#template","title":"\u53ef\u53d8\u53c2\u6570\u6a21\u677f template <p>C++11\u7684\u65b0\u7279\u6027 \u5bf9\u53c2\u6570\u9ad8\u5ea6\u6cdb\u5316\uff0c\u53ef\u4ee5\u8868\u793a0\u5230\u4efb\u610f\u4e2a\u4efb\u610f\u7c7b\u578b\u7684\u53c2\u6570\u3002</p> <p>\u8bed\u6cd5 <pre><code>template &lt;class ...T&gt;  // \u58f0\u660e\u4e00\u4e2a\u53c2\u6570\u5305\uff0c\u8fd9\u4e2a\u53c2\u6570\u5305\u4e2d\u5305\u542b0\u5230\u4efb\u610f\u4e00\u4e2a\u53c2\u6570\u6a21\u677f\nvoid f(T... args);     // \u5728\u6a21\u677f\u5b9a\u4e49\u7684\u53f3\u8fb9\uff0c\u53ef\u4ee5\u5c06\u53c2\u6570\u5305\u5c55\u5f00\u6210\u4e00\u4e2a\u4e00\u4e2a\u72ec\u7acb\u53c2\u6570\n</code></pre></p> <p>\u6700\u5927\u7684\u96be\u70b9\uff1a\u5982\u4f55\u5c55\u5f00\u53ef\u53d8\u6a21\u677f\u53c2\u6570</p> <p>\u6253\u5370\u53c2\u6570\u4e2a\u6570\uff1a <pre><code>template&lt;class ...T&gt;\nvoid f(T... args)\n{\n        cout &lt;&lt; sizeof...(args) &lt;&lt; endl;\n}\n\nf();\nf(1, 2);\nf(1, 2.5, \"\");\n</code></pre></p> <p>\u9012\u5f52\u65b9\u5f0f\u5c55\u5f00\u53c2\u6570\u5305 <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\n// \u9012\u5f52\u7ec8\u6b62\u51fd\u6570\nvoid print(){\n    cout &lt;&lt; \"empty\" &lt;&lt; endl;\n}\n\n// \u5c55\u5f00\u51fd\u6570\ntemplate&lt;class T, class ...Args&gt;\nvoid print(T head, Args... rest){\n    cout &lt;&lt; \"parameter\" &lt;&lt; head &lt;&lt; endl;\n    print(rest...);\n}\n\nint main(){\n    print(1, 2, 3, 4);\n    return 0;\n}\n</code></pre></p> <p>\u4e0a\u8ff0\u4f8b\u5b50\u4f1a\u8f93\u51fa\u6bcf\u4e00\u4e2a\u53c2\u6570\uff0c\u76f4\u5230\u7a7a\u65f6\u8f93\u51faempty\u3002\u5c55\u5f00\u53c2\u6570\u5305\u7684\u51fd\u6570\u6709\u4e24\u4e2a\uff0c\u4e00\u4e2a\u662f\u9012\u5f52\u51fd\u6570\uff0c\u53e6\u4e00\u4e2a\u662f\u9012\u5f52\u7ec8\u6b62\u51fd\u6570\uff0c\u53c2\u6570\u5305Args\u2026\u5728\u5c55\u5f00\u7684\u8fc7\u7a0b\u4e2d\u9012\u5f52\u8c03\u7528\u81ea\u5df1\uff0c\u6bcf\u8c03\u7528\u4e00\u6b21\uff0c\u53c2\u6570\u5305\u4e2d\u7684\u53c2\u6570\u5c31\u5c11\u4e00\u4e2a\uff0c\u76f4\u5230\u6240\u6709\u53c2\u6570\u90fd\u5c55\u5f00\u4e3a\u6b62\u3002\u5f53\u6ca1\u6709\u53c2\u6570\u65f6\uff0c\u5219\u8c03\u7528\u975e\u6a21\u677f\u51fd\u6570print()\u7ec8\u6b62\u9012\u5f52\u8fc7\u7a0b\u3002</p> <p>\u7ec8\u6b62\u51fd\u6570\u4e5f\u53ef\u4ee5\u5199\u6210 <pre><code>template&lt;class T&gt;\nvoid print(T t){\n    cout &lt;&lt; t &lt;&lt; endl;\n}\n</code></pre></p> <p>\u53ef\u53d8\u6a21\u677f\u53c2\u6570\u6c42\u548c <pre><code>template&lt;typename T&gt;\nT sum(T t){\n    return t;\n}\ntemplate&lt;typename T, typename ... Types&gt;\nT sum(T first, Types ...rest){\n    return first + sum&lt;T&gt; (rest...);\n}\n\nsum(1, 2, 3, 4);\n</code></pre></p> <p>\u9012\u5f52\u51fd\u6570\u5c55\u5f00\u53c2\u6570\u5305\u662f\u4e00\u79cd\u6807\u51c6\u505a\u6cd5\uff0c\u4e5f\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u4f46\u662f\u7f3a\u70b9\u65f6\u5fc5\u987b\u8981\u4e00\u4e2a\u91cd\u8f7d\u7684\uff08\u540c\u540d\uff09\u9012\u5f52\u7ec8\u6b62\u51fd\u6570\u6765\u7ec8\u6b62\u9012\u5f52\u3002</p> <p>\u6216\u8005\u4e0d\u9012\u5f52\u65b9\u5f0f\uff0c\u8fd9\u79cd\u65b9\u5f0f\u9700\u8981\u501f\u52a9\u9017\u53f7\u8868\u8fbe\u5f0f\u548c\u521d\u59cb\u5316\u5217\u8868\u3002\u524d\u9762\u7684print\u53ef\u4ee5\u8fd9\u4e48\u5199 <pre><code>template&lt;class T&gt;\nvoid printarg(T t){\n    cout &lt;&lt; t &lt;&lt; endl;\n}\n\ntemplate &lt;class ...Args&gt;\nvoid expand(Args... args){\n    int arr[] = {(printarg(args), 0)...};\n}\n\nexpand(1, 2, 3, 4);\n</code></pre></p> <p>arr\u8fd9\u4e2a\u6570\u7ec4\u7684\u76ee\u7684\u5355\u7eaf\u662f\u5c55\u5f00\u53c2\u6570\u5305</p> <p>\u5982\u679c\u5c06\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u5c31\u53ef\u4ee5\u652f\u6301lambda\u8868\u8fbe\u5f0f <pre><code>template&lt;class F, class... Args&gt; void expand(const F&amp; f, Args&amp;&amp;...args){\ninitializer_list&lt;int&gt;{(f(std::forward&lt; Args&gt;(args)), 0)};\n}\nexpand([](int i){cout &lt;&lt; i &lt;&lt; endl;}, 1,2,3);\n</code></pre></p> <p>\u53ef\u4ee5\u5e26\u4efb\u610f\u4e2a\u6570\u4e0d\u540c\u7684\u53c2\u6570\uff0c\u6bd4\u5982std::tuple <pre><code>template&lt;class... Types&gt;\nclass tuple;\n</code></pre></p> <p>\u6a21\u677f\u504f\u7279\u5316\u548c\u9012\u5f52\u65b9\u5f0f\u5c55\u5f00\u53c2\u6570\u5305</p> <p>\u53ef\u53d8\u53c2\u6570\u6a21\u677f\u7c7b\u7684\u5c55\u5f00\u4e00\u822c\u9700\u8981\u5b9a\u4e49\u4e24\u5230\u4e09\u4e2a\u7c7b\uff0c\u5305\u62ec\u7c7b\u58f0\u660e\u548c\u504f\u7279\u5316\u7684\u6a21\u677f\u7c7b <pre><code>// \u524d\u5411\u58f0\u660e\ntemplate&lt;typename... Args&gt;\nstruct Sum;\n\n// \u57fa\u672c\u5b9a\u4e49\ntemplate&lt;typename First, typename... Rest&gt;\nstruct Sum&lt;First, Rest...&gt;{\n    enum { value = Sum&lt;First&gt;::value + Sum&lt;Rest...&gt;::value };\n}\n\n// \u9012\u5f52\u7ec8\u6b62\ntemplate&lt;typename Last&gt;\nstruct Sum&lt;Last&gt;{\n    enum { value = sizeof(Last) };\n}\n</code></pre></p>","text":""},{"location":"CS/CPP/templates/#stl","title":"\u6807\u51c6\u6a21\u677f\u5e93 STL <p>STL\u516d\u5927\u90e8\u4ef6\uff1a\u5bb9\u5668\uff08containers\uff09\uff0c\u5206\u914d\u5668\uff08allocators\uff09\uff0c\u7b97\u6cd5\uff08algorithm\uff09\uff0c\u8fed\u4ee3\u5668\uff08iterator\uff09\uff0c\u9002\u914d\u5668\uff08adapters\uff09\uff0c\u4eff\u51fd\u6570\uff08functors\uff09</p>","text":""},{"location":"CS/CPP/templates/#_1","title":"\u5e38\u7528\u7684\u5bb9\u5668","text":"<p>vector, deque, list, set/multiset, map/multimap \u7b49</p>"},{"location":"CS/CPP/templates/#1-vector","title":"1. Vector","text":"<p>Vector\u662f\u4e00\u79cd\u53d8\u957f\u6570\u7ec4\u3002 <pre><code>#include&lt;vector&gt;\nusing namespace std;\nvector&lt;int&gt; name;\nvector&lt;double&gt; name;\nvector&lt;char&gt; name;\nvector&lt;struct node&gt; name;\n// \u8fd9\u4e24\u4e2a\u4e3b\u8981\u6709\u901f\u5ea6\u4e0a\u7684\u533a\u522b\uff0carray\u975e\u5e38\u6162\uff0cvector\u5feb\u4e00\u4e9b\nvector&lt; vector&lt;int&gt; &gt; name; // &gt; &gt;\u4e4b\u95f4\u8981\u52a0\u7a7a\u683c\uff0c\u65b0\u6807\u51c6\u4e0d\u7528\u52a0\u4e86\nvector&lt;int&gt; array[SIZE]; // \u8fd9\u4e2a\u4e0d\u662f\u5f88\u5e38\u7528\uff0c\u56e0\u4e3a\u5bb9\u6613\u51fa\u9519\uff0c\u4e14\u6570\u7ec4\u4e0d\u77e5\u9053\u81ea\u5df1\u7684\u957f\u5ea6\uff0c\u8fd8\u6709std::array\n</code></pre></p> <p>\u8bbf\u95ee\u65b9\u5f0f <pre><code>// 1. \u901a\u8fc7\u4e0b\u6807\n#include&lt;iostream&gt;\n#include&lt;vector&gt;\nusing namespace std;\nint main()\n{\nvector&lt;int&gt; vi;\nvi.push_back(1);\ncout&lt;&lt;vi[0]&lt;&lt;endl;\nreturn 0;\n}\n// 2. \u901a\u8fc7\u8fed\u4ee3\u5668\nvector&lt;int&gt;::iterator\nvector&lt;double&gt;::iterator\n// \u4f8b\n#include&lt;iostream&gt;\n#include&lt;vector&gt;\nint main()\n{\nvector&lt;int&gt; v;\nfor(int i = 0; i &lt; 5; i++)\n{\nv.push_back(i); }\nvector&lt;int&gt;::iterator it=v.begin();\nfor(int i = 0; i &lt; v.size(); i++)\n{\ncout &lt;&lt; it[i] &lt;&lt; \" \";\n// \u4e5f\u53ef\u4ee5\u5199\u6210 cout &lt;&lt; * (it + i) &lt;&lt; \" \";\n}\nreturn 0;\n}\n// \u6216\u8005\u4f18\u96c5\u7684\u5199\u6cd5\n// \u56e0\u4e3a\u8fed\u4ee3\u5668\u4e0d\u652f\u6301 it &lt; v.end()\u7684\u5199\u6cd5\uff0c\u53ea\u80fd\u5199!=\nfor (vector&lt;int&gt;::iterator it=v.begin(); it!=v.end();it++)\n{\ncout &lt;&lt; *it &lt;&lt; \" \";\n}\n</code></pre> \u5e38\u7528\u51fd\u6570 <pre><code>push_back(item) // \u5728vector\u540e\u9762\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\npop_back(item) // \u5728vector\u540e\u9762\u5220\u9664\u4e00\u4e2a\u5143\u7d20\nsize(vector) // \u8fd4\u56de\u5143\u7d20\u4e2a\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(1)\nclear(vector) // \u6e05\u9664\u6240\u6709\u5143\u7d20\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(N)\ninsert(position, x) // \u5728position\u7684\u5730\u65b9\u63d2\u5165\u4e00\u4e2ax\n// \u4f8b\nv.insert(v.begin()+2, -1); // \u76f8\u5f53\u4e8e\u5728v[2]\u5904\u63d2\u5165\u4e00\u4e2a-1\nerase(position);\nerase(positionBegin, positionEnd);  // \u5de6\u95ed\u53f3\u5f00\n</code></pre></p>"},{"location":"CS/CPP/templates/#2-set","title":"2. set","text":"<p>\u96c6\u5408\u662f\u4e0d\u5141\u8bb8\u5143\u7d20\u91cd\u590d\u7684\u65e0\u5e8f\u5bb9\u5668 <pre><code>#include&lt;set&gt;\nusing namespace std;\nset&lt;int&gt; name;\nset&lt;double&gt; name;\nset&lt;char&gt; name;\nset&lt;struct node&gt; name;\nset&lt;set&lt;int&gt; &gt; name;\n</code></pre> \u56e0\u4e3a\u65e0\u5e8f\uff0cset\u53ea\u80fd\u901a\u8fc7iterator\u8bbf\u95ee\uff0c\u9664\u4e86vector\u548cstring\u4e4b\u5916\u7684\u5bb9\u5668\u90fd\u4e0d\u80fd\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee <pre><code>set&lt;int&gt;::iterator it;\nset&lt;char&gt;::iterator it;\n</code></pre> \u5e38\u7528\u51fd\u6570 <pre><code>st.insert(X);\nst.find(X); // \u8fd4\u56deset\u4e2dvalue\u6240\u5bf9\u5e94\u7684\u8fed\u4ee3\u5668\uff0c\u4e5f\u5c31\u662fvalue\u7684\u6307\u9488\n// \u4f8b\nset&lt;int&gt;::iterator it = st.find(2);\ncout &lt;&lt; *it &lt;&lt; endl;\n// \u53ef\u4ee5\u76f4\u63a5\u5199\u6210\ncout &lt;&lt; *(st.find(2)) &lt;&lt; endl;\nst.erase(it); // \u5220\u9664\u67d0\u4e2a\u5730\u5740\u7684\u5143\u7d20\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(1)\nst.erase(X); // \u5220\u9664\u67d0\u4e2a\u5143\u7d20\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(N)\nst.erase(itBegin, itEnd);\nst.size();\n</code></pre></p>"},{"location":"CS/CPP/templates/#3-deque","title":"3. deque","text":"<p>deque\u662f\u7531\u4e00\u6bb5\u5b9a\u91cf\u8fde\u7eed\u7a7a\u95f4\u6784\u6210\uff0c\u4e00\u65e6\u8981\u5728deque\u7684\u524d\u7aef\u548c\u5c3e\u7aef\u589e\u52a0\u7a7a\u95f4\uff0c\u4fbf\u914d\u7f6e\u4e00\u6bb5\u8fde\u7eed\u7a7a\u95f4\uff0c\u4e32\u5728\u6574\u4e2adeque\u7684\u5934\u90e8\u548c\u5c3e\u90e8.</p>"},{"location":"CS/CPP/templates/#4-list","title":"4. list","text":""},{"location":"CS/CPP/templates/#5-mapunordered_map","title":"5. map/unordered_map","text":""},{"location":"CS/CPP/templates/#6-string","title":"6. string","text":"<pre><code>// init\n#include&lt;string&gt;\nstring str;\nstring str = \"Hello\";\ncin &gt;&gt; str;\ncout &lt;&lt; str;\n// assignment\nchar cstr1[20];\nchar cstr2[20] = \"jaguar\";\nstring str1;\nstring str2 = \"panther\";\ncstr1 = cstr2; // illegal\nstr1 = str2; // legal\n// concatenation\nstring str3;\nstr3 = str1 + str2;\nstr1 += str2;\nstr1 += \"a string literal\";\n// constructors (Ctors)\nstring (const char *cp, int len);\nstring (const string&amp; s2, int pos);\nstring (const string&amp; s2, int pos, int len);\n// sub-string\nsubstr (int pos, int len);\n// modification\nassign (...);\ninsert (...);\ninsert (int pos, const string&amp; s);\nerase (...);\nappend (...);\nreplace (...);\nreplace (int pos, int len, const string&amp; s);\n...\n// search\nfind (const string&amp; s);\n// File I/O\n#include &lt;ifstream&gt; // read from file\n#include &lt;ofstream&gt;  // write to file\n// write into file\nofstream File1(\"...\");\nFile1 &lt;&lt; \"Hello world\" &lt;&lt; std::enl;\n// read from file\nifstream File2(\"...\");\nstd::string str;\nFile2 &gt;&gt; str;\n</code></pre>"},{"location":"CS/CPP/templates/#_2","title":"\u7b97\u6cd5","text":"<p>\u7b97\u6cd5\u90e8\u5206\u4e3b\u8981\u7531<code>&lt;algorithm&gt; &lt;numeric&gt; &lt;functional&gt;</code>\u7ec4\u6210 <code>&lt;algorithm&gt;</code>\u662f\u6700\u5927\u7684\u4e00\u4e2a <code>&lt;numeric&gt;</code>\u4f53\u79ef\u5f88\u5c0f\uff0c\u53ea\u5305\u62ec\u51e0\u4e2a\u5728\u5e8f\u5217\u4e0a\u8fdb\u884c\u7b80\u5355\u6570\u5b66\u8fd0\u7b97\u7684\u6a21\u677f\u51fd\u6570 <code>&lt;functional&gt;</code>\u5b9a\u4e49\u4e86\u4e00\u4e9b\u6a21\u677f\u7c7b\uff0c\u7528\u4ee5\u58f0\u660e\u51fd\u6570\u5bf9\u8c61</p>"},{"location":"CS/CPP/templates/#iterator","title":"\u8fed\u4ee3\u5668 Iterator","text":"<p>\u7528\u8fed\u4ee3\u5668\u53ef\u4ee5\u8bfb\u53d6\u5b83\u6307\u5411\u7684\u5143\u7d20\u3002\u8fed\u4ee3\u5668\u540d\u5c31\u8868\u793a\u8fed\u4ee3\u5668\u6307\u5411\u7684\u5143\u7d20\uff0c\u901a\u8fc7\u975e\u5e38\u91cf\u8fed\u4ee3\u5668\u8fd8\u80fd\u4fee\u6539\u5176\u6307\u5411\u7684\u5143\u7d20\u3002 <pre><code>#include&lt;iostream&gt; #include&lt;vector&gt; using namespace std; int main() { vector&lt;int&gt; v; for (int n = 0; n &lt; 5; ++n) v.push_back(n); vector&lt;int&gt;::iterator i; for (i = v.begin(); i != v.end(); i++) { cout &lt;&lt; *i &lt;&lt; \" \"; // *i \u662f i \u6307\u5411\u7684\u5143\u7d20 *i *= 2; \n} }\n</code></pre></p>"},{"location":"CS/CPP/templates/#stl_1","title":"\u7c7b\u5e93\u548cSTL <p>STL\u662f\u8303\u578b\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u4e00\u4e2a\u8303\u4f8b\uff0c\u542b\uff1a\u5bb9\u5668\uff08container\uff09\u3001\u8fed\u4ee3\u5668\uff08iterator\uff09\u3001\u7b97\u6cd5\uff08algorithm\uff09\u3001\u51fd\u6570\u5bf9\u8c61\uff08function object\uff09\u3002\u7c7b\u5e93\u662f\u7c7b\u7684\u96c6\u5408\uff0c\u662f\u4e00\u79cd\u9884\u5b9a\u4e49\u7684\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u5e93\u3002</p>","text":""},{"location":"CS/CPP/templates/#c","title":"C++\u7684\u6807\u51c6\u5e93","text":"<p>using namespace std;</p> <ul> <li>\u57fa\u672c\u7684\u8fd0\u884c\u5e93\uff1a\u4f8b\u5982\u652f\u6301\u52a8\u6001\u5185\u5b58\u5206\u914d\u3001\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606fRTTI</li> <li>C\u8bed\u8a00\u7684\u6807\u51c6\u5e93</li> <li>\u6807\u51c6\u6a21\u677f\u5e93STL</li> <li>\u8f93\u5165\u8f93\u51fa\u6d41\u7c7b\u5e93\uff08I/O stream\uff09\u548c\u5b57\u7b26\u4e32</li> <li>\u6570\u503c\u8ba1\u7b97\u5e93</li> </ul>"},{"location":"CS/CPP/templates/#stl_2","title":"STL\u4e2d\u7684\u5bb9\u5668\u7c7b","text":"<p>\u5bb9\u5668\uff08container\uff09\u7c7b\u662f\u7528\u6765\u5bb9\u7eb3\u3001\u5305\u542b\u4e00\u7ec4\u5143\u7d20\u6216\u5143\u7d20\u96c6\u5408\u7684\u5bf9\u8c61\u7684\u3002STL\u4e2d\u5b9a\u4e49\u4e86\u591a\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u5bb9\u5668\uff0c\u4f8b\u5982</p> <ul> <li>\u5411\u91cf vector</li> <li>\u7ebf\u6027\u8868 list</li> <li>\u961f\u5217 queue</li> <li>\u6620\u5c04 map</li> <li>\u96c6\u5408 set</li> <li>\u5b57\u7b26\u4e32 string</li> <li>stack: stack</li> <li>associative array: map</li> </ul>"},{"location":"CS/CPP/templates/#vector","title":"\u5411\u91cf vector","text":"<p>\u5b9a\u4e49</p> <pre><code>vector&lt;int&gt; iv;\nvector&lt;int&gt; cv(5);\nvector&lt;int&gt; cv(5, 'x');\nvector&lt;int&gt; iv2(iv);\n</code></pre> <p>\u4f7f\u7528</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;vector&gt;\nusing namespace std;\nint main()\n{\nvector&lt;char&gt; v;  // create zero-len vector\nint i;\n// put values into a vector\nfor (i = 0; i &lt; 10; i++)\nv.push_back('A' + i);\n// can access vector contents using subsripting\nfor (i = 0; i &lt; 10; i++)\ncout &lt;&lt; v[i] &lt;&lt; \" \";\ncout &lt;&lt; endl;\n// access via iterator\nvector&lt;char&gt;::iterator p = v.begin();\nwhile(p != v.end())\n{\ncout &lt;&lt; *p &lt;&lt; \" \";\np++;\n}\nreturn 0;\n}\n</code></pre>"},{"location":"CS/CPP/templates/#list","title":"\u7ebf\u6027\u8868 list","text":"<p>\u5b9a\u4e49\u4e86\u53cc\u5411\u7684\u7ebf\u6027\u8868\uff0c\u53c8\u53ef\u79f0\u4e3a\u53cc\u5411\u94fe\u8868\u3002list\u7c7b\u53ea\u652f\u6301\u987a\u5e8f\u8bbf\u95ee\u3002</p> <pre><code>// sort a list\n#include&lt;iostream&gt;\n#include&lt;list&gt;\n#include&lt;cstdlib&gt;\nusing namespace std;\nint main()\n{\nint i;\nlist&lt;char&gt; lst;\n// create a list of random characters\nfor (i = 0; i &lt; 10; i++)\nlist.push_back('A' + (rand()%26));\n}\n</code></pre>"},{"location":"CS/CPP/templates/#set","title":"\u96c6\u5408 set","text":"<pre><code>#include&lt;set&gt;\n#include&lt;iostream&gt;\n#include&lt;string&gt;\nint main()\n{\nstd::set&lt;std::string&gt; source;\nstd::string input;\nfor(int i=0;i&lt;6;i++)\n{\nstd::cin&gt;&gt;input;\nsource.insert(input);\n}\nstd::set&lt;std::string&gt;::iterator at = source.begin();\nwhile(at != source.end())\nstd::cour &lt;&lt; * at++ &lt;&lt; std::endl;\n}\n</code></pre>"},{"location":"CS/CPP/templates/#multiset","title":"multiset","text":""},{"location":"CS/CPP/templates/#map","title":"\u6620\u5c04 map","text":""},{"location":"CS/CPP/templates/#queue","title":"\u961f\u5217 queue","text":""},{"location":"CS/CPP/templates/#stdstack","title":"std::stack","text":""},{"location":"CS/CPP/templates/#stdpair","title":"std::pair","text":""},{"location":"CS/CPP/templates/#string","title":"\u5b57\u7b26\u4e32string","text":""},{"location":"CS/CPP/templates/#_3","title":"\u7b97\u6cd5\u5e93 ` <ul> <li>\u6392\u5e8f sort()</li> <li>\u67e5\u627e find()</li> <li>\u66ff\u6362 replace()</li> <li>\u5408\u5e76 merge()</li> <li>\u53cd\u5e8f reverse()</li> <li>\u7edf\u8ba1 count()</li> </ul>","text":""},{"location":"CS/CPP/templates/#sort","title":"\u6392\u5e8f\u7b97\u6cd5sort","text":"<pre><code>#include&lt;algorithm&gt;\n#include&lt;iostream&gt;\n#include&lt;string&gt;\n#include&lt;vector&gt;\nusing namespace std;\nvoid load(vector&lt;string&gt;&amp;);\nvoid print(vector&lt;string&gt;);\nconst int SIZE = 8;\nint main()\n{\nvector&lt;string&gt; v(SIZE);\nload(v);\nsort(v.begin(), v.end());  // \u6307\u5b9a\u6392\u5e8f\u7684\u8d77\u6b62\u4f4d\u7f6e\nprint(v);\nreturn 0;\n}\n// \u4f1a\u6309\u7167\u5b57\u6bcd\u5e8f\u6392\u5e8f\n</code></pre>"},{"location":"CS/CPP/templates/#_4","title":"\u8fed\u4ee3\u5668 <p>\u662f\u4e00\u79cd\u7c7b\u4f3c\u6307\u9488\u7684\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fed\u4ee3\u5668\u6765\u8bbf\u95ee\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u3002</p> <ul> <li>\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668 RandIter</li> <li>\u53cc\u5411\u8fed\u4ee3\u5668 BiIter</li> <li>\u524d\u5411\u8fed\u4ee3\u5668 ForIter</li> <li>\u8f93\u5165\u8fed\u4ee3\u5668 InIter</li> <li>\u8f93\u51fa\u8fed\u4ee3\u5668 OutIter</li> </ul>","text":""},{"location":"CS/CPP/templates/#reverse-iterator","title":"\u53cd\u5411\u8fed\u4ee3\u5668 reverse iterator","text":"<pre><code>#include&lt;list&gt;\n#include&lt;iostream&gt;\nint main()\n{\nusing namespace std;\nlist&lt;int&gt; c1;\nlist&lt;int&gt;::iterator c1_Iter;\nlist&lt;int&gt;::reverse_iterator c1_rIter;\nc1_rIter = c1.rbegin(); // the last element\n}\n</code></pre>"},{"location":"CS/CPP/templates/#_5","title":"\u53c2\u8003\u8d44\u6599 <p>https://zhuanlan.zhihu.com/p/344558356 LJJ PPT</p>","text":""},{"location":"CS/Compiler/","title":"Compiler","text":"<p>\u662f ZJU \u7f16\u8bd1\u539f\u7406\u7b14\u8bb0\u3002\u4f5c\u4e3a xyx \u4e8b\u65e0\u5de8\u7ec6\u7248\u672c\u7684\u7b14\u8bb0\uff08\u53ef\u5728\u672c\u7ad9\u9996\u9875\u627e\u5230\uff09\u7684\u8865\u5145\uff0c\u6211\u505a\u4e86\u4e00\u4e9b\u6211\u505a\u9898\u65f6\u9700\u901f\u67e5\u7684\u8d44\u6599\u7684\u6574\u7406\u3002</p> <p>\u8fdb\u5ea6\uff1a</p> <ul> <li>[x] parsing and grammer</li> </ul>"},{"location":"CS/Compiler/parsing/","title":"Parsing","text":"<p>\u672c\u9875\u5b8c\u6210\u4e86\u5173\u4e8e LL(1), LR(0), SLR (aka. SLR(1)), LR(1), LALR(1) \u6587\u6cd5\u7684\u4e00\u4e9b\u5e38\u7528\u533a\u522b\u7684\u6574\u7406\u3002\u7531\u4e8e\u4f5c\u8005\u4e5f\u5b66\u5f97\u4e0d\u597d\uff0c\u5982\u679c\u6709\u9519\uff0c\u8bf7\u5411\u6211\u6307\u51fa\uff08\u53ef\u60dc\u8bc4\u8bba\u533a\u6211\u8fd8\u6ca1\u7814\u7a76\u597d\u600e\u6837\u914d\uff0c\u4e00\u5b9a\u5c3d\u5feb\u914d\u4e0a\uff0c\u53ef\u4ee5\u5148\u5176\u5b83\u9014\u5f84\u8054\u7cfb\u6211\uff09\u3002</p> <p>\u672c\u9875\u9762\u5199\u4f5c\u65f6\u7684\u7279\u70b9\u662f\u5c3d\u91cf\u7528\u81ea\u7136\u8bed\u8a00\u6765\u63cf\u8ff0\u7279\u70b9\uff0c\u800c\u4e0d\u662f latex \u6570\u5b66\u516c\u5f0f\u548c\u56fe\u50cf\u3002\u539f\u56e0\u662f\u6211\u5728\u5176\u5b83\u8d44\u6599\u641c\u5230\u7684\u8bb2\u89e3\u90fd\u4e8b\u65e0\u5de8\u7ec6\u7528\u5927\u91cf\u516c\u5f0f\u548c\u56fe\u50cf\uff0c\u4f7f\u7406\u89e3\u53d8\u5f97\u5bb9\u6613\uff0c\u4f46\u4e0d\u9002\u5408\u901f\u67e5\u548c\u8bb0\u5fc6\u3002\u76f4\u767d\u4e00\u70b9\u8bf4\u5c31\u662f\u7b14\u8005\u4e0d\u60f3\u770b\u5230\u5b83\u4eec\uff0c\u4e00\u770b\u5c31\u5934\u75bc\u3002\u56e0\u6b64\u4e5f\u9020\u6210\u4e86\u672c\u6587\u6863\u7684\u4e00\u4e2a\u7f3a\u70b9\uff1a\u4e0d\u662f\u4e3a\u521d\u5b66\u8005\u8bbe\u8ba1\u7684\u3002\u521d\u5b66\u8005\u63a8\u8350\u9605\u8bfb xyx \u7684\u7b14\u8bb0\u3002\u505a\u9898\u65f6\u901f\u67e5\u8bb0\u5fc6\u53ef\u4ee5\u770b\u672c\u6587\u6863\u3002</p> <p>\u600e\u6837\u5224\u65ad\u6587\u6cd5\u662f...\u4e0d\u662f...</p> \u6587\u6cd5 \u5224\u65ad\u662f \u5224\u65ad\u4e0d\u662f LL(1) (\u4e0d\u542b\u5de6\u9012\u5f52 &amp;&amp; \u5bf9\u4e8e\u6587\u6cd5\u4e2d\u6bcf\u4e00\u4e2a non-terminal\uff0c\u5b83\u7684\u4ea7\u751f\u5f0f\u7684 SELECT set\uff08\u5373\u5f00\u5934\u7684 terminal \u4e0e\u5f00\u5934\u7684 non-terminal \u7684 FIRST\uff09\u4e24\u4e24\u4e0d\u4ea4\uff0c\u4e14\u4e0d\u80fd\u540c\u65f6\u63a8\u51fa\u7a7a\u4e32) || \u4ea7\u751f\u5f0f lhs \u4e24\u4e24\u4e0d\u76f8\u540c \u542b\u5de6\u9012\u5f52 || \u9047\u5230\u4e0b\u4e00\u4e2a\u8981\u626b\u63cf\u7684 terminal \u8f93\u5165\u65f6\uff0c\u6709\u8d85\u8fc7\u4e00\u79cd derive \u65b9\u6cd5 LR(0) \u6784\u9020\u51fa LR(0) items DFA\uff0c\u5982\u679c\u4e0d\u5b58\u5728 shift-reduce &amp; reduce-reduce conflicts LR(0) items DFA \u5b58\u5728 shift-reduce | reduce-reduce conflicts SLR (aka. SLR(1)) \u6784\u9020\u51fa LR(0) items DFA\uff0c\u9996\u5148\u5176\u4e0d\u5b58\u5728 reduce-reduce \u51b2\u7a81\uff0c\u4e14\u5b58\u5728 shift-reduce \u51b2\u7a81\uff08\u5426\u5219\u5c31\u4e3a LR(0) \u8bed\u6cd5\u4e86\uff09\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u6709 shift-reduce \u51b2\u7a81\u7684\u5730\u65b9\uff0c\u72b6\u6001\u91cc\u9762\u6709\u53ef shift \u89c4\u5219\u4e5f\u6709\u53ef reduce \u89c4\u5219\uff0c\u5982\u679c reduce \u540e\u5f97\u5230\u7684 non-terminal \u7684 FOLLOW set \u4e0e\u53ef shift \u89c4\u5219\u65b0\u7eb3\u5165\u7684 terminal \u90fd\u6ca1\u6709\u4ea4 shift-reduce conflict \u4e2d\u5982\u679c reduce \u540e\u5f97\u5230\u7684 non-terminal \u7684 FOLLOW set \u4e0e\u53ef shift \u89c4\u5219\u65b0\u7eb3\u5165\u7684 terminal \u6709\u4ea4 LR(1) \u6784\u9020\u51fa LR(1) items DFA\uff0c\u5982\u679c\u4e0d\u5b58\u5728 shift-reduce &amp; reduce-reduce conflicts LR(1) items DFA\uff0c\u5982\u679c\u5b58\u5728 shift-reduce | reduce-reduce conflicts LALR(1) \u6784\u9020\u51fa LR(1) items DFA\uff0c\u5982\u679c\u5408\u5e76\u540c\u5fc3\u96c6\u540e\u6ca1\u6709\u4ea7\u751f reduce-reduce conflicts\uff08\u4e00\u5b9a\u4e0d\u4f1a\u4ea7\u751f shift-reduce conflicts\uff0c\u540c\u5fc3\u96c6\u4e0d\u957f\u90a3\u6837\uff09 LR(1) items DFA \u5982\u679c\u5408\u5e76\u540c\u5fc3\u96c6\u540e\u4ea7\u751f\u4e86 reduce-reduce conflicts <p>\u5927\u5bb6\u7684 items DFA \u600e\u4e48\u753b...</p> \u6587\u6cd5 items DFA LL(1) \u5b83\u6ca1\u6709\u2026 LR(0) \u5148\u753b NFA\uff1a\u6240\u6709 shift \u7684\u60c5\u51b5\u9760\u8bfb\u53d6 non-terminal/terminal \u8f6c\u6362\uff0c\u6240\u6709 reduce \u7684\u60c5\u51b5\u7a7a\u8f6c\u79fb\u3002\u7136\u540e\u753b DFA\uff1a\u628a\u7a7a\u8f6c\u79fb\u5408\u5e76\u3002 SLR (aka. SLR(1)) \u540c\u753b LR(0)\u3002\u53ea\u662f\u591a\u5224\u65ad\u4e00\u4e0b shift-reduce conflict \u7684 FOLLOW \u548c terminal \u91cd\u5408\u60c5\u51b5\uff0c\u4f46\u8fd9\u4e2a\u53ea\u4f53\u73b0\u5728 parse table\uff0c\u4e0d\u5c5e\u4e8e DFA \u5173\u5fc3\u7684\u4e8b\u3002 LR(1) \u5176\u5b83\u6b65\u9aa4\u540c\u753b LR(0)\uff0c\u53ea\u662f\u591a\u4e86\u5728\u6240\u6709 items \u540e\u9762\u7528\u9017\u53f7\u9694\u5f00\u4e00\u4e2a lookahead symbol\u3002lookahead \u7684\u9009\u62e9\u5f88\u50cf\u9009\u62e9\u4e86\u5bf9\u5e94\u4ea7\u751f\u5f0f\uff08\u4e0d\u8bba\u662f lhs/rhs\uff09\u7684 FOLLOW set\uff0c\u5373\u5bf9\u5e94\u4ea7\u751f\u5f0f\u4e4b\u540e\u63a5\u7684 terminal \u662f\u4ec0\u4e48\u3002 LALR(1) \u540c\u753b LR(1)\u3002\u53ea\u662f\u9700\u8981\u5408\u5e76\u6240\u6709\u540c\u5fc3\u96c6\uff0c\u540c\u5fc3\u96c6\u662f\u6307\u4ea7\u751f\u5f0f\u76f8\u540c\u4f46\u662f\u53ea\u6709 lookahead symbol \u4e0d\u540c\u7684\u90a3\u4e9b\u72b6\u6001\u3002 <p>\u5927\u5bb6\u7684 parse table \u600e\u4e48\u753b...</p> \u6587\u6cd5 parse table LL(1) non-terminals, nullable, FIRST, FOLLOW LR(0) states, shift&amp;reduce, goto SLR (aka. SLR(1)) states, shift&amp;reduce, goto LR(1) states, shift&amp;reduce, goto LALR(1) states, shift&amp;reduce, goto"},{"location":"CS/DB/","title":"DBMS","text":""},{"location":"CS/DB/#whats-this","title":"what's this","text":"<p>\u8fd9\u91cc\u662f\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u7406\u8bba\u8bfe\u3002</p> <p>content table:</p> <ul> <li>SQL grammar</li> <li>ER model</li> <li>Normal Forms</li> <li>Storage Structure </li> <li>Query</li> <li>Transaction</li> <li>Recovery</li> </ul>"},{"location":"CS/DB/#brief-intro-to-dbms-course","title":"Brief intro to DBMS course","text":"<p>\u4e00\u4e9b\u4e0e\u8003\u8bd5\u6709\u5173\u7684\u504f\u95e8\u4e1c\u897f\u3002</p> <p>\u4e00\u4e2a\u671f\u672b\u8003\u70b9\uff1a\u6570\u636e\u5e93\u5b66\u79d1\u7684\u56db\u4e2a\u56fe\u7075\u5956</p> \u4eba\u7269 \u5e74\u4efd \u8d21\u732e Charles William Bachman 1973 \u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf DBMS \u7684\u5f00\u53d1\u3002\u4f7f\u7528\u5de5\u7a0b\u65b9\u6cd5\u6765\u8bbe\u8ba1\u548c\u5b9e\u73b0\u6570\u636e\u5e93\u7ba1\u7406\u3002 Edgar Frank \"Ted\" Codd 1981 \u5173\u7cfb\u6570\u636e\u5e93\u7406\u8bba\uff0c\u63d0\u51fa\u4e86\u5173\u7cfb\u6a21\u578b\u7684\u6982\u5ff5\uff0c\u8bbe\u8ba1\u4e86\u5173\u7cfb\u6570\u636e\u5e93\u7684\u6570\u5b66\u57fa\u7840\uff0c\u5e76\u53d1\u660e\u4e86SQL\u3002 Raj Reddy 1994 \u5206\u5e03\u5f0f\u6570\u636e\u5e93\u7cfb\u7edf\u3002\u63d0\u51fa\u4e86\u4e00\u79cd\u540d\u4e3aDAI\uff08distributed artificial intelligence\uff09\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97\u6a21\u578b\u3002\u4f7f\u6570\u636e\u53ef\u4ee5\u5728\u591a\u53f0\u8ba1\u7b97\u673a\u4e4b\u95f4\u5171\u4eab\u548c\u5206\u5e03 Mike Ralph Stonebraker 2014 \u9762\u5411\u5bf9\u8c61\u6570\u636e\u5e93\u7cfb\u7edf\u3002\u63d0\u51fa\u4e86\u4e00\u79cd\u540d\u4e3a O-ODBS (object-oriented database system) \u7684\u65b0\u578b\u6570\u636e\u5e93\u7cfb\u7edf\u67b6\u6784\uff0c\u5c06\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u548c\u6570\u636e\u5e93\u7cfb\u7edf\u76f8\u7ed3\u5408\u3002\u4f7f\u6570\u636e\u5e93\u7cfb\u7edf\u53ef\u4ee5\u66f4\u597d\u652f\u6301\u590d\u6742\u5e94\u7528\u548c\u66f4\u5927\u89c4\u6a21\u6570\u636e\u3002"},{"location":"CS/DB/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<p>\u5b8c\u6574\u8d44\u6599</p> <ul> <li>Database System Concepts (8th ed)</li> <li>sjl ls ppt + \u667a\u4e91\u8bfe\u5802\uff08\u5927\u5bb6\u8bfe\u540e\u8fd8\u662f\u8981\u542c\u4e00\u542c sjl \u8001\u5e08\u7684\u8bfe\uff09</li> <li>\u5c0f\u89d2\u9f99\u7b14\u8bb0</li> <li>HobbitQia \u7684\u7b14\u8bb0\u672c</li> <li>DBMS Solutions</li> </ul> <p>\u4e13\u9898\u5e16\u5b50</p> <ul> <li>\u767d\u8bdd\u8be6\u89e3\u6570\u636e\u5e93\u51fd\u6570\u4f9d\u8d56\u548cArmstrong\u516c\u7406\u53ca\u5176\u5f15\u7406</li> <li>B+\u6811\u770b\u8fd9\u4e00\u7bc7\u5c31\u591f\u4e86\uff08B+\u6811\u67e5\u627e\u3001\u63d2\u5165\u3001\u5220\u9664\u5168\u4e0a\uff09</li> <li>MySQL\u7d22\u5f15\u5e95\u5c42\uff1aB+\u6811\u8be6\u89e3</li> </ul>"},{"location":"CS/DB/ERmodel/","title":"E-R model","text":""},{"location":"CS/DB/SQL/","title":"SQL Grammar","text":""},{"location":"CS/DB/SQL/#_1","title":"\u5173\u7cfb\u4ee3\u6570","text":"<p>5 \u79cd\u57fa\u672c\u64cd\u4f5c</p> <ul> <li>select</li> <li>project</li> <li>join</li> <li>union</li> <li>rename</li> </ul> <p>\u6269\u5c55\u64cd\u4f5c</p> <ul> <li>cartesian product</li> <li>set difference</li> <li>set intersection</li> <li>assignment</li> </ul>"},{"location":"CS/DB/SQL/#sql","title":"SQL \u8bed\u6cd5","text":"<p>select</p> <p>select distinct</p> <p>where</p> <p>and / or</p> <p>order by</p> <p>insert to</p> <p>update delete</p> <p>JOIN \u8bed\u53e5</p> <p>\u8fde\u63a5\uff1a\u7528\u4e8e\u628a\u591a\u4e2a\u8868\u7684\u884c\u7ed3\u5408\u8d77\u6765\u3002</p> <p></p> <p>SQL \u4e2d\u51e0\u79cd join \u7684\u7c7b\u578b</p> <ul> <li>inner join: \u5982\u679c\u8868\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u5339\u914d\uff0c\u5219\u8fd4\u56de\u8fd9\u4e9b\u884c</li> <li>left join: \u5373\u4f7f\u53f3\u8868\u4e2d\u6ca1\u6709\u5339\u914d\uff0c\u4e5f\u8981\u4ece\u5de6\u8868\u8fd4\u56de\u6240\u6709\u7684\u884c\uff08\u53ea\u662f\u8fd9\u6837\u5c31\u6ca1\u6709\u53f3\u8868\u7684\u5b57\u6bb5\uff09</li> <li>right join: \u5373\u4f7f\u5de6\u8868\u4e2d\u6ca1\u6709\u5339\u914d\uff0c\u4e5f\u8981\u4ece\u53f3\u8868\u8fd4\u56de\u6240\u6709\u7684\u884c\uff08\u53ea\u662f\u8fd9\u6837\u5c31\u6ca1\u6709\u5de6\u8868\u7684\u5b57\u6bb5\uff09</li> <li>full join: \u53ea\u8981\u5176\u4e2d\u4e00\u4e2a\u8868\u5b58\u5728\u5339\u914d\uff0c\u5c31\u8fd4\u56de\u884c</li> </ul>"},{"location":"CS/DB/design/","title":"Database Design \u6570\u636e\u5e93\u8bbe\u8ba1","text":"<p>\u8fd9\u7ae0\u5173\u6ce8\u5982\u4f55\u5728\u78c1\u76d8 disk \u4e0a\u5b9e\u73b0\u4e00\u4e2a database\u3002</p>"},{"location":"CS/DB/design/#storage-structure","title":"Storage Structure \u5b58\u50a8\u7ed3\u6784","text":"<p>\u9996\u5148\u9700\u8981\u4ecb\u7ecd storage hierarchy\u3002\u4e00\u4e2a\u4ece\u9876\uff08\u5bb9\u91cf\u6700\u5c0f\u6700\u5feb\u7684\uff09\u5411\u4e0b\uff08\u5bb9\u91cf\u6700\u5927\u6700\u6162\u7684\uff09\u7684\u56fe\u793a\u5982\u4e0b\uff0c</p> <p><pre><code>    /\\   Primary storage \u4e3b\u5b58\u50a8\u5668: CPU register \u5bc4\u5b58\u5668, cache \u7f13\u5b58, main memory \u4e3b\u5b58\n   /--\\  Secondary storage \u4e8c\u7ea7\u5b58\u50a8\u5668: flash memory \u95ea\u5b58, magnetic disk \u78c1\u76d8\n  /----\\ Teriary storage \u4e09\u7ea7\u5b58\u50a8\u5668: optical disk \u5149\u76d8, magnetic tape \u78c1\u5e26\n --------\n</code></pre> \u5176\u4e2d\u6700\u9876\u5c42 primary storage \u662f volatile\uff08\u6613\u5931\u7684\uff09\uff0c\u610f\u601d\u662f\u5982\u679c\u8ba1\u7b97\u673a\u65ad\u7535\u91cd\u542f\uff0c\u5c31\u4f1a\u4e22\u5931\uff1b\u4e0b\u9762\u4e24\u5c42\u90fd\u662f non-volatile\uff08\u4e0d\u6613\u5931\u7684\uff09\uff0c\u610f\u601d\u662f\u5373\u4f7f\u8ba1\u7b97\u673a\u65ad\u7535\uff0c\u4e5f\u4e0d\u4f1a\u4e22\u5931\u3002</p> <p>\u4e0b\u9762\u4f9d\u6b21\u7b80\u5355\u4ecb\u7ecd\u6bcf\u4e2a\u5b58\u50a8\u5668\uff1a</p> <ul> <li> <p>Cache \u7f13\u5b58</p> <p>\u7f13\u5b58\u662f\u901f\u5ea6\u6700\u5feb\u7684\u5b58\u50a8\u5668\uff0c\u4f46\u9020\u4ef7\u548c\u7ef4\u62a4\u6210\u672c\u6700\u9ad8\uff0c\u6240\u4ee5\u76f8\u5bf9\u6bd4\u8f83\u5c0f\u3002\u867d\u7136\u6570\u636e\u5e93\u65e0\u9700\u7ef4\u62a4 cache\uff0c\u4f46\u6709\u7684\u6570\u636e\u5e93\u5728\u8bbe\u8ba1\u67e5\u8be2\u7684\u65f6\u5019\u4f1a\u5173\u6ce8 cache \u6548\u7387\u3002</p> </li> <li> <p>Main memory \u4e3b\u5b58</p> <p>\u4e3b\u5b58\u91cc\u7684\u6570\u636e\u53ef\u4ee5\u76f4\u63a5\u88ab CPU \u6267\u884c\u8ba1\u7b97\u64cd\u4f5c\uff0c\u8fd9\u91cc\u7684\u8ba1\u7b97\u64cd\u4f5c\u5c31\u662f\u6307 machine instruction \u673a\u5668\u6307\u4ee4\u3002\u4e3b\u5b58\u4e5f\u76f8\u5bf9\u5c0f\uff0c\u867d\u7136\u73b0\u5728\u6709\u7684\u5546\u4e1a\u6570\u636e\u5e93\u53ef\u4ee5\u88ab\u6574\u4e2a\u585e\u8fdb\u4e3b\u5b58\u3002\u4e3b\u5b58\u662f volatile \u4e5f\u5c31\u662f\u65ad\u7535\u4e22\u5931\u7684\uff0c\u7cfb\u7edf\u574f\u6389\u4e5f\u4f1a\u4e22\u5931\u3002</p> </li> <li> <p>Flash memory \u95ea\u5b58     \u95ea\u5b58\u53ca\u4ee5\u4e0b\u7684\u5b58\u50a8\u5668\u5c31\u90fd\u662f\u65ad\u7535\u4e0d\u4e22\u5931\u7684\u4e86\u3002\u95ea\u5b58\u7684\u7ef4\u62a4\u6210\u672c\u6bd4\u4e3b\u5b58\u4f4e\uff0c\u6bd4\u78c1\u76d8\u9ad8\u3002</p> <p>\u95ea\u5b58\u53ef\u4ee5\u7528\u4e8e\u5728\u201cUSB flash drive\u201d\uff08U \u76d8\uff09\u4e2d\u4fdd\u5b58\u6570\u636e\uff1b\u8fd8\u6709 Solid-state drive \u56fa\u6001\u786c\u76d8\uff08SSD\uff09\u4e5f\u4f7f\u7528\u4e86\u95ea\u5b58\uff0c\u4f46\u662f\u63d0\u4f9b\u4e86\u78c1\u76d8\u4e00\u6837\u7684\u63a5\u53e3\uff0c\u53ef\u4ee5\u4ee3\u66ff\u78c1\u76d8\u7684\u529f\u80fd\u3002</p> </li> <li> <p>Magnetic disk \u78c1\u76d8</p> <p>\u4e5f\u53eb hard disk drive \u786c\u76d8\u3002\u78c1\u76d8\u662f\u4e3b\u8981\u7684\u957f\u671f online \u5b58\u50a8\u7684\u4ecb\u8d28\uff0c\u4f46\u662f CPU \u5982\u679c\u60f3\u8981\u64cd\u4f5c\u78c1\u76d8\u4e0a\u7684\u6570\u636e\uff0c\u5c31\u5148\u8981\u628a\u6570\u636e\u79fb\u5230\u4e3b\u5b58\u91cc\uff0c\u5904\u7406\u5b8c\u518d\u79fb\u51fa\u6765\u3002\u78c1\u76d8\u7684\u5b58\u50a8\u80fd\u529b\u5728\u9010\u5e74\u4e0a\u5347\u3002</p> </li> <li> <p>Optical disk \u5149\u76d8</p> <p>\u5e38\u89c1\u7684 disk video disk\uff08DVD\uff09\u5c31\u662f\u4e00\u79cd\u5149\u76d8\u3002\u5149\u76d8\u4e0a\u7684\u6570\u636e\u88ab\u7528\u6fc0\u5149\u8bfb\u5199\u3002\u5b83\u662f\u4e00\u79cd write-once, read-many (WORM) \u4ecb\u8d28\uff0c\u5373\u53ea\u80fd\u5199\u4e00\u6b21\uff0c\u4f46\u662f\u80fd\u8bfb\u5f88\u591a\u6b21\u3002</p> </li> <li> <p>Magnetic tape \u78c1\u76d8</p> <p></p> <p>\u78c1\u76d8\u4e00\u822c\u662f\u7528\u6765\u5907\u4efd\u548c\u5b58\u6863\u4e0d\u5e38\u7528\u7684\u6570\u636e\u7684\uff0c\u8fd9\u7c7b\u6570\u636e\u5c31\u4e0d\u5e38\u4f7f\u7528\uff0c\u4e00\u822c\u9700\u8981\u88ab\u5b89\u5168\u5730\u957f\u671f\u4fdd\u5b58\u3002\u78c1\u76d8\u4e0a\u7684\u6570\u636e\u5fc5\u987b\u88ab\u987a\u5e8f\u8bfb\u53d6\uff0c\u5373\u8bfb\u5199\u5934\u5728\u78c1\u76d8\u4e0a\u79fb\u52a8\uff0c\u8bfb\u54ea\u91cc\u79fb\u5230\u54ea\u91cc\uff0c\u6240\u4ee5\u5b83\u53eb sequential-access storage\uff0c\u8fd9\u6837\u8bfb\u53d6\u662f\u975e\u5e38\u6162\u7684\u3002\u76f4\u63a5\u8bfb\u53d6\u7684 direct-access storage\uff0c\u6bd4\u5982\u78c1\u76d8\u548c SSD storage\uff0c\u8bfb\u53d6\u5c31\u76f8\u5bf9\u5feb\u4e00\u4e9b\uff0c\u56e0\u4e3a\u53ef\u4ee5\u76f4\u63a5\u8bfb\u53d6\u76d8\u4e0a\u7684\u4efb\u4f55\u5730\u65b9\u3002</p> <p>\u4e00\u4e2a\u78c1\u76d8\u6709\u4e0a\u5341\u4e07\u4e2a track\uff08\u78c1\u9053\uff09\uff0c\u4e00\u4e2a\u78c1\u9053\u53c8\u6709\u4e0a\u5343\u4e2a sector\uff08\u6247\u533a\uff0c\u662f\u8ba1\u7b97\u673a\u548c\u78c1\u76d8\u4ea4\u6362\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\uff09\u3002\u78c1\u76d8\u4e0a\u5bfb\u9053\u7684\u5de5\u5177\u662f arm assemly \u8bfb\u5199\u5934\uff0c\u8bfb\u5199\u5934\u8fdb\u8fdb\u9000\u9000\u6765\u5bfb\u627e\u6570\u636e\u5728\u54ea\u4e2a\u78c1\u9053\u4e0a\uff0c\u7b49\u5bf9\u5e94\u6247\u533a\u65cb\u8f6c\u5230\u8bfb\u5199\u5934\uff0c\u624d\u5f00\u59cb\u4f20\u8f93\u6570\u636e\u3002</p> <p>\u540c\u6837\u7684\u78c1\u9053\u7ec4\u6210\u4e00\u4e2a\u67f1\u9762\uff0c\u5bf9\u4e8e\u5927\u6587\u4ef6\uff0c\u6700\u597d\u50a8\u5b58\u5728\u540c\u4e00\u4e2a\u67f1\u9762\u4e0a\uff0c\u8fd9\u6837\u53ef\u4ee5\u5e76\u884c\u8bfb\u5199\u3002</p> </li> </ul>"},{"location":"CS/DB/design/#performance-measures-of-disk","title":"Performance Measures of Disk \u78c1\u76d8\u6027\u80fd\u8ba1\u7b97","text":"<p>\u6d4b\u91cf\u78c1\u76d8\u7684\u6027\u80fd\u9700\u8981\u4e00\u4e9b\u91cf\u5316\u6307\u6807\uff0c\u901a\u5e38\u6211\u4eec\u8003\u8651\u6570\u636e\u6570\u636e\u8bbf\u95ee\u7684\u7528\u65f6\u548c\u3002</p> <ul> <li> <p>Access time\uff08\u8bbf\u95ee\u65f6\u95f4\uff09</p> <ul> <li>Seek time\uff08\u5bfb\u9053\u65f6\u95f4\uff09</li> <li>Rotational latency\uff08\u65cb\u8f6c\u5ef6\u8fdf\uff09</li> </ul> </li> <li> <p>Data-transfer Rate\uff08\u6570\u636e\u4f20\u8f93\u7387\uff09</p> </li> </ul>"},{"location":"CS/DB/design/#_1","title":"\u78c1\u76d8\u6027\u80fd\u4f18\u5316","text":""},{"location":"CS/DB/design/#raid","title":"RAID","text":"<p>!!!     (\u8fd9\u5757\u5728 db \u548c os \u91cc\u90fd\u4e0d\u8003\uff0c\u4f46\u662f\u90fd\u4f1a\u7ecf\u5e38\u63d0\u5230\uff0c\u5f88\u795e\u79d8\uff0c\u6240\u4ee5\u987a\u4fbf\u505a\u4e00\u4e0b\u7b14\u8bb0)</p> <p>RAID \u5168\u79f0\u662f redundant arrays of independent disk \u72ec\u7acb\u78c1\u76d8\u5197\u4f59\u9635\u5217\u3002\u5b83\u7684\u6765\u5386\u662f\u56e0\u4e3a\uff0c\u8fc7\u53bb\u7684\u7cfb\u7edf\u8bbe\u8ba1\u8005\u4eec\u8ba4\u4e3a\u4f7f\u7528\u591a\u4e2a\u5c0f\u578b\u3001\u5ec9\u4ef7\u78c1\u76d8\u7ec4\u6210\u7684\u5b58\u50a8\u7cfb\u7edf\u662f\u4e00\u4e2a\u66f4\u7ecf\u6d4e\u9ad8\u6548\u7684\u9009\u9879\uff0c\u6240\u4ee5\u539f\u6765 RAID \u4e2d\u7684 I \u662f inexpensive \u7684\u610f\u601d\u3002\u4f46\u73b0\u5728\u6240\u6709\u78c1\u76d8\u5728\u7269\u7406\u5c3a\u5bf8\u4e0a\u90fd\u5f88\u5c0f\uff0c\u5bb9\u91cf\u66f4\u5927\u7684\u78c1\u76d8\u5b9e\u9645\u4e0a\u5177\u6709\u66f4\u4f4e\u7684\u6bcf\u5146\u5b57\u8282\u6210\u672c\u3002\u5f00\u53d1\u8005\u4f7f\u7528 RAID \u7cfb\u7edf\u73b0\u5728\u4e3b\u8981\u56e0\u5176\u66f4\u9ad8\u7684\u53ef\u9760\u6027\u548c\u6027\u80fd\uff0c\u548c\u7ba1\u7406\u64cd\u4f5c\u7b80\u4fbf\u3002</p> <p>!!!      TODO</p> <p>\u901a\u8fc7\u5e76\u884c\u6765\u52a0\u901f</p> <p></p> <ul> <li>RAID 0\uff1a\u65e0\u5197\u4f59\u65e0\u6821\u9a8c\u7684\u78c1\u76d8\u9635\u5217</li> <li>RAID 1\uff1a\u955c\u50cf\u78c1\u76d8\u9635\u5217</li> <li>RAID 2\uff1a\u91c7\u7528\u7ea0\u9519\u7684\u6d77\u660e\u7801\u7684\u78c1\u76d8\u9635\u5217</li> <li>RAID 3\uff1a\u4f4d\u4ea4\u53c9\u5947\u5076\u6821\u9a8c\u7684\u78c1\u76d8\u9635\u5217</li> <li>RAID 4\uff1a\u5757\u8f83\u5dee\u5947\u5076\u6821\u9a8c\u7684\u78c1\u76d8\u9635\u5217</li> <li>RAID 5\uff1a\u65e0\u72ec\u7acb\u6821\u9a8c\u7684\u5947\u5076\u6821\u9a8c\u78c1\u76d8\u9635\u5217</li> </ul>"},{"location":"CS/DB/design/#file-system","title":"File System \u6587\u4ef6\u7cfb\u7edf","text":"<p>\u6570\u636e\u5e93\u662f\u5b58\u50a8\u5728\u4e00\u7cfb\u5217\u7684\u6587\u4ef6\u4e2d\u7684\uff0c\u6587\u4ef6\u5185\u90e8\uff0c\u6bcf\u4e2a\u6587\u4ef6\u4e2d\u6709\u4e00\u7cfb\u5217\u7684 records \u8bb0\u5f55\uff0c\u6bcf\u4e2a record \u542b\u6709\u4e00\u7cfb\u5217\u7684 fields \u57df\u3002</p> <p>\u5728\u8bbe\u8ba1\u65f6\uff0c\u4e00\u822c\u6709\u4e00\u4e9b\u5047\u8bbe\uff1a\uff081\uff09\u5047\u8bbe\u8bb0\u5f55\u7684\u957f\u5ea6\u662f\u56fa\u5b9a\u7684\uff0c\uff082\uff09\u5047\u8bbe\u6bcf\u4e2a\u6587\u4ef6\u91cc\u53ea\u6709\u4e00\u79cd\u8bb0\u5f55\uff0c\uff083\uff09\u5047\u8bbe\u4e0d\u540c\u7684\u6587\u4ef6\u88ab\u7528\u4e8e\u4e0d\u540c\u7684\u5173\u7cfb\u3002</p>"},{"location":"CS/DB/design/#_2","title":"\u8bb0\u5f55\u7684\u7c7b\u578b","text":"<p>\u8bb0\u5f55\u5206\u4e3a</p> <ul> <li> <p>Fixed-length records \u5b9a\u957f\u8bb0\u5f55</p> <p>\u8bb0\u5f55 i \u4ece\u5b57\u8282 n * (i-1) \u5904\u5f00\u59cb\uff0c</p> </li> <li> <p>Variable-length records \u53d8\u957f\u8bb0\u5f55</p> </li> </ul>"},{"location":"CS/DB/design/#_3","title":"\u8bb0\u5f55\u7684\u6392\u5e03","text":"<p>\u4e00\u4e2a\u65b0\u7684\u8bb0\u5f55\u8981\u63d2\u5165\u6587\u4ef6\u65f6\uff0c\u53ef\u4ee5\u6709\u51e0\u79cd\u7b97\u6cd5\u6765\u51b3\u5b9a\u63d2\u5165\u5230\u6587\u4ef6\u7684\u54ea\u4e2a\u4f4d\u7f6e\uff1a</p> <ul> <li>Heap: Record can be placed anywhere in the file where there is space. \u65b0\u7684\u8bb0\u5f55\u53ef\u80fd\u88ab\u63d2\u5165\u4efb\u610f\u7a7a\u4f4d\u3002</li> <li>Sequential: Store records in sequential order, based on the value of the search key of each record.</li> <li>In multitable clustering file organization: In a multitable clustering file organization, records of several different relations can be stored in the same file Motivation. Store related records on the same block to minimize I/O. \u5728\u4e00\u4e2a\u591a\u8868\u6587\u4ef6\u7ed3\u6784\u4e2d\uff0c\u591a\u4e2a\u4e0d\u540c\u5173\u7cfb\u7684\u8bb0\u5f55\u53ef\u4ee5\u5b58\u50a8\u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e2d\u3002\u5c06\u76f8\u5173\u7684\u8bb0\u5f55\u4fdd\u5b58\u5728\u540c\u4e00\u4e2a\u6570\u636e\u5757\u4e2d\uff0c\u53ef\u4ee5\u6700\u5927\u9650\u5ea6\u51cf\u5c11I/O\u3002</li> <li>B+ tree: Ordered storage even with inserts/deletes. \u5373\u4f7f\u5728\u63d2\u5165\u548c\u5220\u9664\u7684\u65f6\u5019\u4e5f\u80fd\u6709\u5e8f\u5b58\u50a8\u3002</li> <li>Hashing: A hashed function computed on search key; the result specifies in which block of the file the record should be placed. \u5bf9\u641c\u7d22\u952e\u8fdb\u884c\u6563\u5217\u8ba1\u7b97\u7684\u51fd\u6570\uff1b\u7ed3\u679c\u6307\u5b9a\u4e86\u8bb0\u5f55\u5e94\u8be5\u653e\u5728\u6587\u4ef6\u7684\u54ea\u4e2a\u5757\u4e2d\u3002</li> </ul> <p>\u6bcf\u4e2a\u6587\u4ef6\u88ab\u5212\u5206\u4e3a\u56fa\u5b9a\u957f\u5ea6\u7684 blocks\u3002block \u662f\u6570\u636e\u5b58\u53d6\u548c\u7a7a\u95f4\u5206\u914d\u7684\u57fa\u672c\u5355\u4f4d\u3002</p> <p>\u4e00\u4e2a block \u5305\u542b\u591a\u6761\u8bb0\u5f55\u3002\u5728\u4f20\u7edf\u7684\u6570\u636e\u5e93\u4e2d\uff0c\u8bb0\u5f55\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7 block\uff0c\u6bcf\u6761\u8bb0\u5f55\u4e00\u5b9a\u90fd\u662f\u5b8c\u6574\u7684\u3002\u8bb0\u5f55\u4e4b\u95f4\u7528\u94fe\u8868\u6765\u8fde\u63a5\u3002</p> <p>\u8bb0\u5f55\u5206\u4e3a\u5b9a\u957f\u8bb0\u5f55\u548c\u53d8\u957f\u8bb0\u5f55\u4e24\u79cd\u3002</p> <ul> <li> <p>Fixed-length records \u5b9a\u957f\u8bb0\u5f55</p> <p>Storage record i starting from byte n*(i-1) where n is the size of each record. Record access is simple but records may cross blocks.</p> <p>Modification of fixed-length records: do not allow records to cross block boundaries.</p> <p>Deletion of record i: alternatives</p> <p>\u53ef\u4ee5\u4e0d move records\uff0cbut link all free records on a free list. \u8981\u5220\u9664\u7684\u6761\u76ee\u6253\u4e0a\u6807\u8bb0\uff0c\u5f62\u6210\u4e00\u4e2a\u7a7a\u8bb0\u5f55\u7684\u94fe\u8868\u3002\u672a\u6765\u8981\u63d2\u5165\u65f6\u4e5f\u5e94\u9009\u62e9\u7a7a\u8bb0\u5f55\uff0c\u53ea\u8981\u901a\u8fc7\u6307\u9488\u5c31\u53ef\u4ee5\u627e\u5230\uff0c\u7136\u540e\u66f4\u65b0\u8bb0\u5f55\u5373\u53ef\u3002</p> <p></p> </li> <li> <p>Varaible-length records \u53d8\u957f\u8bb0\u5f55     variable-length records arise in database systems in several ways:</p> <ul> <li>storage of multiple record types in a file</li> <li>record types that allow variable lengths for one or more fields such as strings (varchar)</li> <li>record types that allow repeating fields (used in some older data models)</li> </ul> <p>variable length attributes represented by fixed size (offset, length), with actual data storad after all fixed length atrributes.</p> <p>null values represented by null-value bitmap ()</p> <p>\u4e0d\u5b9a\u957f\u7684\u4fdd\u5b58\u5728\u540e\u9762\uff0c\u5b9a\u957f\u7684\uff08offset length\uff09\u4fdd\u5b58\u5728\u524d\u9762\u3002</p> </li> </ul> <p>slotted page structure \u5206\u69fd\u9875</p> <ul> <li>number of record entries</li> <li>end of free space \u7684\u6307\u9488\uff0c\u504f\u79fb\u91cf\u4e5f\u8981\u8c03\u6574\u3002\u4e5f\u53ef\u4ee5\u6682\u65f6\u4e0d\u8c03\u6574\uff0c\u7b49\u540e\u9762\u5982\u679c\u9700\u8981\u5206\u914d\u5185\u5b58\u4f46\u4e0d\u591f\u65f6\uff0c\u518d\u4e00\u6b21\u6027\u8c03\u6574\u4e4b\u524d\u7684\u7a7a\u95f4\u3002</li> </ul> <p>\u5178\u578b\u7684\u53d8\u957f\u8bb0\u5f55\u6709\u5982\u4e0b\u7279\u70b9\uff1a</p> <ul> <li>\u5c5e\u6027\u6309\u987a\u5e8f\u5b58\u50a8</li> <li>\u53d8\u957f\u7684\u53d8\u91cf\u7528 offset + data \u7684\u5f62\u5f0f\u5b58\u50a8\uff0c\u7a7a\u503c\u7528 null-value bitmap \u5b58\u50a8</li> </ul> <p>\u5b58\u50a8\u7f13\u51b2\u533a\u7684\u7ba1\u7406</p>"},{"location":"CS/DB/design/#index","title":"Index \u7d22\u5f15","text":"<p>\u6570\u636e\u5e93\u4e2d\u5f15\u5165\u7d22\u5f15\u6982\u5ff5\uff0c\u662f\u4e3a\u4e86\u52a0\u5feb\u67e5\u627e\u901f\u5ea6\u3002</p> <p>\u5728\u5f15\u5165\u7d22\u5f15\u7684\u65f6\u5019\uff0c\u9700\u8981\u5173\u6ce8\u7684\u56e0\u7d20\u90fd\u6709\u5982\u4e0b\u51e0\u79cd</p> <ul> <li> <p>Access type \u8bbf\u95ee\u7c7b\u578b</p> </li> <li> <p>Access time \u8bbf\u95ee\u65f6\u95f4</p> </li> <li> <p>Insertion time \u63d2\u5165\u65f6\u95f4</p> </li> <li> <p>Deletion time \u5220\u9664\u65f6\u95f4</p> </li> <li> <p>Space overhead \u7a7a\u95f4\u5f00\u9500</p> </li> </ul> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u952e\u7684\u6392\u5217\u65b9\u5f0f\u5206\u4e3a ordered index \u987a\u5e8f\u7d22\u5f15\u548c hased index \u4e24\u79cd\u3002</p> <ul> <li>\u987a\u5e8f\u7d22\u5f15 \uff08TODO \u4f60\u662f\u4e0d\u662f\u6307 B+ \u6811\u554a\uff09</li> <li>hash index</li> </ul> <p>\u800c\u7d22\u5f15\u6307\u5411\u6570\u636e\u7684\u65b9\u5f0f\u53c8\u5206\u4e3a\uff1a</p> <ul> <li> <p>Dense index \u5bc6\u96c6\u7d22\u5f15     \u5bc6\u96c6\u7d22\u5f15\u4e0b\uff0c\u6bcf\u4e00\u6761\u6570\u636e\u8bb0\u5f55\u90fd\u6709\u5bf9\u5e94\u7684\u7d22\u5f15\u3002</p> </li> <li> <p>Sparse inedx \u7a00\u758f\u7d22\u5f15     \u6b64\u65f6\u4e0d\u662f\u6bcf\u4e00\u6761\u8bb0\u5f55\u90fd\u6709\u5bf9\u5e94\u7684\u7d22\u5f15\u3002\u7d22\u5f15\u53ea\u6307\u5411\u5bf9\u5e94\u7684\u4e00\u90e8\u5206\u8bb0\u5f55\uff0c\u5176\u4f59\u8bb0\u5f55\u901a\u8fc7\u94fe\u8868\u4e00\u6837\u7684\u6307\u9488\u8fde\u63a5\u8d77\u6765\u3002\u6b64\u65f6\u9700\u8981\u7684\u7a7a\u95f4\u548c\u63d2\u5165\u5220\u9664\u65b0\u7d22\u5f15\u7684\u5f00\u9500\u8f83\u5c0f\uff0c\u4f46\u662f\u6bd4\u5bc6\u96c6\u7684\u7d22\u5f15\u6162\u3002</p> </li> <li> <p>Secondary index \u4e8c\u7ea7\u7d22\u5f15     \u7d22\u5f15\u901a\u8fc7\u4e00\u4e2a\u5927\u7684 bucket \u6765\u5bfb\u627e\u6240\u6307\u5411\u7684\u5730\u65b9\u3002</p> </li> <li> <p>Multilevel index \u591a\u7ea7\u7d22\u5f15     \u5206\u4e3a outer index \u548c inner index\u3002</p> </li> <li> <p>Clustering Index     A clustering index is an index whose search key also defines the sequentially ordered, a clustering index is an index whose search key also defines the sequenrial order of the file. Clustering indices are also called primary indices.</p> </li> </ul>"},{"location":"CS/DB/design/#b","title":"B+ \u6811","text":"<p>\u4ecb\u7ecd\u5e38\u7528\u7684 B+ \u6811\u6570\u636e\u7ed3\u6784\u3002\u4e0e fds \u4e2d\u5b9a\u4e49\u76f8\u540c\uff0c\u4f46\u662f\u518d\u4ecb\u7ecd\u4e00\u6b21\u3002</p> <p>B+ \u6811\u662f\u4e00\u79cd\u5e73\u8861\u7684\uff08\u6bcf\u5c42\u90fd\u662f\u6ee1\u7684\uff09\u591a\u5206\u6811\uff08\u4e0d\u6b62\u4e24\u4e2a\u8282\u70b9\uff09\u3002\u4e00\u4e2a m \u9636\u7684 B+ \u6811\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a</p> <ul> <li>\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u53ea\u6709 m \u4e2a\u8282\u70b9</li> <li>\u6bcf\u4e2a\u975e\u53f6\u5b50\u7ed3\u70b9\uff08\u9664\u4e86\u6839\u8282\u70b9\uff09\u5177\u6709\u81f3\u5c11 \u2308m/2\u2309 \u4e2a\u5b50\u8282\u70b9\u3002</li> <li>\u5982\u679c\u6839\u8282\u70b9\u4e0d\u662f\u53f6\u8282\u70b9\uff0c\u5219\u6839\u8282\u70b9\u81f3\u5c11\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\u3002</li> <li>\u5177\u6709 k \u4e2a\u5b50\u8282\u70b9\u7684\u975e\u53f6\u8282\u70b9\u5305\u542b k-1 \u4e2a\u952e\u3002</li> <li>\u6240\u6709\u53f6\u5b50\u90fd\u51fa\u73b0\u5728\u540c\u4e00\u6c34\u5e73\uff0c\u9ad8\u5ea6\u4e00\u81f4\u3002</li> <li>\u4e24\u4e2a\u641c\u7d22\u952e\u4e4b\u95f4\u7684\u6307\u9488\u6307\u5411\u7684\u6570\u636e\uff0c\u603b\u662f\u5728\u8fd9\u4e24\u4e2a\u641c\u7d22\u952e\u4e4b\u95f4\u3002</li> </ul> <p>\u5728\u5b9e\u73b0\u4e2d\uff0cB+ \u6811\u7684\u4e00\u4e2a\u8282\u70b9\u7684\u5927\u5c0f\u548c\u4e00\u4e2a\u78c1\u76d8\u533a\u5757\u4e00\u6837\u5927\uff08\u901a\u5e38\u662f 4 KB\uff09\uff0c\u800c\u7d22\u5f15\u7684\u89c4\u6a21\u4e00\u822c\u5728 100 \u5de6\u53f3\u3002</p> <p>B+ Tree Visualization \u662f\u4e00\u4e2a B+ \u6811\u53ef\u89c6\u5316\u7684\u5de5\u5177\u3002</p> <p>\u4ecb\u7ecd\u67e5\u8be2\u3001\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u3002</p> <p>\u5f53 B+ \u6811\u4e2d\u7684\u8282\u70b9 TODO \u5177\u4f53\u7684\u6761\u4ef6\u662f\u4ec0\u4e48\uff0c\u6211\u4eec\u8fd9\u91cc\u8bb0\u4f5c\u7834\u574f\u4e86 B+ \u6811\u3001\u5143\u7d20\u8fc7\u591a\u6216\u5143\u7d20\u8fc7\u5c11\uff0c\u5c31\u9700\u8981\u8003\u8651\u66f4\u65b0\u7d22\u5f15\u3002</p> <ul> <li> <p>\u63d2\u5165\uff1a</p> <ul> <li>\u5982\u679c\u88ab\u63d2\u5165\u5173\u952e\u5b57\u6240\u5728\u7684\u8282\u70b9\u63d2\u5165\u540e\u4e0d\u7834\u574f B+ \u6811\uff0c\u5c31\u53ef\u4ee5\u63d2\u5165\u3002</li> <li>\u5982\u679c\u63d2\u5165\u540e\u67d0\u8282\u70b9\u5143\u7d20\u6570\u76ee\u591a\u4e86\uff0c\u4e14\u5206\u88c2\u540e\u4e0d\u7834\u574f B+ \u6811\u6761\u4ef6\uff0c\u5c31\u53ef\u4ee5\u5206\u88c2\uff1b\u5982\u679c\u63d2\u5165\u540e\u7236\u8282\u70b9\u5143\u7d20\u6570\u76ee\u4e5f\u8fc7\u591a\u4e86\uff0c\u5c31\u5206\u88c2\u7236\u8282\u70b9\u3002</li> </ul> </li> <li> <p>\u5220\u9664\uff1a</p> <ul> <li>\u5982\u679c\u5220\u9664\u540e\u4e0d\u7834\u574f B+ \u6811\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u5220\u9664</li> <li>\u5982\u679c\u5220\u9664\u67d0\u8282\u70b9\u4e2d\u6700\u5927\u6216\u6700\u5c0f\u7684\u5173\u952e\u5b57\uff0c\u5c31\u6d89\u53ca\u5230\u66f4\u6539\u53cc\u4eb2\u8282\u70b9\u4e00\u76f4\u5230\u6839\u8282\u70b9\u503c\u7684\u66f4\u6539</li> <li>\u5982\u679c\u5220\u9664\u540e\u67d0\u8282\u70b9\u4e2d\u5143\u7d20\u8fc7\u5c11\uff0c\u4f46\u662f\u5411\u5144\u5f1f\u8282\u70b9\u501f\u5143\u7d20\u540e\u4e0d\u7834\u574f B+ \u6811\uff0c\u5c31\u53ef\u4ee5\u501f</li> <li>\u5982\u679c\u5220\u9664\u540e\u67d0\u8282\u70b9\u4e2d\u5143\u7d20\u8fc7\u5c11\uff0c\u4f46\u662f\u4e0e\u5144\u5f1f\u8282\u70b9\u5408\u5e76\u540e\u4e0d\u7834\u574f B+ \u6811\uff0c\u5c31\u53ef\u4ee5\u5408\u5e76\uff1b\u5982\u679c\u5408\u5e76\u540e\u4f7f\u7236\u8282\u70b9\u5143\u7d20\u8fc7\u5c11\uff0c\u5219\u4e5f\u5e94\u501f\u6216\u5408\u5e76\u3002</li> </ul> </li> </ul> <p>\u5206\u522b\u5206\u6790\u51e0\u79cd\u6570\u636e\u64cd\u4f5c\u4e0b\uff0cB+ \u6811\u7684\u6027\u80fd\uff1a</p> <ul> <li> <p>\u67e5\u627e search</p> <p>\u67e5\u627e\u7b97\u6cd5\u5c31\u662f\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u5411\u4e0b\u6bd4\u8f83\uff0c\u6839\u636e\u4e0e\u6bcf\u4e2a\u7236\u8282\u70b9\u7684\u5927\u5c0f\u5173\u7cfb\u4e00\u8def\u6bd4\u8f83\u627e\u5230\u8981\u627e\u7684\u53f6\u5b50\u7ed3\u70b9\u3002\u5982\u679c N \u4e3a\u53f6\u5b50\u7684\u603b\u6570\uff0c\u90a3\u4e48\u67e5\u8be2\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 \\(log_n/2(K)+1\\)\u3002</p> </li> <li> <p>\u63d2\u5165 insert</p> <p>\u63d2\u5165\u7b97\u6cd5\u6d89\u53ca\uff1a\u5148\u627e\u5230\u8be5\u63d2\u5165\u7684\u4f4d\u7f6e\u76f4\u63a5\u63d2\u5165\uff0c\u5982\u679c\u5f53\u524d\u7684\u8282\u70b9\u6570\u91cf\u8d85\u8fc7\u4e86\u9636\u6570 M \u5219\u62c6\u6210\u4e24\u4e2a\u90e8\u5206\uff0c\u5e76\u5411\u4e0a\u66f4\u65b0\u7d22\u5f15\u3002\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f...</p> </li> <li> <p>\u5220\u9664 delete</p> <p>\u5220\u9664\u7b97\u6cd5\u8bbe\u8ba1\uff1a\u76f4\u63a5\u628a\u8981\u5220\u9664\u7684\u8282\u70b9\u5220\u9664\uff0c\u7136\u540e\u628a\u6ca1\u6709\u7d22\u5f15 key \u4e86\u7684\u975e\u53f6\u8282\u70b9\u5220\u9664\uff0c\u4ece\u65c1\u8fb9\u627e\u4e00\u4e2a\u53f6\u8282\u70b9\u5408\u5e76\u51fa\u65b0\u7684\u975e\u53f6\u8282\u70b9\u3002\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f...</p> </li> </ul> <p>B+ \u6811\u7684\u76f8\u5173\u8ba1\u7b97</p> <p>\u9ad8\u5ea6\u7684\u4f30\u8ba1\uff1a\u53ef\u4ee5\u5206\u6790\u9ad8\u5ea6\u7684\u4e0a\u4e0b\u754c</p> <ul> <li>\u9ad8\u5ea6\u6700\u5c0f\u7684\u60c5\u51b5\u662f\u6240\u6709\u8282\u70b9\u90fd\u6ee1 \\(h = \\lceil log_N(M) \\rceil\\)</li> <li>\u9ad8\u5ea6\u6700\u5927\u7684\u60c5\u51b5\u662f\u6240\u6709\u8282\u70b9\u90fd\u534a\u6ee1 \\(h = \\lfloor log_{\\div{N}{2}}(\\div{M}{2}) \\rfloor + 1\\)</li> </ul> <p>size \u5927\u5c0f\u7684\u4f30\u8ba1\uff1a\u4e5f\u662f\u5206\u6790\u9ad8\u5ea6\u7684\u4e0a\u4e0b\u754c</p> <ul> <li>\u5927\u5c0f\u6700\u5c0f\u7684\u65f6\u5019\u662f\u6240\u6709\u8282\u70b9\u90fd\u6ee1\uff1a\u76f8\u5f53\u4e8e\u4e00\u4e2a\u9996\u9879\u4e3a 1\uff0c\u672b\u9879\u4e3a \\(\\lceil \\div{K}{n-1} \\lceil\\)\uff0c\u9ad8\u5ea6\u4e3a \\(\\lceil log_N(M) \\rceil\\) \u7684\u7b49\u6bd4\u6570\u5217\u6c42\u548c</li> <li>\u5927\u5c0f\u6700\u5927\u7684\u65f6\u5019\u662f\u6240\u6709\u8282\u70b9\u90fd\u534a\u6ee1\uff1a\u76f8\u5f53\u4e8e\u4e00\u4e2a\u9996\u9879\u4e3a 1\uff0c\u672b\u9879\u4e3a \\(\\ceil \\div{K}{\\lceil \\div{n-1}{2} \\rceil} \\ceil\\)\uff0c\u9ad8\u5ea6\u4e3a \\(\\lfloor log_{\\div{N}{2}}(\\div{M}{2}) \\rfloor + 1\\) \u7684\u7b49\u6bd4\u6570\u5217\u6c42\u548c</li> </ul>"},{"location":"CS/DB/design/#hash","title":"Hash \u7d22\u5f15","text":""},{"location":"CS/DB/normalforms/","title":"\u6570\u636e\u5e93\u5173\u7cfb\u6a21\u5f0f","text":"<p>\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981\u5173\u7cfb\u6a21\u5f0f\uff1f</p> <p>\u5728\u8bbe\u8ba1\u6570\u636e\u5e93\u7684\u65f6\u5019\uff0c\u6211\u4eec\u753b\u5b8c E-R \u56fe\uff0c\u8981\u628a\u56fe\u8f6c\u5316\u6210\u8868\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff08\u6bd4\u5982 <code>Student(sid, course, department)</code> \u8fd9\u79cd\u683c\u5f0f\uff09\u3002\u8fd9\u5c31\u9700\u8981\u6211\u4eec\u5bf9\u4e00\u4e9b\u5c5e\u6027\u8fdb\u884c\u8fdb\u4e00\u6b65\u7ea6\u675f\uff0c\u6bd4\u5982\u8981\u5173\u6ce8\u8fd9\u4e9b\u95ee\u9898\uff1a\uff081\uff09\u5728\u4e24\u4e2a\u8868\u91cc\u7684\u952e\u8c01\u51b3\u5b9a\u8c01\uff1f\u8981\u4fdd\u8bc1\u53ea\u6709 candidate key \u7684\u5c5e\u6027\u624d\u80fd\u51b3\u5b9a\u5176\u5b83\u5c5e\u6027\u3002\uff082\uff09\u6709\u4e9b\u8868\u8be5\u5408\u5728\u4e00\u8d77\uff0c\u8fd8\u662f\u62c6\u6210\u591a\u4e2a\u8868\uff1f\u5982\u679c\u8868\u5408\u5f97\u592a\u591a\uff0c\u6709\u4e9b\u4fe1\u606f\u53ef\u80fd\u51fa\u73b0\u592a\u591a\u6b21\uff0c\u4ea7\u751f\u4fe1\u606f\u5197\u4f59\u3001\u63d2\u5165\u5f02\u5e38\u3001\u66f4\u65b0\u56f0\u96be\u3002\uff083\uff09\u6709\u4e9b\u5c5e\u6027\u867d\u7136\u4e0d\u662f\u4e3b\u952e\uff0c\u4f46\u53c8\u51b3\u5b9a\u5176\u5b83\u5173\u7cfb\u7684\u503c\uff0c\u8fd9\u79cd\u60c5\u51b5\u53eb\u505a\u6709\u51fd\u6570\u4f9d\u8d56\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u5f15\u5165\u5173\u7cfb\u4ee3\u6570\uff0c\u6765\u6307\u5bfc\u6211\u4eec\u4ece E-R \u56fe\u5230\u5efa\u7acb\u5f62\u5f0f\u5316\u5b9a\u4e49\u7684\u8fd9\u4e00\u6b65\u9aa4\u3002\u5176\u5b9e\u4e3b\u8981\u7275\u626f\u5230\u7684\u6b65\u9aa4\u5c31\u662f\u5173\u7cfb\u5206\u89e3\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5148\u4ecb\u7ecd\u5206\u89e3\uff0c\u7136\u540e\u4ecb\u7ecd\u5176\u4f9d\u8d56\u7684\u7406\u8bba\u51fd\u6570\u4f9d\u8d56\u7684\u5b9a\u4e49\uff1b\u7136\u540e\u4ecb\u7ecd 6 \u79cd\u6307\u5bfc\u5173\u7cfb\u6a21\u5f0f\u7684\u8303\u5f0f\uff0c\u8fd9\u4e9b\u6bcf\u79cd\u8303\u5f0f\u5c42\u5c42\u9012\u8fdb\uff0c\u662f\u4e00\u4e9b\u5bf9\u6570\u636e\u5e93\u5173\u7cfb\u8d8a\u6765\u8d8a\u4e25\u683c\u7684\u7ea6\u675f\u3002</p>"},{"location":"CS/DB/normalforms/#_2","title":"\u5206\u89e3","text":"<p>\u5982\u679c\u4e00\u4e2a\u5173\u7cfb\u662f\u4e0d\u597d\u7684\uff0c\u6211\u4eec\u5e0c\u671b\u628a\u5b83\u5206\u89e3\u6210\u597d\u7684\u5173\u7cfb\u3002</p> <p>\u4ecb\u7ecd\u4e00\u4e0b decomposition \u5206\u89e3\u5206\u4e3a\u4e24\u7c7b</p> <ul> <li> <p>lossy decomposition \u6709\u635f\u5206\u89e3     \u5982\u679c\u4e0d\u80fd\u7528\u5206\u89e3\u540e\u7684\u51e0\u4e2a\u5173\u7cfb\u91cd\u5efa\u539f\u672c\u7684\u5173\u7cfb\uff0c\u5c31\u79f0\u5206\u89e3\u4e3a\u6709\u635f\u5206\u89e3\u3002</p> </li> <li> <p>lossless decomposition \u65e0\u635f\u5206\u89e3     \u4e00\u4e2a\u5173\u7cfb\u662f\u65e0\u635f\u5206\u89e3\uff0c\u5b9a\u4e49\u662f</p> <p>(1) \\(\\Pi_{R_1}(r) \\Join \\Pi_{R_2}(r) = r\\)\uff0c\u5f53 R1 \u548c R2 \u662f\u5173\u7cfb R \u7684\u5206\u89e3\uff0cr(R) \u6307 R \u4e0a\u5728\u5206\u89e3\u65f6\u53ef\u80fd\u635f\u5931\u7684\u4e00\u4e2a\u5173\u7cfb\u65f6\u3002</p> <p>\u6216\u8005</p> <p>(2) \u5173\u7cfb R \u5206\u89e3\u540e\u4ea7\u751f\u5173\u7cfb\u96c6 (R1, R2) \u4e14 R = R1 \\(\\cup\\) R2\u3002</p> <p>\u4e00\u4e2a\u66f4\u76f4\u89c2\u7684\u5224\u65ad\u65b9\u6cd5\u662f\uff0c\u5982\u679c\u6ee1\u8db3 (1) R1 \\(\\cap\\) R2 -&gt; R1 \u4e14 (2) R1 \\(\\cap\\) R2 -&gt; R2\uff0c\u5219\u79f0\u4e3a\u4e00\u4e2a\u65e0\u635f\u8fde\u63a5\u3002\u5176\u4e2d\u7bad\u5934\u7684\u610f\u601d\u662f\u51b3\u5b9a\u3002\u5982\u679c\u8fde\u63a5\u540e\u8fd8\u80fd\u51b3\u5b9a\u539f\u6765\u7684\u4e24\u4e2a\u5173\u7cfb\uff0c\u90a3\u4e48\u5f53\u7136\u662f\u65e0\u635f\u94fe\u63a5\u3002</p> </li> </ul> <p>\u8fd9\u4e2a\u5206\u89e3\u7684\u7406\u8bba\uff0c\u662f\u57fa\u4e8e (1) functional dependencies \u51fd\u6570\u4f9d\u8d56 (2) multivalued dependencies \u591a\u503c\u4f9d\u8d56 \u4e24\u4e2a\u7406\u8bba\u7684\u3002</p> <p>\u6839\u636e\u5206\u89e3\u7406\u8bba\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u518d\u4e0b\u4e00\u6b65\u8981\u4ecb\u7ecd\u7684\u516d\u4e2a\u8303\u5f0f\u3002</p>"},{"location":"CS/DB/normalforms/#_3","title":"\u51fd\u6570\u4f9d\u8d56","text":"<p>\u6982\u5ff5\u533a\u522b</p> <p>\u51fd\u6570\u4f9d\u8d56\uff1a</p> <p>\u90e8\u5206\u51fd\u6570\u4f9d\u8d56\uff1a\u8bbe X, Y \u662f\u5173\u7cfb R \u7684\u4e24\u4e2a\u5c5e\u6027\u96c6\u5408\uff0c\u5b58\u5728 X-&gt;Y, \u82e5 X' \u662f X \u7684\u771f\u5b50\u96c6\uff0c\u5b58\u5728 X\u2018-&gt;Y\uff0c\u5219\u79f0 Y \u90e8\u5206\u4f9d\u8d56\u4e8e\u51fd\u6570 X\u3002</p> <p>\u4f20\u9012\u51fd\u6570\u4f9d\u8d56\uff1a\u8bbe X, Y, Z \u662f\u5173\u7cfb R \u4e2d\u4e92\u4e0d\u76f8\u540c\u7684\u5c5e\u6027\u96c6\u5408\uff0c</p> <p>\u5b8c\u5168\u51fd\u6570\u4f9d\u8d56\uff1a</p> <p>\u6211\u770b\u4e0d\u61c2\u3002\u3002\u3002\u3002\u3002\u3002</p> <p>\u51fd\u6570\u4f9d\u8d56\u662f\u6765\u81ea\u4e8e\u5e94\u7528\u5c42\u9762\u7684\u89c4\u5b9a\uff08Functional dependencies are constraints on the set of legal relations\uff09\uff0c\u5148\u6709\u51fd\u6570\u4f9d\u8d56\uff0c\u518d\u6709\u6570\u636e\u5e93\u4e2d\u7684\u503c\u3002\u51fd\u6570\u4f9d\u8d56\u8981\u6c42\u4e24\u4e2a\u503c</p> <p>\u901a\u8fc7</p> <p>\u51fd\u6570\u4f9d\u8d56\u53ef\u4ee5\u88ab\u8bc1\u4f2a\uff08\u5bf9\u4e8e\u5355\u4e2a\uff09\uff0c\u4e0d\u80fd\u88ab\u8bc1\u5b9e\uff08\u5bf9\u4e8e\u6240\u6709\uff09\u3002</p> <p>!!!     \u672c\u8282\u4ee5\u4e0b latex \u9e1f\u8bed\u5168\u90fd\u4e0d\u8003</p> <p>\u5f62\u5f0f\u5316\u7684\u5b9a\u4e49\u91cc\u51fd\u6570\u4f9d\u8d56\u662f\u6307\uff0c\u5728\u4e00\u4e2a\u5173\u7cfb R \u4e2d\uff0c\u5982\u679c\u5c5e\u6027\uff08\u7ec4\uff09Y \u7684\u503c\u662f\u7531\u5c5e\u6027\uff08\u7ec4\uff09X \u7684\u503c\u51b3\u5b9a\u7684\uff0c\u5c31\u79f0 Y \u5bf9 X \u6709\u51fd\u6570\u4f9d\u8d56\u3002\u8003\u8651\u5230\u672c\u8eab\u51fd\u6570\u7684\u5b9a\u4e49\u662f X \u4e2d\u7684\u5143\u7d20\u5728 Y \u4e2d\u6709\u552f\u4e00\u786e\u5b9a\u7684\u503c\uff0c\u90a3\u4e48\u8fd9\u91cc\u7684\u4f9d\u8d56\u5c31\u662f\u6307\uff0c\u4e24\u4e2a\u5143\u7d20\u5982\u679c\u5728 X \u4e2d\u7684\u503c\u4e00\u6837\uff0c\u90a3\u4e48\u5728 Y \u4e2d\u7684\u503c\u4e5f\u4e00\u6837\u3002</p> <p>\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\u8bbe \\(R(U)\\) \u662f\u5c5e\u6027\u96c6\u5408 \\(U={A_1, A_2, ..., A_n}\\) \u4e0a\u7684\u4e00\u4e2a\u5173\u7cfb\u6a21\u5f0f\uff0cX, Y \u662f U \u4e0a\u7684\u4e24\u4e2a\u5b50\u96c6\uff0c\u82e5\u5bf9 \\(R(U)\\) \u7684\u4efb\u4e00\u4e2a\u53ef\u80fd\u7684\u5173\u7cfb \\(r\\)\uff0c\\(r\\) \u4e2d\u4e0d\u5b58\u5728\u4e24\u4e2a\u5728 X \u4e2d\u5c5e\u6027\u503c\u76f8\u7b49\uff0c\u5728 Y \u4e2d\u5c5e\u6027\u503c\u4e0d\u7b49\u7684\u5143\u7ec4\u3002\u5373\u79f0\u4e3a\u201cX \u51fd\u6570\u51b3\u5b9a Y\u201d\u6216\u201cY \u51fd\u6570\u4f9d\u8d56 X\u201d\uff0c\u8ba1\u4f5c X -&gt; Y\u3002</p> <p>Armstrong \u516c\u7406\u7cfb\u7edf\u662f\u63cf\u8ff0\u6570\u636e\u5e93\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4f9d\u8d56\u5173\u7cfb\u7684\u4e00\u7cfb\u5217 references\uff08\u63a8\u7406\u89c4\u5219\uff09\uff0c\u5728 1974 \u5e74\u7531 William W. Armstrong \u8bbe\u8ba1\u3002</p> <p>Armstrong \u516c\u7406\u7cfb\u7edf\u6709\u4e09\u5927\u516c\u7406\uff08\u81ea\u53cd\u5f8b\uff0c\u589e\u5e7f\u5f8b\uff0c\u4f20\u9012\u5f8b\uff09\uff0c\u548c\u4e00\u4e9b\u5f15\u7406\u3002</p> <p>\u516c\u7406</p> <p>!!!     \u5bf9\u4e0d\u8d77\uff0c\u6211\u662f\u61d2\u72d7\uff0c\u6211\u4e0d\u60f3\u6572 latex \u5199\u5f62\u5f0f\u5316\u5b9a\u4e49\u4e86\uff0c\u7528\u4eba\u8bdd\u7ed9\u5927\u5bb6\u8bb2\u5427\u3002</p> <p>\u8bbe F \u4e3a R(U) \u7684\u4e00\u7ec4\u51fd\u6570\u4f9d\u8d56\uff0c\u8bb0\u4e3a R(U, F)\u3002</p> <ul> <li> <p>\u81ea\u53cd\u5f8b</p> <p>\u5982\u679c\u4e00\u4e2a\u5c5e\u6027\u96c6\u662f\u53e6\u4e00\u4e2a\u5c5e\u6027\u96c6\u7684\u5b50\u96c6\uff0c\u90a3\u4e48\u8bf4\u540e\u8005\u51b3\u5b9a\u524d\u8005\u3002\u53ef\u4ee5\u53eb\u505a\uff0c\u5c5e\u6027\u96c6 X \u51b3\u5b9a\u5b83\u7684\u5c5e\u6027\u5b50\u96c6\u3002</p> </li> <li> <p>\u589e\u5e7f\u5f8b</p> <p>\u5982\u679c X -&gt; Y \u5728 F \u8fd9\u4e2a\u51fd\u6570\u4f9d\u8d56\u96c6\u5408\u4e2d\uff0c\u53e6\u4e00\u5c5e\u6027\uff08\u7ec4\uff09Z \u662f\u5c5e\u6027\u96c6 U \u4e2d\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u4ece F \u4e2d\u53ef\u4ee5\u63a8\u5bfc\u5f97\u51fa XZ \u51fd\u6570\u51b3\u5b9a YZ\u3002\u6709\u70b9\u50cf\u5728\u8bf4\u672c\u6765 X \u51b3\u5b9a Y\uff0c\u540e\u968f\u4fbf\u53d6\u4e00\u4e2a\u5c5e\u6027\u96c6 Z\uff0c\u5728\u4e24\u4fa7\u5206\u522b\u8fde\u63a5 X \u548c Y\uff0c\u7ed3\u679c XZ \u8fd8\u662f\u51b3\u5b9a YZ\u3002</p> </li> <li> <p>\u4f20\u9012\u5f8b</p> <p>\u82e5 X -&gt; Y\uff0cY -&gt; X\uff0c\u5219 X -&gt; Z\u3002</p> </li> </ul> <p>\u5f15\u7406</p> <p>!!!     \u5b66\u4e0d\u52a8\u4e86\u5149\u62a5\u4e2a\u83dc\u540d\u5427</p> <ul> <li>\u5408\u5e76\u5f8b</li> <li>\u4f2a\u4f20\u9012\u5f8b</li> <li>\u5206\u89e3\u7387</li> <li>\u5c5e\u6027\u96c6\u95ed\u5305</li> <li>\u8986\u76d6</li> <li>\u6700\u5c0f\u8986\u76d6</li> </ul> <p>\u6b63\u5219\u8986\u76d6</p>"},{"location":"CS/DB/normalforms/#normal-form-6","title":"Normal Form \u8303\u5f0f\uff1a6 \u4e2a\u8303\u5f0f","text":"<p>\u63a5\u4e0b\u6765\u6211\u4eec\u4ecb\u7ecd\u6570\u636e\u5e93\u8bbe\u8ba1\u7684\u516d\u5927\u8303\u5f0f\u3002\u5982\u524d\u6587\u6240\u8ff0\uff0c\u516d\u4e2a\u8303\u5f0f\u662f\u5bf9\u6570\u636e\u5e93\u5173\u7cfb\u5c5e\u6027\u5c42\u5c42\u9012\u8fdb\u3001\u8d8a\u6765\u8d8a\u4e25\u683c\u7684\u7ea6\u675f\u3002</p> <p>\u7cbe\u7b80\u7248\u5982\u4e0b\uff08\u7528\u4e8e\u8003\u524d\u7a81\u51fb\uff09\uff1a</p> \u540d\u79f0 \u4ecb\u7ecd \u8303\u4f8b \u8303\u56f4 \u7b2c\u4e00\u8303\u5f0f 1NF \u5927\uff0c\u9010\u4e2a\u5305\u542b\u4e0b\u65b9\u7684 \u7b2c\u4e8c\u8303\u5f0f 2NF \u7b2c\u4e00\u8303\u5f0f 3NF Buckus-Codd NF \u7b2c\u4e94\u8303\u5f0f 5NF \u7b2c\u516d\u8303\u5f0f 6NF \u5c0f\uff0c\u9010\u4e2a\u88ab\u4e0a\u65b9\u7684\u5305\u542b <p>\u63a5\u4e0b\u6765\u662f\u8be6\u7ec6\u4ecb\u7ecd\u3002</p> <p>First Normal Form \u7b2c\u4e00\u8303\u5f0f</p> <p>\u7b80\u800c\u8a00\u4e4b\uff1a\u6ca1\u6709\u91cd\u590d\u7684\u5217\u3002</p> <p>\u7b2c\u4e00\u8303\u5f0f\u7684\u542b\u4e49\uff1aatomicity \u539f\u5b50\u6027\u3002\u5373\u4e0d\u80fd\u518d\u7ee7\u7eed\u62c6\u5206\uff0c\u5c5e\u6027\u4e0d\u80fd\u518d\u5411\u4e0b\u62c6\u5206\u3002\u5f53\u4e00\u4e2a\u5173\u7cfb\u6a21\u5f0f R \u7684\u6240\u6709\u5c5e\u6027\u90fd\u662f atomic \u7684\uff0c\u8fd9\u4e2a\u5173\u7cfb\u6a21\u578b\u5c31\u662f\u7b2c\u4e00\u8303\u5f0f\u3002</p> <p>\u6bd4\u5982\uff0cstring \u5e94\u5f53\u88ab\u5f53\u4f5c\u4e0d\u53ef\u5206\u5272\u7684\u3002\u6bd4\u5982 ZJU \u7684\u5b66\u53f7\u7b2c\u4e00\u4f4d\u770b\u672c\u79d1\u751f\u7814\u7a76\u751f\uff0c\u540e\u9762\u4e24\u4f4d\u770b\u5e74\u7ea7\uff0c\u4f46\u8fd9\u4e24\u4e2a\u4fe1\u606f\u5982\u679c\u9700\u8981\u662f\u5e94\u5f53\u88ab\u663e\u793a\u5730\u4fdd\u5b58\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u800c\u4e0d\u662f\u9700\u8981\u7684\u65f6\u5019\u53bb\u5b66\u53f7\u4e2d\u5206\u6790\u67e5\u627e\u7684\u3002\u5982\u679c\u8fd9\u6837\u505a\uff0c\u76f8\u5f53\u4e8e\u628a\u89e3\u6790\u5b57\u7b26\u4e32\u7684\u5de5\u4f5c\u7ed9\u4e86\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u5b57\u7b26\u4e32\u67e5\u627e\u662f\u4e00\u4e2a\u6bd4\u6570\u636e\u5e93\u67e5\u8be2\u6162\u7684\u6b65\u9aa4\uff0c\u8fd9\u6837\u7ed3\u679c\u5f88\u4e0d\u597d\u3002</p> <p>\u7b2c\u4e00\u8303\u5f0f\u6ca1\u6709\u6d88\u9664\u5197\u4f59\uff0c\u5b83\u6d88\u9664\u7684\u662f\u5217\u91cc\u91cd\u590d\u7684\u4fe1\u606f\u3002\u5b83\u628a\u8868\u683c\u91cc\u5197\u4f59\u7684\u5217\u62c6\u5206\u6210\u4e86\u591a\u4e2a\u884c\u3002</p> <p>Second Normal Form \u7b2c\u4e8c\u8303\u5f0f</p> <p>\u7b80\u800c\u8a00\u4e4b\uff1a\u5b9e\u4f53\u7684\u5c5e\u6027\u5b8c\u5168\u4f9d\u8d56\u4e8e\u4e3b\u5173\u952e\u5b57\u3002</p> <p>\u7b2c\u4e8c\u8303\u5f0f\u662f\u57fa\u4e8e fully functional dependency \u5b8c\u5168\u51fd\u6570\u4f9d\u8d56\u7684\u3002\u610f\u601d\u662f\uff0c\u7b2c\u4e8c\u8303\u5f0f\u7528\u4e8e\u90a3\u4e9b\u6709\u590d\u5408\u952e\u503c\u7684\u5173\u7cfb\uff0c\u6bd4\u5982\u5f53\u4e00\u4e2a\u5173\u7cfb\u7684\u4e3b\u952e\u662f\u591a\u4e2a\u5217\u7684\u590d\u5408\u65f6\u3002</p> <p>\u5982\u679c\u4e00\u4e2a\u5173\u7cfb\u672c\u6765\u5c31\u6ca1\u6709\u590d\u5408\u7684\u5c5e\u6027\uff0c\u90a3\u672c\u6765\u5c31\u662f 2NF \u7684\u3002</p> <p>\u5982\u679c\u4e00\u4e2a\u5173\u7cfb\u6709\u590d\u5408\u7684\u5c5e\u6027\uff0c\u6bd4\u5982 AB -&gt; C\uff0c\u90a3\u4e48 2NF \u4f1a\u628a AB \u62c6\u5f00\u3002</p> <p>TODO\uff1a\u600e\u4e48\u62c6\u5462</p> <p>Third Normal Form \u7b2c\u4e09\u8303\u5f0f</p> <p>\u7b80\u800c\u8a00\u4e4b\uff1a\u4e0d\u4f9d\u8d56\u4e8e\u5176\u5b83\u975e\u5c5e\u6027\u3002</p> <p>A relation is in the third normal form, if there is no transitive dependency for non-prime attributes as well as it is in the second normal form. </p> <p>\u5982\u679c\u4e00\u4e2a\u5173\u7cfb\u5728\u7b2c\u4e09\u8303\u5f0f\u91cc\uff0c\u5b83\u5e94\u5f53\u5bf9\u4e8e\u975e\u4e3b\u952e\u5c5e\u6027\u6ca1\u6709\u4f20\u9012\u4f9d\u8d56\uff0c\u5e76\u4e14\u5728\u7b2c\u4e8c\u8303\u5f0f\u91cc\u3002</p> <p>Boyce-Cudd Normal Form BCNF\u8303\u5f0f</p> <p>\u7b80\u800c\u8a00\u4e4b\uff1a\u6bcf\u4e2a\u4f9d\u8d56\u5173\u7cfb\u4e2d\uff0c\u88ab\u4f9d\u8d56\u7684\u90fd\u662f\u4e3b\u952e</p> <p>A relation is in BCNF if it is already 3NF, and if for any functional dependency say P-&gt;Q, P should be a super key.</p> <p>\u6bd4\u8f83 3NF \u548c BCNF \u7684\u533a\u522b\uff1a</p> 3NF BCNF \u4e0d\u5e94\u6709 \u5f31 \u5f3a \u51cf\u5c11\u4e86\u5197\u4f59 \u4fdd\u7559\u4e86\u6240\u6709\u51fd\u6570\u4f9d\u8d56 \u53ef\u80fd\u6709\u7684\u51fd\u6570\u4f9d\u8d56\u6ca1\u6709\u88ab\u4fdd\u5b58 <p>Fifth Normal Form \u7b2c\u4e94\u8303\u5f0f</p> <p>Sixth Normal Form \u7b2c\u516d\u8303\u5f0f</p> <p>\u505a\u9898\u7684\u65f6\u5019\u4f3c\u4e4e\u53ea\u4f1a\u8ba9\u5199\uff1a\u7b26\u5408 1NF \u7684\uff0c3NF \u7684\uff0cBCNF \u7684\u4e09\u79cd\u5206\u89e3\u3002</p>"},{"location":"CS/DB/normalforms/#_4","title":"\u51fd\u6570\u4f9d\u8d56","text":""},{"location":"CS/DB/normalforms/#_5","title":"\u95ed\u5305","text":""},{"location":"CS/DB/normalforms/#_6","title":"\u6700\u5c0f\u8986\u76d6","text":""},{"location":"CS/DB/normalforms/#references","title":"References","text":"<ul> <li>blog</li> <li>blog</li> <li>blog</li> </ul>"},{"location":"CS/DB/query/","title":"Query Process \u67e5\u8be2\u5904\u7406","text":"<p>\u67e5\u8be2\u5904\u7406\u7684\u57fa\u672c\u6b65\u9aa4\u662f\uff1a\uff081\uff09Parsing and translation \u89e3\u6790\u548c\u7ffb\u8bd1 \uff082\uff09Optimization \u4f18\u5316 \uff083\uff09Evaluation \u8bc4\u4f30\u3002</p> <p></p> <p>\u6211\u4eec\u6700\u5173\u6ce8\u7684\u5176\u5b9e\u662f\u4f18\u5316\u6b65\u9aa4\u3002\u4f18\u5316\u4e00\u6b65\u662f\u57fa\u4e8e\u4ee5\u4e0b\u5047\u8bbe\uff1a\u4e00\u79cd SQL \u67e5\u8be2\u53ef\u80fd\u5bf9\u5e94\u4e86\u591a\u79cd\u7b49\u4ef7\u7684\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f\u3002\u53ef\u4ee5\u901a\u8fc7\u4f30\u8ba1\u6bcf\u79cd\u4f18\u5316\u65b9\u6cd5\u7684 cost \u6765\u8bc4\u4f30\u65b9\u6cd5\u7684\u597d\u574f\u3002\u67e5\u8be2\u4f18\u5316\u4f1a\u9009\u62e9\u6700\u8282\u7ea6\u7684\u65b9\u5f0f\u8fdb\u884c\u67e5\u8be2\u3002</p> <p>\u90a3\u4e48\u95ee\u9898\u5c31\u89c4\u7ea6\u6210\u4e86\u4ece\u6240\u6709\u7b49\u4ef7\u7684\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f\u4e2d\uff0c\u9009\u62e9 cost \u6700\u5c0f\u7684\u4e00\u4e2a\u3002\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u5982\u4f55\u8ba1\u7b97 cost\uff01</p> <p>Cost is generally measured as total elapsed time for answering query. Many factors contribute to the time cost: <code>disk access + CPU + network communication</code>. \u4f46\u662f\u524d\u9762\u8ba8\u8bba\u8fc7\uff0c\u4e00\u4e2a\u67e5\u8be2\u88ab\u6267\u884c\u7684\u65f6\u5019\u9700\u8981\u88ab\u52a0\u8f7d\u5230\u78c1\u76d8\u4e0a\uff0c\u800c\u78c1\u76d8\u8bfb\u5199\u975e\u5e38\u6162\uff1bCPU \u65f6\u95f4\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\uff1b\u53ea\u8981\u4e0d\u662f\u7f51\u7edc\u5e94\u7528\u5c31\u4e0d\u7528\u7ba1\u7f51\u7edc\u4f20\u8f93\u5f00\u9500\u3002\u6240\u4ee5\u76ee\u524d\u6211\u4eec\u5173\u6ce8\u7684 cost \u6700\u5927\u7684\u6765\u6e90\u5c31\u662f\u78c1\u76d8\u8bbf\u95ee\u65f6\u95f4\uff0c\u5176\u4e2d\u5305\u542b seek, block read, block write \u7684\u7528\u65f6\u3002\u56e0\u6b64\u5b9a\u4e49\u4ee5\u4e0b cost \u8ba1\u7b97\u65b9\u6cd5\uff1a</p> <p>\u5728 B \u4e2a block \u4e2d\u67e5\u8be2 S \u6b21\u7684\u65f6\u95f4 = B * \u8f6c\u79fb\u5230\u4e00\u4e2a block \u7684\u65f6\u95f4 + S * \u4e00\u6b21\u67e5\u8be2\u7684\u65f6\u95f4\u3002</p> <p>\u800c\u67e5\u8be2\u4e2d\uff0c\u8bfb\u5199\u8017\u65f6\u66f4\u591a\uff0c\u5176\u4e2d\u5199\u6bd4\u8bfb\u66f4\u8017\u65f6\u3002\u6240\u4ee5\u6211\u4eec\u5e0c\u671b\u67e5\u627e\u548c\u67e5\u8be2\u7684\u65f6\u95f4\u90fd\u66f4\u5c11\u3002</p> <p>\uff08TODO\uff1a\u8fd9\u91cc\u8ba1\u7b97\u7684\u65f6\u5019\u8981\u57fa\u4e8e\u4e24\u4e2a\u5047\u8bbe\uff0ccost \u4f9d\u8d56\u4e8e\u4e3b\u5b58\u4e2d\u7f13\u51b2\u533a\u7684\u5927\u5c0f\uff0c\u66f4\u591a\u7684\u5185\u5b58\u53ef\u4ee5\u51cf\u5c11 disk access\uff1b\u53e6\u5916\u901a\u5e38\u8003\u8651\u6700\u574f\u7684\u60c5\u51b5\uff0c\u5373\u4e3b\u5b58\u53ea\u63d0\u4f9b\u6700\u5c11\u7684\u5185\u5b58\u6765\u5b8c\u6210\u67e5\u8be2\u5de5\u4f5c\uff09</p> <p>\u63a5\u4e0b\u6765\u6765\u4f30\u8ba1\u5173\u7cfb\u4ee3\u6570\u5404\u4e2a\u64cd\u4f5c\u7684 cost</p> <p>Select \u9009\u62e9\u7684 cost \u8ba1\u7b97</p> <p>\u6709\u4e09\u79cd select \u7684\u7b97\u6cd5</p> <ul> <li> <p>\u7ebf\u6027\u641c\u7d22</p> <p>\u53bb\u4f9d\u6b21\u67e5\u8be2\u6bcf\u4e2a block \u5224\u65ad\u662f\u5426\u6ee1\u8db3\u67e5\u8be2\u6761\u4ef6\u3002</p> </li> <li> <p>\u7d22\u5f15\u641c\u7d22</p> </li> <li> <p>Primary index, equality on key \u641c\u7d22\u4e00\u6761\u8bb0\u5f55</p> </li> <li> <p>Primary index, equality on non-key \u9700\u8981\u641c\u7d22\u591a\u6761\u8bb0\u5f55</p> </li> <li> <p>Secondary index \u4e8c\u7ea7\u7d22\u5f15</p> </li> </ul> <p>Sort \u6392\u5e8f\u7684 cost \u4f30\u8ba1</p> <p>sort \u64cd\u4f5c\u4e00\u822c\u4f7f\u7528\u5916\u90e8\u5f52\u5e76\u6392\u5e8f\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5927\u5c0f\u4e3a M \u7684\u5185\u5b58\uff0cb_r \u8868\u793a block \u7684\u6570\u91cf\u3002sort \u5206\u4e3a\u4ee5\u4e0b\u4e24\u4e2a\u6b65\u9aa4\uff1a(1) create sorted runs\uff0c\u6570\u636e\u4ece\u78c1\u76d8\u8bfb\u5165\u5185\u5b58\u4e2d\uff0c\u56e0\u4e3a\u5185\u5b58\u5927\u5c0f\u662f M\uff0c\u6bcf\u6b21\u80fd\u5904\u7406 M \u4e2a\u6570\u636e\u9879 (2) merge the runs\u3002</p> <p>\u9700\u8981\u7684 merge pass \u7684\u603b\u6570 \\(\\lceil log_{M-1}(b_r/M) \\rceil\\)\u3002</p> <p>\u521b\u5efa\u548c\u6bcf\u6b21 run \u7684\u8fc7\u7a0b\u4e2d disk access \u7684\u6570\u91cf 2br\u3002</p> <p>\u5916\u90e8\u6392\u5e8f\u4e2d\u603b\u7684 disk access \u6b21\u6570 \\((2\\lceil log_{M-1}(b_r/M) \\rceil+1)b_r\\)</p> <p>Join \u8fde\u63a5\u7684 cost \u4f30\u8ba1</p> <p>\u4ee5\u4e0b\u6709\u51e0\u79cd\u5b9e\u73b0 join \u7684\u7b97\u6cd5 (1) nested-loop join (2) block nested-loop join (3) indexed nested-loop join (4) merge-join (5) hash-join\u3002</p> <ul> <li> <p>nested-loop join     For each tuple in the outer relation, scan the entire inner relation to find all matching tuples. </p> <p>\u8ba1\u7b97 theta-join \u8868\u8fbe\u5f0f\uff1a</p> <pre><code>for each tuple tr in sr do begin\n    for each tuple ts in s do begin\n        test pair (tr, ts) to see if they satisfy the join condition\n</code></pre> <p>r is called the outer relation and s the inner relation of the join.</p> </li> <li> <p>block nested-loop join</p> <p>Similar to the nested-loop join, but processes the relations in block rather than tuple by tuple to reduce the number of I/O operations.</p> <pre><code>for each block br of r do begin\n    for each block bs of s do begin\n        for each tuple tr in br do begin\n            for each tuple ts in bs do begin\n                check if (tr, ts) satisfy the join condition\n                    if they do, add tr\u00b7ts to the result\n            end\n        end\n    end\nend\n</code></pre> <p>\u6700\u574f\u7684\u60c5\u51b5\uff1a     block transfer b_r * b_s + b_r</p> <p>\u57fa\u7840\u60c5\u51b5\uff1a</p> </li> <li> <p>index nested-loop join</p> </li> <li> <p>merge-join     Requires both relations to be sorted on the join key. Merges the sorted relations by iterating through them in parallel.</p> </li> <li> <p>hash join</p> <p>Uses a hash table to partition the tuples of one relation based on the join key, then probes the hash table with the tuples of the other relation.</p> </li> </ul> <p>\u5bf9\u6bd4\uff1a</p> <p>Nested-loop Join: Simple but inefficient for large datasets due to  \ud835\udc42 ( \u2223 \ud835\udc45 \u2223 \u00d7 \u2223 \ud835\udc46 \u2223 ) O(\u2223R\u2223\u00d7\u2223S\u2223) complexity. Block Nested-loop Join: Optimized version of nested-loop join that processes blocks to reduce I/O operations. Merge Join: Efficient for sorted relations, with complexity dominated by the sort operations. Hash Join: Very efficient for large datasets, especially when one relation can fit into memory, with  \ud835\udc42 ( \u2223 \ud835\udc45 \u2223 + \u2223 \ud835\udc46 \u2223 ) O(\u2223R\u2223+\u2223S\u2223) complexity assuming good hashing.</p> <p>Duplicated Deletion \u91cd\u590d\u6d88\u9664</p> <p>\u6392\u5e8f\u548c\u6295\u5f71\u53ef\u4ee5\u6d88\u9664\u91cd\u590d</p> <p>\u8003\u5f97\u4e0d\u591a\u3002</p> <p>Aggregation \u805a\u5408</p> <p>\u4e5f\u53ef\u4ee5\u7528\u6392\u5e8f\u6216\u6295\u5f71\u6765\u505a\u3002</p>"},{"location":"CS/DB/query/#query-optimization","title":"Query Optimization \u67e5\u8be2\u4f18\u5316","text":"<p>\u5bf9\u7ed9\u5b9a\u67e5\u8be2\uff0c\u4f18\u5316\u7684\u65b9\u6cd5\u6709\uff1a</p> <ul> <li> <p>Equivalent expressions \u7b49\u4ef7\u8868\u8fbe\u5f0f</p> <p>\u8fd9\u79cd\u5c5e\u4e8e\u903b\u8f91\u4f18\u5316\uff0c\u8bbe\u8ba1\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u505a\u6570\u5b66\u9898\u65f6\u8ba1\u7b97 a*b + c*b\uff0c\u4f18\u5316\u6210 (a+c) * b\uff0c\u5c31\u50cf\u4e00\u79cd\u903b\u8f91\u4f18\u5316\u3002</p> <p>\u5b83\u4e5f\u53eb Cost based optimization.</p> <p>\u5728\u6570\u636e\u5e93\u4e2d\u539f\u5219\u4e00\u822c\u662f\u5f80\u5f80\u5148\u53bb\u505a\u9009\u62e9\u548c\u6295\u5f71\uff08\u5df2\u7ecf\u5bf9\u521d\u59cb\u8868\u505a\u8fc7\u4e00\u6b21\u9009\u62e9\uff0c\u51cf\u5c11\u4e86\u5f88\u591a\u8bb0\u5f55\uff09\uff0c\u518d\u8fde\u63a5\u3002</p> </li> <li> <p>Different algorithms for each operation \u76f8\u540c\u7b97\u5b50\u7684\u4e0d\u540c\u8868\u8fbe\u5f0f</p> <p>\u8fd9\u79cd\u5c5e\u4e8e\u7269\u7406\u5c42\u9762\u7684\u4f18\u5316\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u505a\u6570\u5b66\u9898\u65f6\u4e0d\u518d\u7528\u7b14\u7b97\uff0c\u800c\u662f\u7528\u8ba1\u7b97\u5668\u7b97\uff0c\u5c31\u50cf\u662f\u4e00\u79cd\u7269\u7406\u5c42\u9762\u7684\u4f18\u5316\u3002</p> <p>\u5b83\u4e5f\u53eb Transformation based optimization.</p> </li> </ul> <p>!!!      TODO \u4e0b\u9762\u7684\u51e0\u4e2a\u4e13\u9898\u7a76\u7adf\u662f\u4ec0\u4e48\u903b\u8f91\u6392\u7684</p>"},{"location":"CS/DB/query/#equivalent-expressions","title":"Equivalent expressions","text":""},{"location":"CS/DB/query/#statistics-for-cost-estimation","title":"Statistics for Cost Estimation","text":""},{"location":"CS/DB/transaction/","title":"Transaction \u4e8b\u52a1","text":""},{"location":"CS/DB/transaction/#_1","title":"\u7b80\u4ecb","text":"<p>\u4e8b\u52a1\u662f\u7a0b\u5e8f\u6267\u884c\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u4f1a\u5f15\u8d77\u4e00\u4e9b\u6570\u636e\u9879\u7684\u66f4\u65b0\u3002\u6211\u4eec\u5b9a\u4e49\u4e8b\u52a1\u6709\u4ee5\u4e0b\u56db\u4e2a\u57fa\u672c\u5c5e\u6027\uff1a</p> <ul> <li> <p>Atomicity \u539f\u5b50\u6027     \u4e8b\u52a1\u662f non-or-all \u7684\uff0c\u5373\u6240\u6709\u6b65\u9aa4\u8981\u4e48\u5168\u90e8\u6267\u884c\u540e commit\uff0c\u8981\u4e48\u5c31 rollback \u56de\u6eda\u5230\u6ca1\u505a\u7684\u72b6\u6001\u3002</p> </li> <li> <p>Durability \u6301\u4e45\u6027     \u4e8b\u52a1\u5b8c\u6210\u540e\u66f4\u65b0\u6570\u636e\uff0c\u5373\u4f7f\u8f6f\u786c\u4ef6\u51fa\u4e86\u95ee\u9898\uff0c\u66f4\u65b0\u7684\u6570\u636e\u4e5f\u5fc5\u987b\u5b58\u5728\u3002</p> </li> <li> <p>Consistency \u4e00\u81f4\u6027     \u5b9a\u4e49\u8bf4\uff1a\u4e8b\u52a1\u5fc5\u987b\u4f7f\u6570\u636e\u5e93\u4ece\u4e00\u4e2a\u4e00\u81f4\u6027\u72b6\u6001\u8f6c\u6362\u5230\u53e6\u4e00\u4e2a\u4e00\u81f4\u6027\u72b6\u6001\u3002\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u4fdd\u5b58\u5b58\u6b3e\u7684\u6570\u636e\u5e93\uff0c\u4e00\u5f00\u59cb\u5b58\u53d6\u8bb0\u5f55\u52a0\u8d77\u6765\u7ed3\u679c\u662f\u7b49\u4e8e\u603b\u6570\u7684\uff0c\u90a3\u4e48\u4e8b\u52a1\u6267\u884c\u5b8c\uff0c\u8fd8\u8981\u4fdd\u6301\u6240\u6709\u8bb0\u5f55\u5728\u8fd9\u4e2a\u52a0\u8d77\u6765\u7b49\u4e8e\u603b\u6570\u7684\u72b6\u6001\u3002</p> </li> <li> <p>Isolation \u72ec\u7acb\u6027     \u5f53\u591a\u4e2a\u7528\u6237\u5e76\u53d1\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u65f6\u5019\uff0c\u6570\u636e\u5e93\u4e3a\u6bcf\u4e2a\u7528\u6237\u5f00\u542f\u7684\u4e8b\u52a1\uff0c\u4e0d\u80fd\u88ab\u5176\u5b83\u4e8b\u52a1\u7684\u64cd\u4f5c\u6240\u5e72\u6270\u3002    </p> </li> </ul> <p>\u4e3a\u4e86\u4fdd\u8bc1\u4e8b\u52a1\u7684\u8fd9\u4e9b\u5c5e\u6027\uff0c\u4e00\u822c\u4e3b\u8981\u9700\u8981\u8003\u8651\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ul> <li>\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u786c\u4ef6\u95ee\u9898\u548c\u7cfb\u7edf\u5d29\u6e83\u800c\u5bfc\u81f4\u4e8b\u52a1\u6ca1\u80fd\u5b8c\u6210\u65f6\uff0c\u4e8b\u52a1\u53ef\u4ee5\u56de\u6eda\u5230\u6ca1\u53d1\u751f\u7684\u72b6\u6001</li> <li>\u591a\u4e8b\u52a1\u5e76\u884c\u6267\u884c\u65f6\uff0c\u4e0d\u80fd\u4f7f\u8bfb\u5199\u7684\u9519\u8bef\u987a\u5e8f\u5e72\u6270\u8bfb\u5199\u7684\u7ed3\u679c\uff0c\u5373\u591a\u4e2a\u4e8b\u52a1\u4e0d\u80fd\u4e92\u76f8\u5e72\u6270</li> </ul> <p>\u4e8e\u662f\uff0c\u6211\u4eec\u8003\u8651\u628a\u4e00\u4e2a\u4e8b\u52a1\u5206\u4e3a\u591a\u4e2a\u72b6\u6001\u6765\u5b8c\u6210\u3002\u4e00\u4e2a\u4e8b\u52a1\u6709\u4e94\u79cd\u72b6\u6001\uff1a</p> <ul> <li>Active \u521d\u59cb\u72b6\u6001</li> <li>Partially commited \u5728\u6700\u540e\u4e00\u53e5\u6307\u4ee4\u88ab\u6267\u884c\u4e4b\u540e</li> <li>Failed \u5728\u53d1\u73b0\u6267\u884c\u5931\u8d25\u4e4b\u540e</li> <li>Aborted \u56de\u6eda\u7ed3\u675f\uff0c\u4f1a\u9009\u62e9\u91cd\u65b0\u6267\u884c\u4e8b\u52a1\u8fd8\u662f\u7ed3\u675f</li> <li>Commited \u4e8b\u52a1\u88ab\u5b8c\u6574\u5730\u6267\u884c</li> </ul> <p>\u4e00\u4e2a\u8f6c\u5316\u7684\u72b6\u6001\u56fe\u5982\u4e0b</p> <pre><code>graph LR\n\nA[[active]] --&gt; P[[Partially commited]]\nP --(single step)--&gt; C[[commited]]\nA --&gt; F[[failed]]\nP --&gt; F\nF --(single step)--&gt; B[[aborted]]\n</code></pre> <p>\u6211\u4eec\u4e3b\u8981\u9700\u8981\u4fdd\u8bc1 partially commited \u5230 commited\uff0c\u548c failed \u5230 abort\uff0c\u8fd9\u4e24\u6b65\u90fd\u662f\u539f\u5b50\u6027\u7684\u3002</p>"},{"location":"CS/DB/transaction/#_2","title":"\u8c03\u5ea6","text":"<p>\u8fd9\u6837\u5c31\u6d89\u53ca\u5230\u8c03\u5ea6\u6982\u5ff5\u3002Schedules \u8c03\u5ea6\u662f\u4e00\u7cfb\u5217\u7528\u4e8e\u6307\u5b9a\u5e76\u53d1\u4e8b\u52a1\u6267\u884c\u987a\u5e8f\u7684\u6307\u4ee4\u3002\u5b83\u9700\u8981\uff081\uff09\u5305\u542b\u4e8b\u52a1\u4e2d\u7684\u6240\u6709\u6307\u4ee4\uff0c\uff082\uff09\u4fdd\u8bc1\u5355\u4e2a\u4e8b\u52a1\u4e2d\u7684\u6307\u4ee4\u7684\u76f8\u5bf9\u987a\u5e8f\u3002</p> <p>\u5982\u679c\u4e8b\u52a1\u662f\u826f\u6784\u7684\u4e14\u662f\u4e24\u9636\u6bb5\u7684\uff0c\u90a3\u4e48\u4efb\u4f55\u4e00\u4e2a\u5408\u6cd5\u7684\u8c03\u5ea6\u90fd\u662f\u9694\u79bb\u7684 \u5177\u4f53\u7684\u6570\u5b66\u63a8\u5230\u8fc7\u7a0b\u53ef\u4ee5\u53c2\u7167&lt;&lt;\u4e8b\u52a1\u5904\u7406:\u6982\u5ff5\u4e0e\u6280\u672f&gt;&gt;\u8fd9\u672c\u4e66\u76847.5.8.2\u8282\u6b64\u4e66\u4e43\u662f\u5173\u4e8e\u6570\u636e\u5e93\u4e8b\u52a1\u7684\u5723\u7ecf\uff0c\u65e0\u9700\u89e3\u91ca(\u4e2d\u6587\u7ffb\u8bd1\u867d\u7136\u6666\u6da9\uff0c\u4e5f\u80fd\u575a\u6301\u8bfb\u4e0b\u53bb,\u5f3a\u70c8\u63a8\u8350</p>"},{"location":"CS/DB/transaction/#_3","title":"\u4e32\u884c","text":"<p>\u5982\u679c\u4e00\u4e2a\u8c03\u5ea6\u4e0e\u4e00\u4e2a\u4e32\u884c\u8c03\u5ea6\uff08serial\uff09\u7b49\u4ef7\uff0c\u90a3\u4e48\u79f0\u8fd9\u4e2a\u8c03\u5ea6\u662f serializable \u53ef\u4e32\u884c\u5316\u7684\u3002</p> <p>\u53ef\u4e32\u884c\u5316\u5efa\u7acb\u5728\u4e00\u4e2a\u5047\u8bbe\u4e0a\uff1a\u4e8b\u52a1\u4e0d\u4f1a\u7834\u574f\u6570\u636e\u5e93\u7684\u4e00\u81f4\u6027\uff0c\u53ea\u8003\u8651\u6709\u8bfb\u5199\u4e24\u79cd\u64cd\u4f5c\u3002</p> <p>\u6211\u4eec\u8bf4\u4e00\u4e2a\u8c03\u5ea6\u662f conflict serializable \u51b2\u7a81\u53ef\u4e32\u884c\u5316\u7684\uff0c\u5f53\uff1a</p>"},{"location":"CS/DB/transaction/#-","title":"-","text":""},{"location":"CS/DB/transaction/#_4","title":"\u5e76\u53d1\u5904\u7406","text":"<p>\u540c\u65f6\u6267\u884c\u591a\u4e2a\u4e8b\u52a1\uff0c\u53ef\u4ee5\u63d0\u9ad8\u8fd0\u884c\u7684\u6548\u7387\uff0c\u51cf\u5c11\u5e73\u5747\u6267\u884c\u65f6\u95f4\u3002</p> <p>\u5e76\u53d1\u63a7\u5236\u7684\u5904\u7406\u673a\u5236\u662f\uff0c\u8ba9\u5e76\u53d1\u7684\u4e8b\u52a1\u72ec\u7acb\u8fdb\u884c\uff0c\u63a7\u5236\u5e76\u53d1\u7684\u4e8b\u52a1\u4e4b\u95f4\u7684\u4ea4\u6d41\u3002</p>"},{"location":"CS/DB/transaction/#_5","title":"\u6545\u969c\u6062\u590d","text":"<p>\u6545\u969c\u7684\u79cd\u7c7b\u6709\uff1a</p> <ul> <li> <p>database application     \u903b\u8f91\u9519\u8bef\uff1a\u6bd4\u5982\u4e0d\u6ee1\u8db3\u6570\u636e\u5e93\u7ea6\u675f\u6761\u4ef6\uff08\u4e3b\u952e\uff09\uff0c\u7cfb\u7edf\u9519\u8bef\u6b7b\u9501\u3002</p> </li> <li> <p>DBMS</p> </li> <li> <p>Database </p> </li> </ul> <p>checkpoint </p> <p>Recovery algorithms are techniques to ensure database consistency and transaction atomicity and durability despite failures. \u6545\u969c\u6062\u590d\u7b97\u6cd5\u5c31\u662f\u4fdd\u969c\u6570\u636e\u5e93 ACD\uff08\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6ca1\u6709 I\uff09\u7279\u6027\u7684\u65b9\u6cd5\u3002</p> <p>\u6545\u969c\u6062\u590d\u7b97\u6cd5\u6709\u4e24\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>Actions taken during normal transaction processing to ensure enough information exists to recover from failures. \u5728\u6b63\u5e38\u8fd0\u884c\u7684\u4e8b\u52a1\u4e2d\uff0c\u8981\u8bb0\u65e5\u5fd7\uff0c\u4ee5\u4fdd\u5b58\u8db3\u591f\u7684\u4fe1\u606f\u7528\u6765\u6062\u590d\u3002</li> <li>Actions taken after a failure to recover the database contents to a state that ensures atomicity, consistency and durability. \u5728\u9519\u8bef\u53d1\u751f\u540e\uff0c\u8981\u6062\u590d\u5230\u4e00\u4e2a ACD \u72b6\u6001\u3002</li> </ul> <p>\u6545\u969c\u6062\u590d\u7b97\u6cd5\u5177\u6709 Idempotent(\u5e42\u7b49\u6027): An recovery algorithm is said to be idempotent if executing it several times gives the same result as executing it once. \u610f\u601d\u662f\u7b97\u6cd5\u6062\u590d\u591a\u6b21\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\uff0c\u56e0\u4e3a\u6062\u590d\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4e5f\u53d1\u751f crash\u3002</p> <p>Log-based Recovery \u57fa\u4e8e\u65e5\u5fd7\u7684\u6062\u590d\u6cd5</p> <p>log records \u65e5\u5fd7\u8bb0\u5f55\uff1a</p> <p>\u65e5\u5fd7\u8bb0\u5f55\u662f\u8bb0\u5f55\u5728 stable storage\uff08\u7a33\u5b9a\u5b58\u50a8\u5668\uff09\u4e0a\u7684\uff0c\u4e00\u7cfb\u5217\u8bb0\u5f55\u6570\u636e\u5e93\u600e\u6837\u88ab\u6210\u529f\u4fee\u6539\u7684\u4fe1\u606f\u3002log \u7531\u4e00\u4e32 log records \u7ec4\u6210\u3002\u5b83\u6709\u4ee5\u4e0b\u51e0\u79cd\u683c\u5f0f</p> <ul> <li>\\&lt;Ti start&gt; transaction \u5f00\u59cb\u7684\u6807\u5fd7\u3002</li> <li>\\&lt;Ti, X, V1, V2&gt; \u5f53 T \u6267\u884c\u4e86 write(X) \u65f6\uff0c\u5c31\u5199\u4e00\u4e2a update log\uff0c\u8868\u793a\u5728\u6570\u636e\u8868 X \u4e0a\uff0c\u5c06\u65e7\u503c X1 \u66f4\u65b0\u6210\u4e86 X2\u3002</li> <li>\\&lt;Ti commit&gt; \u5f53 Ti \u7ed3\u675f\uff0c\u5199\u4e00\u4e2a commit \u8bb0\u5f55\u3002</li> <li>\\&lt;Ti abort&gt; \u5982\u679c Ti roll back \u4e86\uff0c\u5199\u4e00\u4e2a abort \u8bb0\u5f55\u3002</li> </ul> <p>checkpoint \u4e4b\u95f4\u7684\u95f4\u9694\u5e94\u5f53\u901a\u8fc7\u65e5\u5fd7\u91cf\u6765\u786e\u5b9a\u3002</p> <p>\u4e24\u79cd\u7b56\u7565 - Redo:</p> <pre><code>In the redo phase, the system replays updates of all transactions by scaning the log forward from the last checkpoint. The log records that are replayed include log records for transactions that were rolled back befored system crash, and those that had not committed when the system crash occurred. \n\u5728 redo \u9636\u6bb5\u91cc\uff0c\u7cfb\u7edf\u6839\u636e\u91cd\u65b0\u626b\u63cf\u4e0a\u4e00\u6b21 checkpoint \u4e4b\u540e\u7684\u6240\u6709\u8bb0\u5f55\uff0c\u91cd\u65b0\u6267\u884c\u4e0a\u4e00\u6b21 checkpoint \u4e4b\u540e\u7684\u6240\u6709 transaction\u3002\u8fd9\u91cc\u7684 log \u8bb0\u5f55\u5305\u62ec\u5728 crash \u4e4b\u524d\u6b63\u5728\u56de\u6eda\u7684\u90a3\u4e9b\u8bb0\u5f55\uff0c\u4e5f\u5305\u62ec crash \u65f6\u8fd8\u6ca1\u6709\u63d0\u4ea4\u7684\u90a3\u4e9b\u8bb0\u5f55\u3002Redo \u9636\u6bb5\u4e5f\u4f1a\u5224\u65ad\u6240\u6709 transaction \u662f\u5426\u5b8c\u6210\u4e86\uff0c\u662f\u5426\u9700\u8981 roll back\u3002\u6ca1\u5b8c\u6210\u7684 transaction \u4f1a\u88ab\u6807\u8bb0\u4e3a\u6216\u8005 \\&lt;Ti abort\\&gt; \u6216\u8005 \\&lt;Ti commit\\&gt; \u7684\u6807\u8bb0\u3002\u5177\u4f53\u6765\u8bf4\u6267\u884c\u7684\u6b65\u9aa4\u6709\u4e0b\u9762\u51e0\u6761\uff1a\n\n-\n</code></pre> <ul> <li>Undo:</li> </ul>"},{"location":"CS/DB/xml/","title":"XML \u6587\u4ef6","text":""},{"location":"CS/DB/xml/#_1","title":"\u5b9a\u4e49\u548c\u57fa\u672c\u7ed3\u6784","text":""},{"location":"CS/DB/xml/#document-schema","title":"Document Schema","text":""},{"location":"CS/DB/xml/#_2","title":"\u67e5\u8be2","text":""},{"location":"CS/OS/","title":"\u7d22\u5f15","text":"<p>\u6211\u89c9\u5f97 x+i for i in [x, y, g] \u4e09\u4f4d\u7684\u7b14\u8bb0\u5bf9\u4e8e\u8fd9\u95e8\u8bfe\u7406\u8bba\u90e8\u5206\u7684\u4ecb\u7ecd\u5df2\u7ecf\u975e\u5e38\u5145\u5206\u4e86\u3002\u5927\u5bb6\u53ef\u4ee5\u5728\u6211 root \u7d22\u5f15\u9875\u6307\u5411\u7684 xy \u7b14\u8bb0\u627e\u5230\u6211\u8fd9\u91cc\u63d0\u5230\u7684\u4e09\u4efd\u7b14\u8bb0\u3002</p> <p>\u6211\u4ecd\u8981\u5199\u8fd9\u95e8\u8bfe\u7684\u5b9e\u9a8c\u90e8\u5206\u7684\u539f\u56e0\u662f\uff0c\u81ea\u5df1\u89c9\u5f97\u5b9e\u9a8c\u624b\u518c\u5199\u5f97\u4ecd\u6709\u4e00\u4e9b\u5bfc\u81f4\u4e0d\u592a\u597d\u7406\u89e3\u7684\u7f3a\u9677\uff0c\u6bd4\u5982\u7406\u8bba\u548c\u64cd\u4f5c\u5206\u6210\u4e0a\u4e0b\u4e24\u5927\u5757\u6765\u5199\uff0c\u5bfc\u81f4\u67e5\u8d77\u6765\u7684\u65f6\u5019\u50cf\u5728\u5403\u4e00\u76d8\u94a2\u4e1d\u7403\u7092\u610f\u5927\u5229\u9762\uff0c\u6bd4\u5982\u6709\u65f6\u5728\u8bf4\u64cd\u4f5c\u65f6\u4e0d\u5206\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684/\u6211\u8981\u505a\u7684/linux\u4f1a\u505a\u4f46\u662f\u6211\u4eec\u4e0d\u5173\u5fc3\u7684\u3002</p> <p>\u6211\u7684\u9884\u671f\u662f\u628a\u8fd9\u4efd\u7b14\u8bb0\u5199\u6210\u4e00\u5757\u4e00\u5757\u7684\u4e1c\u897f\uff0c\u6bcf\u4e00\u5757\u662f\u4e00\u4e2a\u7406\u8bba+\u64cd\u4f5c+\u4e00\u4e2a\u80fd\u8dd1\u8d77\u6765\u7684\u6700\u5c0f\u5355\u5143\u3002\u73b0\u5b9e\u662f\u6211\u7684\u65f6\u95f4\u771f\u7684\u592a\u4e0d\u8db3\u4e86\uff0c\u611f\u89c9\u53ea\u6765\u5f97\u53ca\u53bb\u8865\u5145\u4e00\u4e9b\u5b9e\u9a8c\u624b\u518c\u91cc\u6ca1\u6709\u5199\u7684\u80cc\u666f\u6216\u8005\u662f\u6211\u81ea\u5df1\u64cd\u4f5c\u65f6\u7684\u4e00\u4e9b\u5fc3\u5f97\u6216\u603b\u7ed3\uff0c\u53ea\u80fd\u5f53\u5b9e\u9a8c\u624b\u518c\u7684\u8865\u5145\u6765\u770b\u3002\u7136\u540e\u672c\u6765\u8fd9\u91cc\u5e94\u5f53\u6709\u4e00\u53e5\u5e0c\u671b\u4ee5\u540e\u6709\u65f6\u95f4\u80fd\u5199\u5b8c\uff0c\u4f46\u662f\u6211\u4e5f\u4e0d\u60f3\u8fd9\u6837\u627f\u8bfa\u4e86\uff0c\u6211\u66f4\u613f\u610f\u8bf4\u4e00\u4e9b\u73b0\u5b9e\u7684\u6bd4\u5982\u6211\u4e0d\u4f1a\u518d\u66f4\u65b0\u8fd9\u4efd\u7b14\u8bb0\u4e86\uff0c\u4f46\u662f\u5e0c\u671b\u8bfb\u8005\u505a\u5b9e\u9a8c\u7684\u65f6\u5019\u53ef\u4ee5\u5e26\u7740\u4e0a\u8ff0\u63d0\u5230\u7684\u601d\u8def\u53bb\u6574\u7406\u81ea\u5df1\u7684\u601d\u7ef4\u548c\u5b9e\u9a8c\u62a5\u544a\u3002</p> <p>\u63a5\u4e0b\u6765\u8bf7\u70b9\u8fdb\u53e6\u4e00\u4e2a lab \u9875\u9762\u7ee7\u7eed\u9605\u8bfb\u3002</p>"},{"location":"CS/OS/lab/","title":"OS lab","text":"<p>\u76ee\u5f55\uff1a\u8fd9\u91cc\u4f1a\u5148\u8bb2\u4e00\u4e0b\u7528\u5230\u7684\u80cc\u666f\u77e5\u8bc6\u548c mac \u4e0b\u7684\u73af\u5883\u914d\u7f6e\u6280\u5de7\uff08\u56e0\u4e3a\u624b\u518c\u8bb2 mac \u4e0d\u591a\uff09\uff0c\u7136\u540e\u6328\u4e2a\u5b9e\u9a8c\u6211\u60f3\u8fdb\u884c\u4e00\u4e9b\u7efc\u8ff0\uff0c\u4e0d\u77e5\u9053\u7cbe\u529b\u80fd\u652f\u6491\u5199\u591a\u5c11\uff0c\u6700\u540e\u8865\u5145\u4e24\u4e2a\u6211\u5b9e\u9a8c\u4e2d\u603b\u9047\u5230\u7684\u4f46\u624b\u518c\u6ca1\u6d89\u53ca\u7684\u95ee\u9898\u3002\u81ea\u77e5\u5b66\u5f97\u4e0d\u597d\uff0c\u4e0d\u786e\u5b9a\u7684\u5730\u65b9\u6211\u4f1a\u6807\u51fa\u6765\u3002</p>"},{"location":"CS/OS/lab/#overview","title":"overview","text":"<p>Warning</p> <p>\u7ed3\u6784\u56fe TODO</p> <p>\u4e00\u4e2a\u6700\u540e\u505a\u51fa\u6765\u7684 lab \u7ed3\u6784\u56fe:</p>"},{"location":"CS/OS/lab/#_1","title":"\u80cc\u666f\u77e5\u8bc6","text":"<p>\u5148\u4ecb\u7ecd\u4e00\u4e0b\u6574\u4e2a\u5b9e\u9a8c\u548c\u5b9e\u9a8c\u73af\u5883\u7684\u5927\u80cc\u666f\u3002</p>"},{"location":"CS/OS/lab/#os","title":"\u8ba1\u7b97\u673a\u4e0a\u7535\u5230OS\u8fd0\u884c\u7684\u8fc7\u7a0b","text":"<p>\u5d4c\u5165\u5f0f\u7cfb\u7edf\uff08\u76f8\u6bd4\u8ba1\u7b97\u673a\u7cfb\u7edf\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u80fd\u5728\u7279\u5b9a\u786c\u4ef6\u4e0a\u8fd0\u884c\uff09\u7684\u542f\u52a8\u8fc7\u7a0b\u6bd4\u8f83\u7b80\u5355\uff0c\u7528\u5b83\u6765\u505a\u4f8b\u5b50\u8bb2\u89e3\uff0c\u8fc7\u7a0b\u662f\uff1a</p> <ul> <li>\u4e0a\u7535\uff0c\u5bf9\u786c\u4ef6\u8fdb\u884c\u4e00\u4e9b\u7b80\u5355\u7684\u521d\u59cb\u5316</li> <li>\u5c06CPU\u7684program counter\u79fb\u52a8\u5230\u5185\u5b58\u7684bootloader\u7684\u8d77\u59cb\u5730\u5740\u3002bootloader\u7528\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u8fd0\u884c\u5185\u6838\u4e4b\u524d\uff0c\u521d\u59cb\u5316\u786c\u4ef6\uff0c\u52a0\u8f7d\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u3002</li> <li>riscv\u67b6\u6784\u4e0bbootloader\u8fd0\u884c\u5728M\u6a21\u5f0f\u4e0b\uff0cbootloader\u8fd0\u884c\u5b8c\u6bd5\u540e\u5207\u6362\u5230S\u6a21\u5f0f\uff0c\u968f\u540e\u5f00\u59cb\u8fd0\u884ckernel\u3002</li> </ul> <pre><code>Hardware             RISC-V M Mode           RISC-V S Mode \n+------------+         +--------------+         +----------+\n|  Power On  |  ----&gt;  |  Bootloader  |  ----&gt;  |  Kernel  |\n+------------+         +--------------+         +----------+\n</code></pre>"},{"location":"CS/OS/lab/#sbiopensbi","title":"sbi\u548copensbi","text":"<p>\u4ecb\u7ecd\u5b9e\u9a8c\u73af\u5883\u7528\u7684\u7b2c\u4e00\u4e2a\u5de5\u5177\uff1asbi (supervisor binary interface)\u662f s-mode \u7684 kernel \u548c m-mode \u6267\u884c\u73af\u5883\u4e4b\u95f4\u7684\u63a5\u53e3\u89c4\u8303</p> <p>opensbi\u662f\u4e00\u4e2ariscv sbi\u89c4\u8303\u7684\u5f00\u6e90\u5b9e\u73b0\uff0c\u603b\u4e4b\u610f\u601d\u662fopensbi\u662f\u4e00\u4e9b\u5bf9m-mode\u4e0b\u786c\u4ef6\u7684\u7edf\u4e00\u5b9a\u4e49\uff0c\u5728s-mode\u4e0b\u7684\u5185\u6838\u53ef\u4ee5\u6309\u7167\u8fd9\u4e9b\u89c4\u8303\u5bf9\u4e0d\u540c\u786c\u4ef6\u64cd\u4f5c\u3002</p> <p>\u6211\u4eecopensbi\u53ef\u4ee5\u4f5c\u4e3abootloader\u5b8c\u6210\u673a\u5668\u542f\u52a8\u65f6m-mode\u4e0b\u7684\u786c\u4ef6\u521d\u59cb\u5316\u548c\u5bc4\u5b58\u5668\u8bbe\u7f6e\uff0c\u53ef\u4ee5\u5229\u7528opensbi\u5b8c\u6210\u5b57\u7b26\u6253\u5370\u4e4b\u7c7b\u7684\u64cd\u4f5c\u3002</p> <p></p> <p>qemu\u4f1a\u628aopensbi\u8d77\u59cb\u5730\u5740\u52a0\u8f7d\u52300x80000000\u5904.</p> <p>opensbi\u521d\u59cb\u5316\u540e\u4f1a\u8df3\u8f6c\u52300x80200000\u5904\uff0c\u5373kernel\u7684\u8d77\u59cb\u5730\u5740\u3002\u6240\u4ee5\u8981\u7f16\u8bd1\u7684\u4ee3\u7801\u57280x80200000\u5904\u3002</p>"},{"location":"CS/OS/lab/#_2","title":"\u7279\u6743\u6a21\u5f0f","text":"<p>riscv\u6709\u4e09\u79cd\u7279\u6743\u6a21\u5f0f\uff1aUser, Supervisor, &amp; Machine\u3002\u6574\u4e2a\u5b9e\u9a8c\u4e2d\u6211\u4eec\u4e00\u5f00\u59cb\u90fd\u8981\u5728 s-mode \u64cd\u4f5c\uff0c\u4e4b\u540e\u6162\u6162\u5b9e\u73b0 u-mode\u3002</p> Level Encoding Name Abbreviation \u4ecb\u7ecd 0 00 User/Application U \u5bf9\u786c\u4ef6\u6a21\u5f0f\u7684\u62bd\u8c61\uff0c\u6709\u6700\u9ad8\u7ea7\u522b\u7684\u6743\u9650 1 01 Supervisor S \u5bf9\u5e94\u4e0e\u5185\u6838\u6001Kernel\u3002\u5f53\u7528\u6237\u9700\u8981\u5185\u6838\u8d44\u6e90\u65f6\uff0c\u5411\u5185\u6838\u7533\u8bf7\uff0c\u5e76\u5207\u6362\u5230\u5185\u6838\u6001\u8fdb\u884c\u5904\u7406 2 10 Reserved 3 11 Machine M \u7528\u6237\u6001\uff0c\u6700\u4f4e\u7ea7\u522b\u6743\u9650 <p>\u4e00\u822c\u6bcf\u79cd\u6a21\u5f0f\u53ef\u4ee5\u8fd0\u884c\u7684\u7a0b\u5e8f\u6709</p> supported modes intended usage M simple embedded systems M, U secure embedded systems M, S, U systems running unix-like operating systems"},{"location":"CS/OS/lab/#_3","title":"\u73af\u5883\u914d\u7f6e","text":""},{"location":"CS/OS/lab/#docker","title":"Docker","text":"<p>\u5728\u5b98\u7f51\u5b89\u88c5Docker\u3002\u4e4b\u540e\u9700\u8981\u6253\u5f00Docker app\uff0c\u767b\u9646\u540e\u624d\u80fd\u5728terminal\u4e2d\u4f7f\u7528docker\u547d\u4ee4\u3002</p> <pre><code>$ sudo hdiutil attach Docker.dmg\n$ sudo /Volumes/Docker/Docker.app/Contents/MacOS/install\n$ sudo hdiutil detach /Volumes/Docker\n</code></pre> <p>\u521b\u5efa\u5bb9\u5668</p> <pre><code>docker pull ubuntu:22.04\ndocker run -it --name my_linux ubuntu:22.04 bash\n</code></pre> <p>\u51fa\u73b0root@xxxxxxx:?# \u5373\u521b\u5efa\u6210\u529f\uff0c\u5176\u4e2dxxxxxxx\u4e00\u4e32\u662f\u5f53\u524d\u5bb9\u5668\u7684id\uff0c\u9700\u8981\u8bb0\u5f55\u4e0b\u6765\uff0c\u4e0b\u6b21\u53ef\u4ee5\u901a\u8fc7\u8be5id\u8fdb\u5165\u76f8\u540c\u5bb9\u5668\u3002</p> <p></p> <p>\u5b89\u88c5\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u5305\uff0cqemu\uff0cgdb\uff0c\u8fd9\u51e0\u6b65\u9700\u8981\u5f00\u7740\u547d\u4ee4\u884c\u4ee3\u7406\uff0c\u622a\u56fe\u7565\u3002</p>"},{"location":"CS/OS/lab/#docker_1","title":"\u806a\u660e\u5730\u4f7f\u7528docker","text":"<p>\u8fd8\u662f\u6700\u597d\u914d\u7f6e\u4e00\u4e0b vscode \u91cc\u7684\u56fe\u5f62\u754c\u9762\u3002\u6b65\u9aa4\uff1a</p> <ul> <li>\u9996\u5148\u5728 vscode \u91cc\u5b89\u88c5 docker \u63d2\u4ef6\u3002</li> <li>\u4ee5\u4ec0\u4e48\u65b9\u5f0f\u5173\u8054\u4e0a docker \u5fd8\u8bb0\u4e86\uff0c\u53ef\u80fd\u662f\u8f93\u5165\u8d26\u53f7\u5bc6\u7801\u767b\u9646\u3002\u7136\u540e\u5728 docker \u63d2\u4ef6\u91cc\u5c31\u53ef\u4ee5\u770b\u5230\u4f60\u7684\u6240\u6709\u5bb9\u5668\u3002</li> <li>\u6587\u4ef6\u7ba1\u7406\u4e0a\uff1a\u4e2a\u4eba\u8ba4\u4e3a\u6bcf\u4e2a lab \u7684\u6587\u4ef6\u5939\u5728 docker \u4e0a\u5355\u72ec\u5f00\u4e00\u4e2a\u6587\u4ef6\u5939\u6bd4\u8f83\u597d\u4f7f\u3002\u5bb9\u5668\u91cc\u7559\u6700\u65b0\u7248\u4ee3\u7801\uff0c\u672c\u5730\u7559\u62f7\u8d1d\u3002</li> <li>gui \u4f7f\u7528\u4e0a\uff1a\u6709\u4e09\u79cd\u7f16\u8f91\u6587\u4ef6\u548c\u8fd0\u884c\u7684\u65b9\u6cd5\u3002(1) \u628a\u5bb9\u5668 attech new window\uff0c\u5728\u5355\u72ec\u7a97\u53e3\u4e5f\u5373\u5bb9\u5668\u91cc\u7f16\u8f91\u4ee3\u7801\u548c\u8fd0\u884c\u7ec8\u7aef\u3002(2) \u5728\u672c\u5730\u4fee\u6539\u4ee3\u7801\uff0c\u6bcf\u6b21\u8fd0\u884c\u7684\u65f6\u5019 cp \u5230 docker\uff0c\u518d\u628a\u5bb9\u5668 attach shell \u8fd0\u884c\u3002(3) \u76f4\u63a5\u7528 docker \u63d2\u4ef6\u53bb\u8bbf\u95ee\u6587\u4ef6\u76ee\u5f55\uff0c\u7136\u540e attach shell \u53bb\u8fd0\u884c\u3002\u540e\u4e24\u8005\u90fd\u6781\u5176\u96be\u7528\u3002\u6211\u4e0d\u60f3\u89e3\u91ca\u96be\u7528\u5728\u54ea\u91cc\u4e86\uff0c\u867d\u7136\u4e5f\u4f7f\u6211\u719f\u7ec3\u638c\u63e1\u4e86\u7528\u547d\u4ee4\u884c\u63a7\u5236\u8fdb\u5165\u65b0\u7684\u5bb9\u5668\u548c\u8fdb\u5165\u5df2\u6709\u7684\u5bb9\u5668\u548c <code>ps a</code> \u548c <code>kill qemu</code> \u7b49\u547d\u4ee4\u3002\u3002\u5f53\u7136\u53ef\u80fd\u4e5f\u53ea\u6709\u7b28\u86cb\u6211\u6309\u7167\u540e\u4e24\u79cd\u7528\u4e86\u597d\u4e45\u3002</li> </ul>"},{"location":"CS/OS/lab/#_4","title":"\u65b9\u6cd5\u4ecb\u7ecd","text":"<p>Warning</p> <p>TODO \u8fd9\u5757\u5e94\u8be5\u518d\u6269\u5199\u4e00\u4e0b\u7684</p> <ul> <li>shell\u811a\u672c\uff1a\u76f8\u5f53\u4e8e\u4e00\u7ec4\u6253\u5305\u597d\u7684\u547d\u4ee4\u884c\uff0c\u91cc\u9762\u547d\u4ee4\u7528\u6765\u6307\u793a\u547d\u4ee4\u884c\u7684\u8fd0\u884c\u987a\u5e8f\u7b49\u3002\u53ef\u4ee5\u76f4\u63a5\u7528 <code>bash [shell file].sh</code> \u6765\u8fd0\u884c\u3002</li> <li>qemu\uff1a\u4e00\u4e2a\u53ef\u4ee5\u5728x86\u5e73\u53f0\u4e0a\u6267\u884c\u4e0d\u540c\u67b6\u6784\u4e0b\u7a0b\u5e8f\u7684\u6a21\u62df\u5668\uff0c\u672c\u5b9e\u9a8c\u4e2d\u7528qemu\u5b8c\u6210\u5bf9riscv\u67b6\u6784\u7a0b\u5e8f\u7684\u6a21\u62df\u3002</li> <li>gdb\uff1a\u662fgnu debugger\u7684\u7f29\u5199\uff0c\u662f\u4e00\u4e2aunix/linux\u7cfb\u7edf\u4e0b\u7684\u57fa\u4e8e\u547d\u4ee4\u884c\u7684\u8c03\u8bd5\u5de5\u5177\u3002\u80fd\u591f\u542f\u52a8\u3001\u6307\u5b9a\u6761\u4ef6\u505c\u6b62\u3001\u68c0\u67e5\u3001\u66f4\u6539\u7a0b\u5e8f\u3002</li> <li>\u4ea4\u53c9\u7f16\u8bd1\uff1a\u7528\u4e00\u4e2a\u67b6\u6784\u7684\u5e73\u53f0\u7f16\u8bd1\u53e6\u4e00\u4e2a\u67b6\u6784\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u5982\u7528x86\u7f16\u8bd1riscv\u8fd0\u884c\u7684\u7a0b\u5e8f\u3002\u6211\u4eec\u7528\u7684\u4ea4\u53c9\u7f16\u8bd1\u94fe\u662f <code>riscv-gnu-toolchain</code> \u3002</li> <li>\u5185\u6838\u914d\u7f6e\uff1a\u5185\u6838\u914d\u7f6e\u662f\u7528\u4e8e\u914d\u5236\u662f\u5426\u542f\u7528\u5185\u6838\u7684\u5404\u9879\u7279\u6027\uff0c\u5199\u5728\u6587\u4ef6defconfig\u91cc\u3002</li> <li>\u7f16\u8bd1\u5de5\u5177\uff1amakefile\uff0cmakefile\u77e5\u8bc6\u6211\u6ca1\u5b66\u597d\uff0c\u4e0d\u8fc7\u73b0\u5728gpt\u5199\u5f97\u6bd4\u6211\u597d\u3002</li> </ul>"},{"location":"CS/OS/lab/#qemu-gdb","title":"qemu + gdb \u8c03\u8bd5","text":"<p>\u9700\u8981\u8c03\u8bd5\u65f6\uff0c\u56e0\u4e3a\u9876\u5c42 makefile \u5e2e\u6211\u4eec\u5199\u597d\u4e86\u8c03\u8bd5\u547d\u4ee4\uff0c\u6211\u4eec\u7b2c\u4e00\u4e2a terminal \u53ea\u9700\u8981\u8f93\u5165 <code>make debug</code>\u3002 \u7136\u540e\u65b0\u5f00\u4e00\u4e2a terminal \u8f93\u5165 <code>gdb-multiarch path/to/vmlinux</code> \u5176\u4e2d vmlinux \u662f\u7f16\u8bd1\u597d\u7684\u6587\u4ef6\u3002</p> <p>gdb \u4f7f\u7528\u7684\u65b9\u6cd5/\u7a8d\u95e8</p> <ul> <li>\u9996\u5148\u6309\u56de\u8f66\u53ef\u4ee5\u81ea\u52a8\u6267\u884c\u4e0a\u4e00\u6761\u8bed\u53e5\uff0c\u4e0d\u7528\u91cd\u65b0\u624b\u6253\u4e00\u904d\u3002</li> <li>\u6b64\u5916\u6574\u4e2a\u5b9e\u9a8c\u9700\u8981\u7528\u5230\u7684\u547d\u4ee4\u89c1\u4e0b\u65b9\u8868\u683c</li> </ul> \u663e\u793a\u6709\u5173\u7684 \u7b80\u5199 \u6307\u4ee4 \u663e\u793a\u6e90\u4ee3\u7801 layout src \u663e\u793a\u6c47\u7f16\u4ee3\u7801 layout asm \u9000\u51fa\u6c47\u7f16\u663e\u793a ctrl+x, A \u9000\u51fagdb quit \u6267\u884c\u6709\u5173\u7684 \u7b80\u5199 \u6307\u4ee4 \u5355\u6b65\u6267\u884c\uff0c\u8fd0\u884c\u7a0b\u5e8f\uff0c\u505c\u5728\u7b2c\u4e00\u6267\u884c\u8bed\u53e5 start \u65ad\u70b9\u540e\u7ee7\u7eed\u6267\u884c c continue \u5355\u6b65\u8c03\u8bd5\uff08\u9010c\u8bed\u8a00\u8bed\u53e5\uff0c\u51fd\u6570\u76f4\u63a5\u6267\u884c\uff09 n next \u6267\u884c\u5355\u6761\u6307\u4ee4 si step instruction \u91cd\u65b0\u5f00\u59cb\u8fd0\u884c\u6587\u4ef6\uff08run-text\uff1a\u52a0\u8f7d\u6587\u672c\u6587\u4ef6\uff0crun-bin\uff1a\u52a0\u8f7d\u4e8c\u8fdb\u5236\u6587\u4ef6\uff09 r run \u7ed3\u675f\u5f53\u524d\u51fd\u6570\uff0c\u8fd4\u56de\u5230\u51fd\u6570\u8c03\u7528\u70b9 finish \u65ad\u70b9\u6709\u5173 \u7b80\u5199 \u6307\u4ee4 \u8bbe\u7f6e\u65ad\u70b9\u5728foo\u51fd\u6570 b foo break foo \u65ad\u5728\u67d0\u5730\u5740 b * 0x80200000 break * 0x80200000 \u67e5\u770b\u7b2cm\u4e2a-\u7b2cn\u4e2a\u65ad\u70b9 info breakpoints [LIST] \u67e5\u770b\u6240\u6709\u65ad\u70b9 info breakpoints \u5220\u9664N\u53f7\u65ad\u70b9 delete [N] \u5c55\u793a\u503c\u6709\u5173\u7684 \u7b80\u5199 \u6307\u4ee4 \u67e5\u770b\u51fd\u6570\u7684\u8c03\u7528\u7684\u6808\u5e27\u548c\u5c42\u7ea7\u5173\u7cfb bt backtrace \u5207\u6362\u51fd\u6570\u7684\u6808\u5e27 f frame \u6253\u5370\u503c\u53ca\u5730\u5740 p print \u67e5\u770b\u51fd\u6570\u5185\u90e8\u5c40\u90e8\u53d8\u91cf\u7684\u6570\u503c i ifo \u67e5\u770b\u5bc4\u5b58\u5668 ra \u7684\u503c i r ra \u8ffd\u8e2a\u67e5\u770b\u5177\u4f53\u53d8\u91cf\u503c display [] \u4ee5 16 \u8fdb\u5236\u6253\u5370\u00a0\u00a0\u5904\u5f00\u59cb\u7684 16 Bytes \u5185\u5bb9 x/4x  \u663e\u793a\u6570\u7ec4 p *swapper_pg_dir@100 16\u8fdb\u5236\u663e\u793a\uff08x\u500d\u6570\u53ea\u80fd\u4e3a1\uff09 p/x swapper_pg_dir [start]@1 <p>\u8c03\u8bd5\u7684\u65f6\u5019\u9700\u8981\u770b\u4ec0\u4e48\u5462\uff1f</p> <p>\u8fd9\u662f\u6211\u521a\u4e0a\u624b\u8c03\u8bd5\u7684\u65f6\u5019\u611f\u5230\u56f0\u6270\u7684\u4e00\u4e2a\u95ee\u9898\u3002</p> <p>\u540e\u6765\u6211\u9010\u6e10\u60f3\u6e05\u695a\u7684\u662f\uff0c\u9996\u5148\u6211\u8ba4\u4e3a\u5982\u679c\u4e0d\u77e5\u9053\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\u8fd0\u884c\u7684\u6d41\u7a0b\uff08\u6bd4\u5982\u5148\u54ea\u4e2a\u51fd\u6570\u518d\u54ea\u4e2a\u51fd\u6570\uff09\uff0c\u662f\u4e0d\u9002\u5408\u5f00\u59cb\u8c03\u8bd5\u7684\uff0c\u5e94\u5f53\u56de\u53bb\u518d\u601d\u8003\u4e00\u904d lab \u7684\u7406\u8bba\uff0c\u8d77\u7801\u77e5\u9053\u81ea\u5df1\u7a0b\u5e8f\u7684\u5404\u79cd\u9884\u671f\u7ed3\u679c\u3002\u66b4\u8bba\u4e00\u70b9\u8bf4\u5176\u5b9e\u6211\u89c9\u5f97\u8c03\u8bd5\u65f6\u957f\u5927\u4e8e\u5f00\u53d1\u65f6\u957f\u90fd\u662f\u4e0d\u592a\u597d\u7684\uff0c\u66b4\u9732\u51fa\u80af\u5b9a\u54ea\u91cc\u7406\u8bba\u6ca1\u5543\u900f\u5c31\u5f00\u59cb\u52a8\u7b14\u4e86\u3002</p> <p>\u7136\u540e\u53ef\u4ee5\u7531\u5927\u5230\u5c0f\uff0c\u6bd4\u5982\u5148\u628a\u51e0\u4e2a\u65ad\u70b9\u6253\u5728\u731c\u6d4b\u53ef\u80fd\u51fa\u9519\u4e86\u7684\u51e0\u4e2a\u51fd\u6570\u4e0a\uff0c\u786e\u5b9a\u5177\u4f53\u5728\u54ea\u4e2a\u51fd\u6570\u51fa\u9519\u540e\u518d\u9010 c \u8bed\u8a00\u884c\u8fd0\u884c\uff0c\u786e\u5b9a\u662f\u54ea\u4e2a c \u8bed\u8a00\u884c\u51fa\u9519\u540e\u518d\u9010\u6c47\u7f16\u884c\u8fd0\u884c\uff0c\u5faa\u5e8f\u6e10\u8fdb\u627e\u5230\u5177\u4f53\u51fa\u9519\u7684\u6307\u4ee4\u3002\u5728\u9644\u8fd1\u6253\u5370\u6253\u5370\u51e0\u4e2a\u5bc4\u5b58\u5668\u7684\u503c\uff08\u53ef\u4ee5\u770b\u7684\u5bc4\u5b58\u5668\u6211\u4f1a\u5728\u4e0b\u4e00\u8282\u4ecb\u7ecd\uff09\uff0c\u7136\u540e\u5728\u6b64\u57fa\u7840\u4e0a\u601d\u8003\u9519\u8bef\u539f\u56e0\u3002</p>"},{"location":"CS/OS/lab/#gdb","title":"\u806a\u660e\u5730\u4f7f\u7528 gdb","text":"<p>gdb \u81ea\u5e26\u7684\u547d\u4ee4\u884c ui \u7f3a\u70b9\u4e3b\u8981\u5728\u4e8e\u4e0d\u80fd\u968f\u65f6\u663e\u793a\u5bc4\u5b58\u5668\u548c\u53d8\u91cf\u7684\u503c\uff0c\u8c03\u8bd5\u4f1a\u4e0d\u8212\u670d\u3002\u6709\u4e00\u4e9b\u66f4\u597d\u7684 ui \u5de5\u5177\u3002</p> <p>\u6211\u6ca1\u6709\u914d\u6240\u4ee5\u4e0d\u80fd\u63d0\u4f9b\u5f88\u597d\u7684\u6211\u7684\u63a8\u8350\uff0c\u8d34\u4e00\u4e9b\u522b\u4eba\u7684\u5e16\u5b50\u3002\u9664\u4e86\u4e0b\u9762\u5e16\u5b50\u91cc\u63d0\u5230\u7684\u51e0\u4e2a\uff0c\u8431\u8431\u8fd8\u63d0\u5230\u4e00\u4e2a <code>gdbpeda</code>\u3002</p> <p>\u63a8\u8350\u51e0\u4e2a\u597d\u7528\u7684GDB\u56fe\u5f62\u5316\u529f\u80fd\u589e\u5f3a\u63d2\u4ef6</p>"},{"location":"CS/OS/lab/#lab0","title":"lab0","text":"<p>\u6ca1\u96be\u5ea6\u4e0d\u7528\u8bb2</p>"},{"location":"CS/OS/lab/#lab1","title":"lab1","text":""},{"location":"CS/OS/lab/#c-risc-v","title":"C &amp; RISC-V \u5185\u8054\u6c47\u7f16","text":"<p>Note</p> <p>\u8fd9\u5757\u6765\u81ea\u4e8e\u5bf9 lab1 \u6587\u6863\u7684\u6574\u7406\u3002\u5e0c\u671b\u6709\u6574\u7406\u5f97\u6bd4\u539f\u6587\u6863\u53ef\u8bfb\u4e00\u4e9b\u3002</p> <pre><code>__asm__ volatile (\n\"instruction1\\n\"\n\"instruction2\\n\"\n......\n......\n\"instruction3\\n\"\n: [out1] \"=r\" (v1),[out2] \"=r\" (v2)\n: [in1] \"r\" (v1), [in2] \"r\" (v2)\n: \"memory\"\n);\n</code></pre> <p>\u5176\u4e2d\uff0c\u4e09\u4e2a\u00a0<code>:</code>\u00a0\u5c06\u6c47\u7f16\u90e8\u5206\u5206\u6210\u4e86\u56db\u90e8\u5206\u3002\u8fd9\u56db\u90e8\u5206\u4e2d\u540e\u4e09\u90e8\u5206\u4e0d\u662f\u5fc5\u987b\u7684\uff1a</p> <ul> <li>\u7b2c\u4e00\u90e8\u5206\u662f\u6c47\u7f16\u6307\u4ee4\uff0c\u6307\u4ee4\u672b\u5c3e\u9700\u8981\u6dfb\u52a0 '\\n'\u3002</li> <li>\u7b2c\u4e8c\u90e8\u5206\u662f\u8f93\u51fa\u64cd\u4f5c\u6570\u90e8\u5206\u3002</li> <li>\u7b2c\u4e09\u90e8\u5206\u662f\u8f93\u5165\u64cd\u4f5c\u6570\u90e8\u5206\u3002</li> <li>\u7b2c\u56db\u90e8\u5206\u662f\u53ef\u80fd\u5f71\u54cd\u7684\u5bc4\u5b58\u5668\u6216\u5b58\u50a8\u5668\uff0c\u7528\u4e8e\u544a\u77e5\u7f16\u8bd1\u5668\u5f53\u524d\u5185\u8054\u6c47\u7f16\u8bed\u53e5\u53ef\u80fd\u4f1a\u5bf9\u67d0\u4e9b\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u8fdb\u884c\u4fee\u6539\uff0c\u4f7f\u5f97\u7f16\u8bd1\u5668\u5728\u4f18\u5316\u65f6\u5c06\u5176\u56e0\u7d20\u8003\u8651\u8fdb\u53bb\u3002</li> </ul> <p>\u8fd9\u6bb5\u6682\u65f6\u7528\u4e0d\u7740\u6211\u4e0d\u5199\u4e86\uff0c\u8d34\u4e00\u6bb5lab1\u4e2d\u7684\u539f\u6587\u7ed9\u7684\u793a\u4f8b\u3002e.g. 1</p> <pre><code>unsigned long long s_example(unsigned long long type,unsigned long long arg0) {\nunsigned long long ret_val;\n__asm__ volatile (\n\"mv x10, %[type]\\n\"\n\"mv x11, %[arg0]\\n\"\n\"mv %[ret_val], x12\"\n: [ret_val] \"=r\" (ret_val)\n: [type] \"r\" (type), [arg0] \"r\" (arg0)\n: \"memory\"\n);\nreturn ret_val;\n}\n</code></pre> <p>e.g. 1. \u4e2d\u6307\u4ee4\u90e8\u5206\uff0c%[type]\u3001%[arg0]\u4ee5\u53ca%[ret_val]\u4ee3\u8868\u7740\u7279\u5b9a\u7684\u5bc4\u5b58\u5668\u6216\u662f\u5185\u5b58\u3002\u8f93\u5165\u8f93\u51fa\u90e8\u5206\u4e2d\uff0c<code>[type] \"r\" (type)</code>\u4ee3\u8868\u7740\u5c06\u00a0<code>()</code>\u00a0\u4e2d\u7684\u53d8\u91cf\u00a0<code>type</code>\u00a0\u653e\u5165\u5bc4\u5b58\u5668\u4e2d\uff08<code>\"r\"</code>\u00a0\u6307\u653e\u5165\u5bc4\u5b58\u5668\uff0c\u5982\u679c\u662f\u00a0<code>\"m\"</code>\u00a0\u5219\u4e3a\u653e\u5165\u5185\u5b58\uff09\uff0c\u5e76\u4e14\u7ed1\u5b9a\u5230\u00a0<code>[]</code>\u00a0\u4e2d\u547d\u540d\u7684\u7b26\u53f7\u4e2d\u53bb\u3002<code>[ret_val] \"=r\" (ret_val)</code>\u00a0\u4ee3\u8868\u7740\u5c06\u6c47\u7f16\u6307\u4ee4\u4e2d\u00a0<code>%[ret_val]</code>\u00a0\u7684\u503c\u66f4\u65b0\u5230\u53d8\u91cf\u00a0<code>ret_val</code> \u4e2d\u3002</p> <p>e.g. 2</p> <pre><code>#define write_csr(reg, val) ({\n__asm__ volatile (\"csrw \" #reg \", %0\" :: \"r\"(val)); })\n</code></pre> <p>e.g. 2. \u5b9a\u4e49\u4e86\u4e00\u4e2a\u5b8f\uff0c\u5176\u4e2d\u00a0<code>%0</code>\u00a0\u4ee3\u8868\u7740\u8f93\u51fa\u8f93\u5165\u90e8\u5206\u7684\u7b2c\u4e00\u4e2a\u7b26\u53f7\uff0c\u5373\u00a0<code>val</code>\u3002 <code>#reg</code>\u00a0\u662fc\u8bed\u8a00\u7684\u4e00\u4e2a\u7279\u6b8a\u5b8f\u5b9a\u4e49\u8bed\u6cd5\uff0c\u76f8\u5f53\u4e8e\u5c06reg\u8fdb\u884c\u5b8f\u66ff\u6362\u5e76\u7528\u53cc\u5f15\u53f7\u5305\u88f9\u8d77\u6765\u3002\u4f8b\u5982\u00a0<code>write_csr(sstatus,val)</code>\u00a0\u7ecf\u5b8f\u5c55\u5f00\u4f1a\u5f97\u5230\uff1a</p> <pre><code>({\n__asm__ volatile (\"csrw \" \"sstatus\" \", %0\" :: \"r\"(val)); })\n</code></pre> <p>\u6b64\u5916\uff0c\u8fd9\u4e2a\u793a\u4f8b\u4e2d\u7684\u00a0<code>({...})</code>\u00a0\u8fd8\u6d89\u53ca\u4e86\u4e00\u4e2a GNU \u5bf9 C \u7684\u6269\u5c55\uff0c\u53ef\u4ee5\u53c2\u8003\u00a0Statements and Declarations in Expressions\u3002\u590d\u5408\u8bed\u53e5\u4e2d\u7684\u6700\u540e\u4e00\u9879\u5e94\u8be5\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u540e\u8ddf\u4e00\u4e2a\u5206\u53f7\u00a0<code>;</code>\u3002\u8be5\u5b50\u8868\u8fbe\u5f0f\u7684\u503c\u7528\u4f5c\u6574\u4e2a\u8bed\u53e5\u7684\u503c\uff0c\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u7c7b\u4f3c\u201c\u8fd4\u56de\u503c\u201d\u7684\u6548\u679c\u3002</p>"},{"location":"CS/OS/lab/#_5","title":"\u7f16\u8bd1\u7684\u77e5\u8bc6","text":"<p>Note</p> <p>\u8fd9\u5757\u6765\u81ea\u4e8e\u5bf9 lab1 \u6587\u6863\u7684\u6574\u7406\u3002\u5e0c\u671b\u6709\u6574\u7406\u5f97\u6bd4\u539f\u6587\u6863\u53ef\u8bfb\u4e00\u4e9b\u3002</p> <p>`vmlinux.lds`` \u662f GNU ld\uff0c\u4e00\u79cd\u94fe\u63a5\u5668\uff0c\u5c06 .o \u6587\u4ef6\u548c\u5e93\u6587\u4ef6\u8fde\u63a5\u8d77\u6765\u6210\u53ef\u6267\u884c\u6587\u4ef6\u3002ld\u4f7f\u7528\u94fe\u63a5\u811a\u672clinker script\u63a7\u5236\u3002\u8fd9\u4e2a\u6587\u4ef6\u91cc\u6709\u5199\uff1a</p> <ul> <li>\u76ee\u6807\u67b6\u6784 <code>OUTPUT_ARCH( \"riscv\" )</code></li> <li>\u7a0b\u5e8f\u5165\u53e3\uff1a <code>ENTRY( _start )</code>\u5e76\u4e14head.S\u91cc\u9700\u8981\u7f16\u5199\u5bf9\u5e94\u7684_start\u51fd\u6570</li> <li>kernel\u4ee3\u7801\u8d77\u59cb\u5730\u5740 <code>BASE_ADDR = 0x80200000;</code></li> <li>\u6bcf\u4e2a\u6bb5\u7684\u8d77\u59cb\u5730\u5740 \u7ed3\u675f\u5730\u5740 \u5bf9\u9f50\u65b9\u5f0f</li> <li>kernel\u4ee3\u7801\u7ed3\u675f\u5730\u5740</li> </ul> <p>\u6211\u4eec\u9605\u8bfb\u4e00\u4e0b\u8fd9\u4e2a\u94fe\u63a5\u5668\u6587\u4ef6\uff0c\u5bf9\u4e4b\u540e\u7684\u5b9e\u9a8c\u5e2e\u52a9\u633a\u5927\u3002</p> <p>\u9996\u5148\u53ef\u4ee5\u7c97\u7565\u89c2\u5bdf\u5230\uff0ckernel \u7a7a\u95f4\u91cc\u662f\u5206\u6bb5(secition)\u7684\uff0c\u4e3b\u8981\u7684section\u6709\uff1a</p> \u6bb5\u540d \u4e3b\u8981\u4f5c\u7528 .text \u901a\u5e38\u5b58\u653e\u7a0b\u5e8f\u6267\u884c\u4ee3\u7801 .rodata \u901a\u5e38\u5b58\u653e\u5e38\u91cf\u7b49\u53ea\u8bfb\u6570\u636e .data \u901a\u5e38\u5b58\u653e\u5df2\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf \u9759\u6001\u53d8\u91cf .bss \u901a\u5e38\u5b58\u653e\u672a\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf \u9759\u6001\u53d8\u91cf <p>\u518d\u7ec6\u81f4\u4e00\u70b9\u53bb\u89c2\u5bdf\u91cc\u9762\u7684\u7b26\u53f7\u3002</p> <ul> <li>\u7b26\u53f7 <code>.</code> \u5728\u94fe\u63a5\u811a\u672c\u4ee3\u8868\u5f53\u524d\u5730\u5740\uff0c\u5b83\u6709\u8d4b\u503c\u3001\u88ab\u8d4b\u503c\u3001\u81ea\u589e\u7b49\u64cd\u4f5c\u3002</li> <li>\u7b26\u53f7 <code>*</code> \u6709\u4e24\u79cd\u7528\u6cd5\uff0c\u5176\u4e00\u662f <code>*()</code> \u5728\u5927\u62ec\u53f7\u4e2d\u8868\u793a\u5c06\u6240\u6709\u6587\u4ef6\u4e2d\u7b26\u5408\u62ec\u53f7\u5185\u8981\u6c42\u7684\u6bb5\u653e\u7f6e\u5728\u5f53\u524d\u4f4d\u7f6e <code>*(.data .data.*)</code>\uff0c\u5176\u4e8c\u662f\u4f5c\u4e3a\u901a\u914d\u7b26\u3002</li> <li>\u5728\u94fe\u63a5\u811a\u672c\u4e2d\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7b26\u53f7\uff0c\u4f8b\u5982\u6587\u4ef6\u91cc\u6240\u6709\u00a0<code>_s</code>\u00a0\u4e0e\u00a0<code>_e</code>\u5f00\u5934\u7684\u7b26\u53f7\u90fd\u662f\u672c\u5b9e\u9a8c\u52a9\u6559\u8001\u5e08\u81ea\u5df1\u5b9a\u4e49\u7684\u3002</li> </ul> <p>\u7f16\u8bd1\u51fa\u7684\u6587\u4ef6\u91cc\uff1a</p> <ul> <li>vmlinux \u901a\u5e38\u6307 Linux Kernel \u7f16\u8bd1\u51fa\u7684\u53ef\u6267\u884c\u6587\u4ef6 (Executable and Linkable Format / ELF)\uff0c\u7279\u70b9\u662f\u672a\u538b\u7f29\u7684\uff0c\u5e26\u8c03\u8bd5\u4fe1\u606f\u548c\u7b26\u53f7\u8868\u7684\u3002</li> <li>System.map \u662f\u5185\u6838\u7b26\u53f7\u8868\uff08Kernel Symbol Table\uff09\u6587\u4ef6\uff0c\u662f\u5b58\u50a8\u4e86\u6240\u6709\u5185\u6838\u7b26\u53f7\u53ca\u5176\u5730\u5740\u7684\u4e00\u4e2a\u5217\u8868\u3002\u201c\u7b26\u53f7\u201d\u901a\u5e38\u6307\u7684\u662f\u51fd\u6570\u540d\uff0c\u5168\u5c40\u53d8\u91cf\u540d\u7b49\u7b49\u3002\u4f7f\u7528\u00a0<code>nm vmlinux</code>\u00a0\u547d\u4ee4\u5373\u53ef\u6253\u5370 vmlinux \u7684\u7b26\u53f7\u8868\u3002</li> </ul>"},{"location":"CS/OS/lab/#risc-v","title":"RISC-V \u65f6\u949f\u4e2d\u65ad","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u5728\u542f\u52a8\u540e\u7531\u4e8b\u4ef6(event)\u9a71\u52a8\uff0c\u6211\u4eec\u5c06\u5f15\u5165\u4e00\u79cd\u4e8b\u4ef6trap\uff0ctrap\u7ed9\u4e86os\u4e0e\u8f6f\u786c\u4ef6\u4ea4\u4e92\u7684\u80fd\u529b\u3002\u5728boot\u9636\u6bb5opensbi\u5b9e\u73b0\u4e86M\u6001\u7684trap\u5904\u7406\u3002\u6211\u4eec\u5b9e\u73b0\u7684\u662fs\u6001\u7684trap\u5904\u7406\u3002</p> <p>\u5e76\u4e14\u6211\u4eec\u660e\u786e\u4e00\u4e0b Interrupt, Exception \u548c Trap \u7684\u533a\u522b (from riscv unprivileged spec)\uff1a</p> <ul> <li>Interrupt: an external asynchronous (\u5f02\u6b65\u7684) event that may cause a riscv hart to experience an unexpected transfer of control.</li> <li>Exception: an unusual condition occurring at run time associated with an instruction in the current riscv hart.</li> <li>Trap: the transfer of control to a trap handler caused by either an exception or an interrupt</li> </ul> <p>\u5b9e\u9a8c\u624b\u518c\u5219\u7ed9\u4e86\u4e0b\u8868\uff0c\u867d\u7136\u91cc\u9762\u6ca1\u6709\u8bb2\u5230 trap\uff0c\u4f46\u662f\u8fd9\u4e2a\u5bf9\u4e8e interrupt \u548c exception \u7684\u89e3\u91ca\u66f4\u6e05\u695a\u3002</p> Interrupt Exception hardware generated software generated Asynchronous external requests (generated by e.g. keyboard or printer) synchronous internal requests for services based upon abnormal events (generated by e.g. illegal instructions, illegal address, overflow, etc.) normal events abnormal events <p>\u7406\u89e3\u4e86\u4e0a\u8ff0\u4e24\u4e2a\u6982\u5ff5\u540e\u53ef\u4ee5\u628a trap \u5f53\u4f5c\u4e00\u79cd\u7edf\u79f0\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a trap = interrupt + exception\u3002\u6211\u4eec\u540e\u7eed\u5b9e\u73b0\u7684 <code>trap_handler()</code> \u65e2\u8981\u5904\u7406\u4e2d\u65ad\u4e5f\u8981\u5904\u7406\u5f02\u5e38\u3002</p> <p>\u8981\u5b9e\u73b0\u7684\u4e2d\u65ad\u7684\u6d41\u7a0b\u5982\u4e0b\uff0c\u53ef\u4ee5\u53c2\u7167\u8fd9\u4e2a\u5b8c\u6210 <code>do_timer()</code> <code>switch_to()</code> <code>schedule()</code> \u7b49\u51fd\u6570\uff1a</p> <ul> <li>\u5728\u6bcf\u6b21\u5904\u7406\u65f6\u949f\u4e2d\u65ad\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u9996\u5148\u4f1a\u5c06\u5f53\u524d\u7ebf\u7a0b\u7684\u8fd0\u884c\u5269\u4f59\u65f6\u95f4\u51cf\u5c11\u4e00\u4e2a\u5355\u4f4d\u3002\u4e4b\u540e\u6839\u636e\u8c03\u5ea6\u7b97\u6cd5\u6765\u786e\u5b9a\u662f\u7ee7\u7eed\u8fd0\u884c\u8fd8\u662f\u8c03\u5ea6\u5176\u4ed6\u7ebf\u7a0b\u6765\u6267\u884c\u3002</li> <li>\u5728\u8fdb\u7a0b\u8c03\u5ea6\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u904d\u5386\u6240\u6709\u53ef\u8fd0\u884c\u7684\u7ebf\u7a0b\uff0c\u6309\u7167\u4e00\u5b9a\u7684\u8c03\u5ea6\u7b97\u6cd5\u9009\u51fa\u4e0b\u4e00\u4e2a\u6267\u884c\u7684\u7ebf\u7a0b\u3002\u6700\u7ec8\u5c06\u9009\u62e9\u5f97\u5230\u7684\u7ebf\u7a0b\u4e0e\u5f53\u524d\u7ebf\u7a0b\u5207\u6362\u3002</li> <li>\u5728\u5207\u6362\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u4fdd\u5b58\u5f53\u524d\u7ebf\u7a0b\u7684\u6267\u884c\u4e0a\u4e0b\u6587\uff0c\u518d\u5c06\u5c06\u8981\u6267\u884c\u7ebf\u7a0b\u7684\u4e0a\u4e0b\u6587\u8f7d\u5165\u5230\u76f8\u5173\u5bc4\u5b58\u5668\u4e2d\uff0c\u81f3\u6b64\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u7ebf\u7a0b\u7684\u8c03\u5ea6\u4e0e\u5207\u6362\u3002</li> </ul>"},{"location":"CS/OS/lab/#riscv","title":"RISCV \u5bc4\u5b58\u5668","text":"<p>\u56de\u5fc6\u5185\u5b58\u7ed3\u6784\uff08\u5982\u679c\u4f60\u660e\u786e\u77e5\u9053\u5bc4\u5b58\u5668\u662f\u4ec0\u4e48\u5c31\u4e0d\u7528\u56de\u5fc6\u4e86\uff09\uff0c\u53ef\u89c1\u5bc4\u5b58\u5668\u5e76\u4e0d\u5728\u8fd0\u884c\u5185\u5b58\u91cc\uff1a</p> <pre><code>\u5c0f/\u5feb &lt;---------------&gt; \u5927/\u6162\n[\u5bc4\u5b58\u5668] - [cache] - [\u5185\u5b58] - [\u5916\u5b58]\n</code></pre> <p>riscv\u670932\u4e2a\u901a\u7528\u5bc4\u5b58\u5668 + \u5f88\u591a\u63a7\u5236\u72b6\u6001\u5bc4\u5b58\u5668 (control and status registers (CSRs))\u3002riscv \u7ed9\u6bcf\u4e2a\u5bc4\u5b58\u5668\u6709\u4e2a\u5143\u4fe1\u606f\uff0c\u8fd9\u4e2a\u5143\u4fe1\u606f\u5171\u7528 12-bit \u6765\u5b58\u50a8\u5373 csr[11:0]\uff0c\u6240\u4ee5\u4e00\u5171\u652f\u6301 4096 \u4e2a\u5bc4\u5b58\u5668\u3002\u5177\u4f53\u800c\u8a00\uff0ccsr[11:0] \u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u6bcf\u4e2a\u4f4d\u7684\u610f\u4e49\u5206\u914d\u5982\u4e0b\uff1a</p> \u4f4d\u6570 11:10 9:8 7:4 \u957f\u5ea6 2 2 4 \u4f5c\u7528 11=read-only\uff0cother=read/write\uff1f \u80fd\u8bbf\u95ee\u8be5csr\u7684\u6700\u4f4e\u7684\u6743\u9650\u6a21\u5f0f \u6211\u731c\u662f\u4fdd\u7559\u7ed9\u6bcf\u4e2acsr\u7279\u5b9a\u7684 <p>\u9996\u5148\uff0c\u901a\u7528\u5bc4\u5b58\u5668\u6709\u5982\u4e0b\u8fd9\u4e9b\uff1a</p> <p></p> <p>\u5728\u7f16\u5199\u6c47\u7f16\u4ee3\u7801\u7684\u65f6\u5019\u4e00\u822c\u4f7f\u7528\u5bc4\u5b58\u5668\u7684abi\u7684\u540d\u5b57\u800c\u4e0d\u662f\u5bc4\u5b58\u5668\u7684\u7f16\u53f7</p> <ul> <li>x0 - x31\u662f\u7528\u6765\u505a\u6574\u5f62\u8fd0\u7b97\u7684\u5bc4\u5b58\u5668</li> <li>f0 - f31\u662f\u7528\u6765\u505a\u6d6e\u70b9\u8fd0\u7b97\u7684\u5bc4\u5b58\u5668\uff08\u6709\u7684\u4e0d\u4e00\u5b9a\u6709\uff09</li> </ul> <p>\u800c\u4e0b\u9762\u8981\u5355\u72ec\u8bb2\u4e00\u4e0b csr\u3002</p> <p>sstatus (supervisor status register)</p> <p>The sstatus register is an SXLEN(\u4ee3\u886832\u621664)-bit read/write register formatted as follows. \u6211\u4eec\u7528\u7684\u662f64\u4f4d\u3002</p> <p></p> <p>\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u5bc4\u5b58\u5668\u628a\u5f88\u591a\u4e8b\u4ef6\u7684\u72b6\u6001\u90fd\u75280\u62161\u8868\u793a\uff0c\u62fc\u5230\u4e86\u540c\u4e00\u4e2a\u5bc4\u5b58\u5668\u91cc\u3002</p> \u4f4d\u6570 \u540d\u79f0 \u7f6e1\u8868\u793a \u7f6e0\u8868\u793a 1 SIE \u54cd\u5e94\u6240\u6709\u7684S\u6001trap \u7981\u7528\u6240\u6709S\u6001trap 5 SPIE \u5728trap\u53d1\u751f\u524d\u7684SIE=1 \u5728trap\u53d1\u751f\u524d\u7684SIE=0 8 SPP \u5f53\u4e2d\u65ad\u53d1\u751f\u5b8c\u7684\u65f6\u5019\uff0c\u8fd4\u56de\u5230S-mode \u5f53\u4e2d\u65ad\u53d1\u751f\u5b8c\u7684\u65f6\u5019\uff0c\u8fd4\u56de\u5230U-mode <p>\u624b\u518c\u91cc\u8fd8\u4ecb\u7ecd\u7684\u4f4d\u6709</p> <ul> <li>MXR: memory privilege.</li> <li>WARL: endianness control</li> </ul> <p>sie (supervisor interrupt enable register)</p> <p>\u5982\u679c\u5f00\u542f\u4e86sstatus[SIE]\uff0c\u5c31\u4f1a\u6839\u636esie\u4e2d\u7684\u6bd4\u7279\u4f4d\uff0c\u51b3\u5b9a\u662f\u5426\u5904\u7406interrupt</p> <p></p> <p>Bits sip.SEIP and sie.SEIE are the interrupt-pending and interrupt-enable bits for supervisor- level external interrupts. If implemented, SEIP is read-only in sip, and is set and cleared by the execution environment, typically through a platform-specific interrupt controller. Bits sip.STIP and sie.STIE are the interrupt-pending and interrupt-enable bits for supervisor- level timer interrupts. If implemented, STIP is read-only in sip, and is set and cleared by the execution environment. Bits sip.SSIP and sie.SSIE are the interrupt-pending and interrupt-enable bits for supervisor- level software interrupts. If implemented, SSIP is writable in sip and may also be set to 1 by a platform-specific interrupt controller.</p> <p>stvec (supervisor trap vector base address register)</p> <p>\u4e2d\u65ad\u5411\u91cf\u8868\u57fa\u5740. </p> <p></p> <p>WARL\u662f\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u7684\u5730\u5740</p> <p>MODE\u662f</p> Value mode \u63cf\u8ff0 0 Direct \u6a21\u5f0f \u9002\u7528\u4e8e\u7cfb\u7edf\u4e2d\u53ea\u6709\u4e00\u4e2a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f, \u5176\u6307\u5411\u4e2d\u65ad\u5904\u7406\u5165\u53e3\u51fd\u6570 \uff08 \u672c\u5b9e\u9a8c\u4e2d\u6211\u4eec\u6240\u7528\u7684\u6a21\u5f0f \uff09 1 Vectored\u6a21\u5f0f \u6307\u5411\u4e2d\u65ad\u5411\u91cf\u8868\uff0c \u9002\u7528\u4e8e\u7cfb\u7edf\u4e2d\u6709\u591a\u4e2a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f \u22652 \u4fdd\u7559 <p>sscratch (supervisor scratch register)</p> <p>Typically, sscratch is used to hold a pointer to the hart-local supervisor context while the hart is executing user mode. At the beginning of a trap handler, sscratch is swapped with a user register to provide an initial working register.</p> <p></p> <p>\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u62ffsscratch\u8bb0\u5f55s-mode\u7684stack pointer\uff0c\u5728trap\u53d1\u751f\u7684\u65f6\u5019\u4e0eu-mode stack pointer\u4ea4\u6362\uff08\u597d\u50cf\u662f\u6765\u7740\u5fd8\u4e86TODO\u4e00\u4f1a\u6838\u5b9e\uff09</p> <p>sepc (supervisor exception program counter)</p> <p>\u4f1a\u8bb0\u5f55 trap \u5904\u7406\u8fc7\u540e\u7684\u8fd4\u56de\u5730\u5740\u3002</p> <p></p> <p>scause (supervisor cause register)</p> <p></p> <p>\u4f1a\u8bb0\u5f55 trap \u53d1\u751f\u7684\u539f\u56e0\uff0c\u8fd8\u4f1a\u8bb0\u5f55\u8be5 trap \u662f\u00a0<code>Interrupt</code>\u00a0\u8fd8\u662f\u00a0<code>Exception</code>\u3002\u539f\u56e0\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a</p> <p></p> <p>stval (supervisor trap value register)</p> <p></p> <p>The stval register can optionally also be used to return the faulting instruction bits on an illegal instruction exception (sepc points to the faulting instruction in memory). If stval is written with a nonzero value when an illegal-instruction exception occurs, then stval will contain the shortest of:</p> <p>\u0088 the actual faulting instruction \u0088 the first ILEN bits of the faulting instruction \u0088 the first SXLEN bits of the faulting instruction</p> <p>The value loaded into stval on an illegal-instruction exception is right-justified and all unused upper bits are cleared to zero.</p> <p>satp (supervisor address translation and protection register)</p> <p></p> <p>\u8bb0\u5f55\u6700\u9ad8\u7ea7\u9875\u8868\u7684\u7269\u7406\u5730\u5740\u3002MODE\u4f4d=8\u65f6\uff0c\u4f7f\u7528Sv39\u6a21\u5f0f\u865a\u62df\u5730\u5740\uff08\u672c\u5b9e\u9a8c\uff09</p> <p>\u4ee5\u4e0b\u662f\u65f6\u949f\u4e2d\u65ad\u76f8\u5173\u7684\u5bc4\u5b58\u5668\uff1a</p> <p>mtime</p> <p>\u8ba1\u65f6\u5668\uff0c\u4ee5\u6052\u5b9a\u9891\u7387\u81ea\u589e\uff08\u6211\u8bb0\u5f97\u5728\u672c\u5b9e\u9a8c\u91cc\u662f\u591a\u5c11\u5206\u4e4b\u4e00\u79d2\uff09</p> <p>mtimecmp\uff08machine timer register\uff09</p> <p>\u4e0b\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad\u7684\u4e2d\u65ad\u70b9</p> <p>mcounteren\uff08counter enable register\uff09</p> <p>\uff08\u672c\u5b9e\u9a8c\u4e2d\u4e0d\u7528\u7ba1\uff0c\u4f46\u662f\u8bf4\u660e\u4e00\u4e0b\uff1a\uff09mtime\u672c\u6765\u662fm\u6001\u7684\u5bc4\u5b58\u5668\uff0c\u5728s\u6001\u4e0d\u80fd\u8bfb\u5199\uff0c\u4f46\u662fopensbi\u5df2\u7ecf\u8bbe\u7f6e\u8fc7\u53ef\u4ee5\u8bfb\u5199m\u6001</p>"},{"location":"CS/OS/lab/#_6","title":"\u5bc4\u5b58\u5668\u64cd\u4f5c","text":"<p>\u64cd\u4f5ccsr\u5bc4\u5b58\u5668\u7684riscv\u6307\u4ee4\u96c6 TODO\u5f85\u6574\u7406</p> func scr rs1 rd <ul> <li>csrrw (CSR read and write) ,\u8fd9\u662f\u8bfb\u5199\u64cd\u4f5c\uff0ccsr\u4e2d\u7684\u503c\u5199\u5165rd\uff0crs1\u7684\u503c\u5199\u5165csr\u3002</li> <li>csrrwi\u662fcsrrw\u7684\u7acb\u5373\u6570\u6269\u5c55\uff0crs1\u5bc4\u5b58\u5668\u4fdd\u5b58\u503c\u53d8\u4e3a\u4e00\u4e2a\u7acb\u5373\u6570\uff0c\u5bf9csr\u7684\u64cd\u4f5c\u662f\u4e00\u81f4\u7684\u3002</li> <li>csrrs(CSR read and set), \u8fd9\u662f\u8bfb\u5e76\u7f6e\u4f4d\u64cd\u4f5c\uff0ccsr\u4e2d\u7684\u503c\u5199\u5165rd\uff0c rs1\u7684\u503c\u6216\u4e0a(or)csr\u4e2d\u7684\u503c\u518d\u5199\u5165csr\u3002</li> <li>csrrsi\u662fcsrrs\u7684\u7acb\u5373\u6570\u6269\u5c55\uff0crs1\u5bc4\u5b58\u5668\u4fdd\u5b58\u503c\u53d8\u4e3a\u4e00\u4e2a\u7acb\u5373\u6570\uff0c\u5bf9csr\u7684\u64cd\u4f5c\u662f\u4e00\u81f4\u7684\u3002</li> <li>csrrc(CSR read and clear)\uff0c\u8fd9\u662f\u8bfb\u5e76\u6e05\u9664\u64cd\u4f5c\uff0ccsr\u4e2d\u7684\u503c\u8bfb\u5165rd\uff0c\u6839\u636ers1\u7684\u503c\u5bf9csr\u4e2d\u7684\u503c\u6309\u4f4d\u6e050 \u518d\u5199\u5165csr\u4e2d\u3002</li> <li>csrrci\u662fcsrrc\u7684\u7acb\u5373\u6570\u6269\u5c55\uff0crs1\u5bc4\u5b58\u5668\u4fdd\u5b58\u503c\u53d8\u4e3a\u4e00\u4e2a\u7acb\u5373\u6570\uff0c\u5bf9csr\u7684\u64cd\u4f5c\u662f\u4e00\u81f4\u7684\u3002</li> </ul> <p>\u5316\u7528\u4e00\u4e2a\u6682\u65f6\u4e0d\u60f3\u53bb\u627e\u6765\u6e90\u7684 CSDN \u5e16\u5b50\u7684\u603b\u7ed3\uff1a</p> <ul> <li>\u60f3\u5bf9csr\u8fde\u8bfb\u5e26\u5199\uff0c\u53ef\u9009\u7528\u57fa\u7840\u76846\u6761csr\u6307\u4ee4\u76f4\u63a5\u641e\u5b9a.</li> <li>\u4ec5\u4ec5\u662f\u8bfb\u7684\u8bdd\uff0c\u54ea\u6761\u57fa\u7840\u6307\u4ee4\u90fd\u53ef\u4ee5\uff0c\u4e00\u822c\u4f1a\u7528\u4f2a\u6307\u4ee4.</li> <li>\u4ee5 i \u7ed3\u5c3e\u7684\uff0c\u4e0d\u7ba1\u662f\u57fa\u7840\u6307\u4ee4\u8fd8\u662f\u4f2a\u6307\u4ee4\uff0c\u90fd\u662f\u7acb\u5373\u6570\u4f5c\u4e3a\u53c2\u6570\u7684\uff0c\u5728\u6307\u4ee4\u4e2d\u64cd\u4f5c\u8fd9\u4e2a\u7acb\u5373\u6570\u66ff\u6362\u4e86 rs1.</li> <li>csr\u57fa\u7840\u7684\u64cd\u4f5c\uff0c\u5c31\u7b80\u5355\u76843\u79cd\u533a\u522b\uff0cw (\u76f4\u63a5\u5199 )\uff0c s(\u8bbe\u7f6e) \uff0c c(\u6e05\u9664)\uff0c\u4e0d\u8ba1i\u76844\u5b57\u6bcd\u6307\u4ee4\u90fd\u662f\u4f2a\u6307\u4ee4.</li> <li>RISC-V\u4e2d\u6587\u624b\u518c\u4e0acsr\u6307\u4ee4\u6709\u4e9b\u540d\u5b57\u9519\u8bef\uff0c\u4e3b\u8981\u770b\u5185\u5bb9\u63cf\u8ff0.</li> <li>\u4f2a\u6307\u4ee4\u4ec5\u4ec5\u662f\u65b9\u4fbf\u7a0b\u5e8f\u5458\u8bfb\u5199\u4ee3\u7801\uff0c\u6700\u7ec8\u7f16\u8bd1\u5668\u8fd8\u662f\u90fd\u7ed9\u8f6c\u6210\u4e86\u57fa\u7840\u6307\u4ee4.</li> </ul>"},{"location":"CS/OS/lab/#lab2","title":"lab2","text":""},{"location":"CS/OS/lab/#_7","title":"\u7ebf\u7a0b","text":"<p>\u672c\u5b9e\u9a8c\u5efa\u7acb\u7684\u7ebf\u7a0b\u90fd\u662f\u5185\u6838\u6001\u7ebf\u7a0b\u3002\u4e00\u4e2a\u4f9d\u636e\u5c31\u662f\u67d0\u4e2a\u7ebf\u7a0b trap \u540e\u4e0d\u4f1a\u963b\u585e\u5176\u5b83\u7ebf\u7a0b\u3002</p> <p>\u7ebf\u7a0b\u7684 task_struct \u53ef\u4ee5\u7406\u89e3\u4e3a\u7406\u8bba\u8bfe\u4e0a\u8bb2\u7684 PCB (\u662f\u4e0d\u662f\u8be5\u53eb TCB\uff1f)\u3002\u91cc\u9762\u7684\u4e1c\u897f\u4f1a\u968f\u7740\u9010\u4e2a lab \u6dfb\u52a0\u8fdb\u53bb\uff0c\u6700\u7ec8\u4f1a\u6709\u4ee5\u4e0b\u4e1c\u897f\uff1a</p> <ul> <li>\u7ebf\u7a0bid (pid)\uff1a\u7528\u4e8e\u552f\u4e00\u786e\u8ba4\u4e00\u4e2a\u7ebf\u7a0b</li> <li>\u8fd0\u884c\u6808 (user_stack, kernel_stack)\uff1a\u6bcf\u4e2a\u7ebf\u7a0b\u5fc5\u987b\u6709\u4e00\u4e2a\u72ec\u7acb\u7684\u7528\u6237\u6808</li> <li>\u6267\u884c\u4e0a\u4e0b\u6587 (pt_regs *)\uff1a\u7ebf\u7a0b\u4e0d\u5728\u6267\u884c\u65f6\uff0c\u9700\u8981\u4fdd\u5b58\u5176\u4e0a\u4e0b\u6587\uff08\u72b6\u6001\u5bc4\u5b58\u5668\u7684\u503c\uff09\uff0c\u8fd9\u6837\u4e4b\u540e\u624d\u80fd\u6062\u590d</li> <li>\u8fd0\u884c\u65f6\u95f4\u7247 (counter)\uff1a\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u5206\u914d\u7684\u8fd0\u884c\u65f6\u95f4</li> <li>\u4f18\u5148\u7ea7 (priority)\uff1a\u5728\u6267\u884c\u76f8\u5173\u8c03\u5ea6\u65f6\uff0c\u914d\u5408\u8c03\u5ea6\u7b97\u6cd5\u9009\u51fa\u4e0b\u4e00\u4e2a\u6267\u884c\u7684\u8fdb\u7a0b</li> <li>demand paging \u4e2d\u7528\u5230\u7684\u6240\u6709 vma \u4fe1\u606f\uff0c\u548c\u4e00\u4e2a\u9700\u8981\u7684 vma \u4e2a\u6570\u8ba1\u6570\u5668</li> <li>TODO\uff1a\u8fd8\u6709\u522b\u7684\u5417\uff0c\u540e\u9762\u53ef\u4ee5\u518d\u786e\u8ba4\u4e00\u4e0b</li> </ul> <p>Warning</p> <p>TODO \u4ee5\u4e0b\u5185\u5bb9\u9700\u8981\u518d\u68c0\u67e5\uff0c\u5ffd\u7136\u5206\u4e0d\u6e05\u6bcf\u4e2a\u7ebf\u7a0b\u603b\u5171\u662f\u5f00\u4e86\u4e00\u4e2a\u8fd8\u662f\u4e24\u4e2a\u5185\u5b58\u7a7a\u95f4</p> <p>\u7ebf\u7a0b\u5185\u5b58\u7a7a\u95f4\u7ed3\u6784\u5982\u4e0b\u3002</p> \u5185\u6838\u865a\u62df\u5b58\u50a8\u5668 \u7528\u6237\u4e0d\u53ef\u89c1\u7684\u5b58\u50a8\u5668 0xc000 0000 \u7528\u6237\u6808 \u2190 sp 0x4000 0000 \u5171\u4eab\u5e93\u7684\u5b58\u50a8\u5668\u6620\u5c04\u533a\u57df \u8fd0\u884c\u65f6\u5806\uff08\u7531malloc\u521b\u5efa\uff09 \u2190 brk \u8bfb\u5199\u6bb5 .data .bss \u4ece\u53ef\u6267\u884c\u6587\u4ef6\u52a0\u8f7d \u53ea\u8bfb\u6bb5 .init .text .rodata \u4ece\u53ef\u6267\u884c\u6587\u4ef6\u52a0\u8f7d 0x0804 8000 \u672a\u7528\u7684 \u4ece\u53ef\u6267\u884c\u6587\u4ef6\u52a0\u8f7d"},{"location":"CS/OS/lab/#lab3","title":"lab3","text":"<p>\u5230\u672c\u5b9e\u9a8c\u7ed3\u675f\u65f6\uff0c\u6211\u4eec\u7684\u7a0b\u5e8f\u5c06\u8981\u5b9e\u73b0\u8fd9\u6837\u4e00\u4e2a\u4ece\u542f\u52a8\u5230\u5f00\u542f\u6620\u5c04\u7684\u8fc7\u7a0b\uff08\u4e5f\u5bf9\u5e94 <code>head.S</code> \u5f00\u5934\u7684\u4e00\u5806\u51fd\u6570\u8c03\u7528\u6d41\u7a0b\uff09\uff1a</p> <ul> <li>opensbi\u521d\u59cb\u5316\u90a3\u4e00\u5806\u4e1c\u897f bootloader</li> <li>call setup_vm: \u7269\u7406\u5730\u5740\u7ffb\u8bd1\u6210\u865a\u62df\u5730\u5740\uff08\u7b49\u503c+\u504f\u79fb\uff09\u3002\u6211\u7684\u7406\u89e3\u662f\u8fd9\u4e00\u6b65\u662f\u4e3a\u4e86\u65b9\u4fbf\u8c03\u8bd5\uff0c\u56e0\u4e3a\u6211\u4eec\u4e00\u5f00\u59cb\u540c\u6b65\u7684vmlinux.lds\u5bfc\u81f4\u7b26\u53f7\u8868\u91cc\u6240\u6709\u7b26\u53f7\u90fd\u662f\u7528\u865a\u62df\u5730\u5740\u8868\u793a\u7684\uff0c\u5982\u679c\u8fd9\u91cc\u6ca1\u6620\u5c04\u540e\u8fb9\u8c03\u8bd5\u5c31\u6ca1\u6cd5\u8fdb\u884c\u3002\u7b49\u503c\u6620\u5c04\u662f\u56e0\u4e3a\u9700\u8981\u5728 setup_cm_final() \u91cc\u5efa\u7acb\u9875\u8868\u9700\u8981\u7528\u5230\u5565\u7684\u7269\u7406\u5730\u5740\uff0c\u4e00\u65e6\u7528\u5b8c\uff0c\u7b49\u503c\u6620\u5c04\u5c31\u53ef\u4ee5\u5173\u6389\u4e86\u3002</li> <li>call relocate: \u5f00\u542fsatp (supervisor address translation and protection register)</li> <li>call mm_init: empty physical memory</li> <li>call setup_vm_final: \u5efa\u7acb\u9875\u8868 \u5efa\u5b8c\u540e\u5c31\u53ef\u4ee5\u5173\u6389\u7b49\u503c\u6620\u5c04\u4e86</li> <li>call task_init: \u505a\u7ebf\u7a0b</li> </ul>"},{"location":"CS/OS/lab/#virtual-memory","title":"virtual memory","text":"<p>lab2\u4e2d\u6211\u4eec\u505a\u7684\u90fd\u662f\u5185\u6838\u7ebf\u7a0b\uff0c\u53ef\u4ee5\u5171\u4eab\u8fd0\u884c\u7a7a\u95f4\uff0c\u5373\u8fd0\u884c\u4e0d\u540c\u7ebf\u7a0b\u5bf9\u5185\u8bad\u7684\u4fee\u6539\u662f\u76f8\u4e92\u53ef\u89c1\u7684\u3002\u5982\u679c\u9700\u8981\u7ebf\u7a0b\u76f8\u4e92\u9694\u79bb\u5c31\u9700\u8981\u5f15\u5165\u865a\u62df\u5185\u5b58\uff0c\u65b9\u4fbf\u591a\u7ebf\u7a0b\u9ad8\u6548\u5171\u4eab\u5185\u5b58\u3002\u5982\u679c\u5f88\u865a\u5730\u53bb\u8bb2\u865a\u62df\u5185\u5b58\u7684\u4f5c\u7528\uff1a</p> <ul> <li>\u865a\u62df\u5185\u5b58\u53ef\u4ee5\u4e3a\u6b63\u5728\u8fd0\u884c\u7684\u7ebf\u7a0b\u63d0\u4f9b\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5236\u9020\u4e00\u79cd\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u5185\u5b58\u90fd\u662f\u72ec\u7acb\u7684\u5047\u8c61\uff08\u548b\u505a\u5230\u7684\uff09\u3002</li> <li>\u865a\u62df\u5185\u5b58\u5230\u7269\u7406\u5185\u5b58\u7684\u6620\u5c04\u4e5f\u5305\u542b\u4e86\u5bf9\u5185\u5b58\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u65b9\u4fbf\u5185\u6838\u5b8c\u6210\u6743\u9650\u68c0\u67e5</li> </ul> <p>\u6211\u4eec\u8981\u5b9e\u73b0\u7684\u865a\u62df\u5185\u5b58\u5e03\u5c40\uff0c\u9996\u5148\u7528\u4e00\u4e2a\u622a\u56fe\u6765\u7406\u89e3\uff1a</p> <pre><code>\u4f4e\u5730\u5740&lt;-                                       -&gt;\u9ad8\u5730\u5740\n\nstart_address             end_address\n    0x0                  0x3fffffffff\n     \u2502                        \u2502\n\u250c\u2500\u2500\u2500\u2500\u2518                  \u250c\u2500\u2500\u2500\u2500\u2500\u2518\n\u2193        256G           \u2193                                \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502      User Space       \u2502    ...   \u2502  Kernel Space  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                   \u2191      256G      \u2191\n                      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                \u2502 \n                      \u2502                             \u2502\n              0xffffffc000000000           0xffffffffffffffff\n                start_address                  end_address\n</code></pre> <p>\u7136\u540e\u5fc5\u987b\u8981\u641e\u660e\u767d\uff1a\u865a\u62df\u5185\u5b58\u4ece\u6765\u6ca1\u6709\u88ab\u771f\u6b63\u5f00\u8f9f\u8fc7\uff0c\u88ab\u771f\u6b63\u5f00\u8f9f\u7684\u53ea\u6709\u7269\u7406\u5185\u5b58\u3002\u6211\u4eec\u5728\u7a0b\u5e8f\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\u5f00\u7684\u53d8\u91cf\u548c alloc \u7684 page\uff0c\u90fd\u662f\u5f00\u5728 kernel \u7684\u6808\u6216\u8005\u5806\u4e0a\uff08.data\u548c.bss\u6bb5\uff09\uff0c\u56e0\u4e3a\u67e5\u5730\u5740\u65f6\u53ef\u4ee5\u67e5\u5230\u5b83\u4eec\u7684\u7269\u7406\u5730\u5740\u3002\u800c\u5404\u79cd csr \u5728 cpu \u91cc\uff0c\u4e0d\u4f1a\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u3002\u800c\u672c\u6b21\u5b9e\u9a8c\u6240\u8bb2\u7684\u201c\u5f00\u542f\u865a\u62df\u5185\u5b58\u201d\uff0c\u672c\u8d28\u4e0a\u53ea\u662f\u8bbe\u8ba1\u4e00\u4e2a\u865a\u62df\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u8f6c\u6362\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u653e\u5728\u9875\u8868\u91cc\u3002</p>"},{"location":"CS/OS/lab/#sv39","title":"Sv39 \u7684\u9875\u8868\u9879","text":"<p>\u7406\u89e3\u4e00\u4e0b\u9875\u8868\u9879\uff08pte\uff09\u3002\u5b83\u7684\u4f4e\u4f4d\uff1a</p> <ul> <li>V: valid</li> <li>R: readable</li> <li>W: writable</li> <li>X: executable</li> <li>U: user</li> <li>G: global \u6ca1\u7528\u8fc7 \u9ed8\u8ba4\u7f6e0</li> <li>A: accessed \u6ca1\u7528\u8fc7 \u9ed8\u8ba4\u7f6e0</li> <li>D: dirty \u6ca1\u7528\u8fc7 \u9ed8\u8ba4\u7f6e0</li> <li>RSW: reserved \u9ed8\u8ba4\u7f6e0</li> </ul>"},{"location":"CS/OS/lab/#_8","title":"\u5730\u5740\u7ffb\u8bd1\u8fc7\u7a0b","text":"<p><code>create_mapping()</code> \u51fd\u6570\u904d\u5386\u6574\u4e2a\u6620\u5c04\u5927\u5c0f\uff0c\u4f9d\u6b21\u6309\u4e8c\u7ea7\u9875\u8868\uff08\u5373\u6839\u9875\u8868\u7684\u4e0b\u4e00\u7ea7\uff09\u2192\u4e09\u7ea7\u9875\u8868\u2192\u7269\u7406\u9875\uff0c\u68c0\u67e5\u9875\u8868\u9879\u7684V bit\u770b\u9875\u8868\u9879\u662f\u5426\u5b58\u5728\uff0c\u4e0d\u5b58\u5728\u5219\u7528kalloc() \u5206\u914d\u4e00\u9875\u4f5c\u4e3a\u9875\u8868\u76ee\u5f55\uff1b\u5b58\u5728\u5219\u5728\u9875\u8868\u9879\u4e2d\u8bb0\u5f55\u9875\u8868\u7684\u7269\u7406\u5730\u5740\u3002</p> <p>pte : [ PPN2: 53-28 ][ PPN1: 27-19 ][ PPN0: 18-10 ][ perm: 9-0 ]</p> <p>vm_addr: [ VPN2: 38-30 ][ VPN1: 29-21 ][ VPN0:20-12 ][ offset: 11-0 ]</p> <p>\u56e0\u4e3a\u67e5\u8be2\u4e09\u7ea7\u9875\u8868\u7684\u6d41\u7a0b\u4e3a\uff1a</p> <ul> <li>\u53d6VPN2\u4e3a\u9876\u7ea7\u9875\u8868\u504f\u79fb\u5730\u5740\uff0c\u6839\u636e\u9876\u5c42\u9875\u8868\u57fa\u5730\u5740\u5f97\u5230\u6b21\u7ea7\u9875\u8868\u7684\u8d77\u59cb\u5730\u5740 \u2192</li> <li>\u53d6VPN1\u4e3a\u6b21\u7ea7\u9875\u8868\u504f\u79fb\u5730\u5740\uff0c\u6839\u636e\u6b21\u7ea7\u9875\u8868\u9875\u53f7*\u6b21\u7ea7\u9875\u8868\u5927\u5c0f\u5f97\u5230\u8d77\u59cb\u5730\u5740 \u2192</li> <li>\u53d6VPN0\u4e3a\u865a\u62df\u5185\u5b58\u504f\u79fb\u5730\u5740\uff0c\u6839\u636e\u865a\u62df\u5185\u5b58\u9875\u53f7*\u7269\u7406\u9875\u5927\u5c0f\u5f97\u5230\u7269\u7406\u5185\u5b58\u5730\u5740</li> </ul> <p>\u6240\u4ee5\u53cd\u63a8\u8bbe\u7f6e\u7684\u6d41\u7a0b\u4e3a\uff1a</p> <ul> <li> <p>\u9876\u5c42\u9875\u8868</p> <ul> <li>\u53d6now_pte\u4e3a\u9876\u7ea7\u9875\u8868\u57fa\u5730\u5740\uff1a <code>now_tbl = pgtbl;</code></li> <li>\u4eceva\u4e2d\u53d6\u9876\u7ea7\u9875\u8868\u504f\u79fb\uff1a <code>now_vpn = VPN2(va);</code></li> <li>\u5f97\u5230\u5f53\u524dva\u5728\u9876\u7ea7\u9875\u8868\u4e2d\u7684\u5177\u4f53\u4f4d\u7f6e\uff1a <code>now_pte = *(now_tbl + now_vpn);</code></li> <li>\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u4e0d\u5b58\u5728\u9875\uff0c\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u7269\u7406\u9875\uff0c\u5e76\u8ba1\u7b97\u65b0\u9875\u7684\u9875\u8868\u9879\uff0c\u66f4\u65b0\u5230\u9876\u5c42\u9875\u8868\u91cc</li> </ul> </li> <li> <p>\u6b21\u7ea7\u9875\u8868\u76f8\u540c</p> </li> <li>\u96f6\u7ea7\u9875\u8868\u5373vm\uff0c\u4e0d\u518d\u9700\u8981\u68c0\u67e5V\u4f4d\uff0c\u5176\u4f59\u4e5f\u76f8\u540c</li> <li>\u6700\u540e\u6bcf\u6b21\u5faa\u73af\uff0c\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u81ea\u589e PG_SIZE\uff084KB\uff09\uff0c\u6307\u5411\u4e0b\u4e00\u4e2a\u865a\u62df\u9875/\u7269\u7406\u9875\u3002</li> </ul>"},{"location":"CS/OS/lab/#heads-todo-va2pa_offset","title":"\u4e3a\u4ec0\u4e48\u5728 head.S \u91cc\u4e00\u5f00\u59cb\u8981\u7ed9\u9875\u8868\u9879\u5730\u5740 (TODO\u574f\u4e86\u4e0d\u8bb0\u5f97\u662f\u4e0d\u662f\u5b83\u4e86) \u51cf\u53bb\u4e00\u4e2a VA2PA_offset","text":"<p>\u5728 2023 \u5e74\u7248\u7684\u5b9e\u9a8c\u4e2d\uff0c<code>vmlinux.lds</code> \u4e2d\u8bbe\u7f6e\u4e86\u5c06\u7f16\u8bd1\u51fa\u7684\u7b26\u53f7\u8868\u90fd\u7528\u865a\u62df\u5730\u5740\u6765\u8868\u793a\uff0c\u65b9\u4fbf\u8c03\u8bd5\u3002\u4e5f\u5373\u7a0b\u5e8f\u8fd0\u884c\u5230\u6b64\u5904\u8bfb\u5230\u7684\u9875\u8868\u9879\u5730\u5740\u662f\u865a\u62df\u5730\u5740\u3002\u663e\u7136\uff0c\u5728 <code>setup_vm()</code> \u4e4b\u524d\uff0c\u865a\u62df\u5185\u5b58\u8fd8\u6ca1\u6709\u88ab\u5f00\u542f\uff0c\u6240\u4ee5\u8981\u51cf\u6389\u4e00\u4e2a\u504f\u79fb\u91cf\u4f7f\u5176\u80fd\u8bfb\u5230\u9875\u8868\u9879\u7684\u7269\u7406\u5730\u5740\u3002\u5728 <code>relocate:</code> \u5904\u7406\u504f\u79fb\u4e4b\u540e\u5c31\u4e0d\u7528\u7ba1\u4e86\u3002</p>"},{"location":"CS/OS/lab/#lab4","title":"lab4","text":""},{"location":"CS/OS/lab/#_9","title":"\u66f4\u65b0\u540e\u7684\u865a\u62df\u5185\u5b58\u5e03\u5c40","text":"<p>\u6211\u4eec\u56de\u5fc6 lab3 \u91cc\u865a\u62df\u5730\u5740\u53ea\u7528\u4e86\u9ad8\u4f4d\uff0c\u4f4e\u4f4d\u6ca1\u6709\u7528\uff0c\u5728\u672c\u5b9e\u9a8c\u6211\u4eec\u8981\u5c06\u4f4e\u4f4d <code>0x0-0x4000000</code> \u5206\u7ed9\u7528\u6237\u8fdb\u7a0b\u3002\u800c\u7528\u6237\u8fdb\u7a0b\u7684\u4ee3\u7801\u5b9e\u9645\u5728\u7269\u7406\u5730\u5740\u4e0a\u5206\u914d\u51fa\u6765\u7684\u67d0\u4e2a\u5730\u65b9\u3002\u603b\u4e4b\uff0c\u8981\u5b9e\u73b0\u4ee5\u4e0b\u7684\u5185\u5b58\u5e03\u5c40\uff1a</p> <pre><code>               PHY_START   new allocated memory            allocated space end                              PHY_END\n                   \u2502         \u2502                                \u2502                                                 \u2502\n                   \u25bc         \u25bc                                \u25bc                                                 \u25bc\n       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n PA    \u2502           \u2502         \u2502 uapp (copied from _sramdisk)   \u2502                                                 \u2502\n       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                             \u25b2                                \u25b2\n       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                \u2502\n       \u2502            (map)                                     \u2502\n       \u2502                        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n       \u2502                        \u2502\n       \u2502                        \u2502\n       \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n VA    \u2502           UAPP         \u2502                                                                   \u2502u mode stack\u2502\n       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n       \u25b2                                                                                                         \u25b2\n       \u2502                                                                                                         \u2502\n\n   USER_START                                                                                                USER_END\n</code></pre>"},{"location":"CS/OS/lab/#riscv_1","title":"riscv\u5904\u7406\u5668\u652f\u6301\u7684\u6a21\u5f0f","text":"<ul> <li>\u7528\u6237\u6a21\u5f0f\uff08U-mode\uff09\uff1a\u6267\u884c\u4ee3\u7801\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u786c\u4ef6\uff0c\u53ea\u80fd\u901a\u8fc7os\u63d0\u4f9b\u7684\u63a5\u53e3</li> <li>\u5185\u6838\u6a21\u5f0f\uff08S-mode\uff09\uff1a\u968f\u610f\u5e72\u4ec0\u4e48\u90fd\u884c</li> </ul> <p>lab3\u521b\u5efa\u7684\u90fd\u662f\u5185\u6838\u7ebf\u7a0b \u516c\u7528\u4e86\u5730\u5740\u7a7a\u95f4\uff08\u9875\u8868swapper_pg_dir\uff09\u3002\u8981\u5f15\u5165\u7528\u6237\u6001\u8fdb\u7a0b\u9700\u8981\u505a\uff1a</p> <ul> <li>\u5185\u6838\u8fdb\u7a0b\u521b\u5efa\uff1a\u6bcf\u4e2a\u7528\u6237\u6001\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0c\u521b\u5efa\u4e00\u4e2a\u5185\u6838\u6001\u8fdb\u7a0b<ul> <li>\u8fd9\u6837\u4fdd\u8bc1\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u662f\u79c1\u6709\u7684\uff0c\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u65e0\u6cd5\u66f4\u6539\u5c5e\u4e8e\u53e6\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\u3002\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u662f\u72ec\u7acb\u8fd0\u884c\u7684\uff0c\u5982\u679c\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5d29\u6e83\uff0c\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u548c\u64cd\u4f5c\u7cfb\u7edf\u5c06\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\u3002</li> </ul> </li> <li>\u6743\u9650\u8bbe\u7f6e\uff1a\u4f7f\u7528\u6237\u6001\u7a0b\u5e8f\u4e0d\u80fd\u8bbf\u95eekernel\u6bb5\u3002</li> <li>\u7cfb\u7edf\u8c03\u7528\u8bbe\u7f6e\uff1a\u4f7f\u7528\u6237\u6001\u7a0b\u5e8f\u60f3\u8bbf\u95ee\u5173\u952e\u8d44\u6e90\u65f6\uff0c\u4f7f\u7528\u7cfb\u7edf\u8c03\u7528\u4e0eos\u4e92\u52a8\u3002</li> </ul> <p>\u5177\u4f53\u5728\u6211\u4eec\u7684\u5b9e\u9a8c\u64cd\u4f5c\u4e2d\uff0c\u5b9e\u73b0\u7528\u6237\u6001\u548c\u5185\u6838\u6001\u5207\u6362\u7684\u65b9\u6cd5\u662f\uff1asstatus[SUM] \u548c PTE[U]</p> <ul> <li> <p>\u5bc4\u5b58\u5668 sstatus[SUM] </p> <ul> <li>\u672c\u6765=0 \u2192 s-mode \u6ca1\u6cd5\u6267\u884c\u7528\u6237\u9875\u91cc\u7684\u7a0b\u5e8f</li> <li>\u8981\u628a\u5b83\u6253\u5f00\uff08=1\uff09\u2192 \u4f7fs-mode\u53ef\u4ee5\u6267\u884c\u7528\u6237\u9875\u91cc\u7684\u7a0b\u5e8f</li> </ul> </li> <li> <p>\u9875\u8868\u9879 PTE[U] </p> <ul> <li>= 0 \u5185\u6838\u9875</li> <li>= 1 \u7528\u6237\u9875</li> </ul> </li> </ul> <p>Warning</p> <p>\u60f3\u5199\u4e00\u4e0b\u5728\u6c47\u7f16\u4ee3\u7801\u91cc\u7684\u64cd\u4f5c\uff0c\u5fd8\u5e72\u51c0\u4e86\uff0c\u6574\u4f53\u601d\u8def\u662f\u8fd9\u6837\u7684\uff0c\u4f46\u4e00\u4e9b\u7ec6\u8282\u5f85\u6838\u5b9e</p> <p>\u5e76\u4e14\u5728\u6c47\u7f16\u4ee3\u7801\u91cc\u9700\u8981\u5b9e\u73b0\u4e00\u7cfb\u5217 csr \u8bfb\u5199\u64cd\u4f5c\uff1a</p> <ul> <li><code>__switch_to</code>: \u9700\u8981\u52a0\u5165\u4fdd\u5b58/\u6062\u590d\u00a0<code>sepc</code> <code>sstatus</code> <code>sscratch</code>\u00a0\u4ee5\u53ca\u5207\u6362\u9875\u8868\u7684\u903b\u8f91\u3002\u5728\u5207\u6362\u4e86\u9875\u8868\u4e4b\u540e\uff0c\u9700\u8981\u901a\u8fc7\u00a0<code>fence.i</code>\u00a0\u548c\u00a0<code>vma.fence</code>\u00a0\u6765\u5237\u65b0 TLB \u548c ICache\u3002</li> <li><code>_traps</code> \u548c <code>trap_handler()</code>: \u56e0\u4e3a\u6211\u4eec\u7684\u7ebf\u7a0b\u662f\u5728trap\u91cc\u5207\u6362\u7684\uff0c\u8fd8\u8981\u6539trap\u7684\u903b\u8f91\u3002\u7ebf\u7a0b\u5728u-mode\u91cc\u8fd0\u884c\uff0c\u5230trap\u8981\u5207\u6210s-mode\uff0c\u4e2d\u65ad\u5b8c\u518d\u5207\u56de\u6765\u3002\u4e14\u5982\u679c\u662f\u5185\u6838\u7ebf\u7a0b\uff08\u6ca1\u6709u-mode stack\uff09\u89e6\u53d1\u4e86\u5f02\u5e38\u5c31\u4e0d\u9700\u8981\u8fdb\u884c\u5207\u6362\uff0c\u6240\u4ee5\u5185\u6838\u7ebf\u7a0b\u7684sp\u6c38\u8fdc\u6307\u5411s-mode stack\uff0csscratch\uff08sp\uff1f\uff09\u4e3a0\u3002TODO\uff1a\u6709\u4e00\u4e2a\u975e\u5e38\u4f18\u96c5\u7684\u76f4\u63a5\u5b9e\u73b0\u4e24\u4e2a csr \u4ea4\u6362\u7684\u547d\u4ee4\u3002\u627e\u4e0d\u5230\u4e86\u3002\u4f1a\u8865\u7684\u3002</li> <li><code>__dummy</code>: \u6211\u4eec\u56de\u5fc6\u4e4b\u524d lab2 \u5b9e\u73b0\u7684\u662f\uff0c\u76f4\u63a5\u5c06 <code>__dummy</code> \u51fd\u6570\u7684\u5199\u5728\u7ebf\u7a0b\u7684 sepc\uff08\u4e2d\u65ad\u8fd4\u56de\u5730\u5740\uff09\u91cc\uff0c\u53c8\u5728 <code>__dummy</code> \u91cc\u5199\u8fd4\u56de\u5730\u5740\u662f <code>dummy()</code> \u51fd\u6570\u3002\u6240\u4ee5\u5982\u679c\u6211\u4eec\u8fd9\u91cc\u60f3\u8ba9\u8fdb\u7a0b\u5207\u6362\u5230\u7528\u6237\u8fdb\u7a0b\u540e\u8fdb\u5165\u7528\u6237\u7a0b\u5e8f\uff0c\u4fee\u6539 <code>__dummy</code> \u8fd0\u884c\u5b8c\u6240\u8fd4\u56de\u7684\u5730\u5740\u4e3a user app \u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u5730\u5740\u5c31\u53ef\u4ee5\u4e86\u3002</li> </ul>"},{"location":"CS/OS/lab/#buddy-system","title":"buddy system","text":"<p>\u4e00\u79cd\u7269\u7406\u5185\u5b58\u7ba1\u7406\u7b97\u6cd5\uff0c\u7a7a\u95f2\u7a7a\u95f4\u9996\u5148\u88ab\u770b\u6210 2^N \u4e2a\u7269\u7406\u9875\u7684\u5927\u7a7a\u95f4\uff0c\u5f53\u4e00\u4e2a\u5927\u5c0f\u4e3a m \u7684\u9875\u8bf7\u6c42\u5185\u5b58\u5206\u914d\u65f6\uff0c\u4e0d\u505c\u628a\u7a7a\u95f4 /2 \u5212\u5206\uff0c\u6700\u540e\u627e\u5230\u6700\u63a5\u8fd1m\u76842\u7684\u6b21\u65b9\u7684\u4e00\u4e2a\u7a7a\u95f4\u5927\u5c0f\u5206\u7ed9 m\u3002\u5f53\u5757\u91ca\u653e\u65f6\uff0c\u5206\u914d\u5668\u5c31\u4f1a\u627e\u5230\u5176\u5b83\u7a7a\u95f2\u7684\u4f19\u4f34\u5757\u53bb\u5408\u5e76\u3002\u5b83\u7684\u5b9e\u73b0\u5728\u8fd9\u4e2a\u6587\u7ae0\u91cc\u8bb2\u5f97\u66f4\u597d Lab 6\uff1aRISC-V \u52a8\u6001\u5185\u5b58\u5206\u914d\u4e0e\u7f3a\u9875\u5f02\u5e38\u5904\u7406 - \u77e5\u4e4e (zhihu.com)\u3002</p>"},{"location":"CS/OS/lab/#elf","title":"elf \u6587\u4ef6","text":"<p>\u4e00\u4e2a elf \u6587\u4ef6\u50cf\u4e00\u4e2a\u5c01\u88c5\u590d\u6742\u7248\u7684\u4e8c\u8fdb\u5236\u7528\u6237\u7a0b\u5e8f\u3002\u7528\u62bd\u8c61\u7684\u753b\u56fe\u7ed9\u5b83\u7684\u7ed3\u6784\u505a\u4e00\u4e2a\u6bd4\u55bb\uff08\u5bf9\u4e0d\u8d77\u592a\u62bd\u8c61\u4e86\uff09\uff1a</p> <pre><code>Elf_Ehdr     ehdr-&gt;e_phoff\n\u2b07\ufe0f            \u2b07\ufe0f\n[            [type: ???][type: LOAD][type: ???] ]\n</code></pre> <p>\u5c31\u662f elf \u6587\u4ef6\u91cc\u6563\u843d\u7740\u51e0\u4e2a\u5c0f\u6bb5\uff0c\u5176\u4e2d\u4e00\u4e2a\u7c7b\u578b\u4e3a LOAD \u7684\u6bb5\u662f\u9700\u8981\u590d\u5236\u5230\u7ebf\u7a0b\u4ee3\u7801\u6bb5\u7684\uff0c\u4f46\u4e0d\u4e00\u5b9a\u590d\u5236\u5230\u7ebf\u7a0b\u5934\u7684\u8d77\u59cb\u5730\u5740 <code>0x0</code>\uff0c<code>p_vaddr</code> \u4f1a\u544a\u8bc9\u4f60\u8fd9\u6bb5\u4ee3\u7801\u5e0c\u671b\u88ab\u590d\u5236\u5230\u54ea\u91cc\u53bb\u3002e_entry \u4e5f\u8d34\u5fc3\u544a\u8bc9\u4f60\u7b2c\u4e00\u6761\u4ee3\u7801\u6307\u4ee4\u7684\u8d77\u59cb\u5730\u5740\u5728\u54ea\u3002\u603b\u4e4b\uff0c\u4f60\u9700\u8981\u5148\u901a\u8fc7\u4e00\u4e9b\u504f\u79fb\u91cf\u5728 Elf64_Ehdr \u8fd9\u4e2a\u6307\u9488\u91cc\u627e\u5230\u7b2c\u4e00\u4e2a segment\uff0c\u7136\u540e\u4ee5\u4e00\u4e2a Elf63_phdr \u7684\u5927\u5c0f\u4e3a\u5355\u4f4d\uff0c\u6328\u4e2a\u53bb\u5bfb\u627e\u4e00\u4e2a\u7c7b\u578b\u4e3a LOAD \u7684 segment\u3002\u7b49\u627e\u5230\u4e86\u5c31\u53ef\u4ee5\u62f7\u8d1d\u4e86\u3002</p> <p>\u5982\u679c\u4f60\u6309\u7167\u4e00\u5806\u6307\u9488\u7684\u5199\u6cd5\u88ab\u641e\u5f97\u6655\u5934\u8f6c\u5411\uff0c\u751a\u81f3\u53ea\u662f\u5148\u7528 <code>readelf -h</code> \u67e5\u770b\u4e00\u4e0b elf \u6587\u4ef6\u91cc\u5404\u4e2a\u4e1c\u897f\u7684\u5730\u5740\uff08\u67e5\u770b\u540e\u53ef\u4ee5\u53d1\u73b0\u4e0e\u5b9e\u9a8c\u6307\u5bfc\u4e2d\u7ed9\u7684\u4f8b\u5b50\u5c31\u662f\u540c\u4e00\u4e2a\u6587\u4ef6\uff09\uff0c\u7136\u540e\u76f4\u63a5\u628a\u6574\u4e2a uapp \u7a0b\u5e8f\u5168\u90e8\u62f7\u5230\u8fdb\u7a0b\u91cc\u6765\uff0c\u76f4\u63a5\u628a <code>__dummy</code> \u8fd4\u56de\u5730\u5740\u6307\u5230\u4f60\u5728\u6587\u4ef6\u91cc\u8bfb\u51fa\u6765\u7684\u90a3\u4e2a\u4ee3\u7801\u8d77\u59cb\u5730\u5740\uff0c\u751a\u81f3\u90fd\u80fd\u8dd1\u3002\u5728\u8dd1\u8d77\u6765\u4e4b\u540e\uff0c\u6839\u636e\u4f60\u7684\u7406\u89e3\u4e00\u70b9\u4e00\u70b9\u628a\u8bbe\u7f6e\u6307\u9488\u7684\u4ee3\u7801\u6309\u7167\u542b\u4e49\u66ff\u6362\u4e0a\uff0c\u6211\u611f\u89c9\u8fd9\u6837\u53cd\u7740\u505a\u4e5f\u884c\u3002</p>"},{"location":"CS/OS/lab/#lab5","title":"lab5","text":"<p>Warning</p> <p>\u4e0b\u9762\u51e0\u4e2a\u5b9e\u9a8c\u6211\u5199\u5f97\u6709\u70b9\u7b80\u7565\uff0c\u5c0f\u90e8\u5206\u56e0\u4e3a\u6211\u4e0d\u8bb0\u5f97\u4e86\uff0c\u5927\u90e8\u5206\u56e0\u4e3a\u6211\u81ea\u6211\u611f\u89c9\u6ca1\u6709\u5403\u900f\u8fd9\u4e2a\u5b9e\u9a8c\uff0c\u4e0d\u73ed\u95e8\u5f04\u65a7\u4e86\u3002\u4f46\u662f\u8fd9\u4e2a\u5730\u65b9\u53d1\u81ea\u5185\u5fc3\u5730\u60f3\u7559\u4e2a TODO \u5e0c\u671b\u80fd\u6709\u673a\u4f1a\u8865\u5b8c\u3002</p> <p>\u672c\u5b9e\u9a8c\u4e0e lab4 \u5185\u5b58\u5206\u914d\u7684\u533a\u522b\u662f\uff0c\u4e3a\u4e86\u9632\u6b62\u7269\u7406\u5185\u5b58\u4e0d\u8db3\uff0c\u5728 task \u521d\u59cb\u5316\u8bf7\u6c42\u7a7a\u95f4\u65f6\uff0c\u5148\u4e0d\u5206\u914d\u7269\u7406\u5185\u5b58\uff0c\u800c\u662f\u7528 <code>do_mmap()</code> \u5148\u628a task \u7684\u8bf7\u6c42\u7684\u6240\u6709\u53c2\u6570\u8bb0\u5f55\u4e0b\u6765\uff0c\u7b49 task \u771f\u6b63\u53bb\u8bbf\u95ee\u7684\u65f6\u5019\uff0c\u5fc5\u7136\u4f1a\u89e6\u53d1 page fault\uff0c\u7136\u540e\u5728 page fault handler \u91cc\u6839\u636e\u8bb0\u5f55\u7684\u53c2\u6570\uff0c\u518d\u5206\u914d\u7269\u7406\u5185\u5b58\u3002</p>"},{"location":"CS/OS/lab/#lab6","title":"lab6","text":"<p>\u5b9e\u9a8c\u4e3b\u8981\u76ee\u6807\u662f\u5b9e\u73b0\u521b\u5efa\u5b50\u8fdb\u7a0b\u7684\u903b\u8f91\uff0c\u5373\u5728\u7528\u6237\u7a0b\u5e8f\u8c03\u7528fork()\u51fd\u6570\uff0c\u4ea7\u751f220\u53f7\u7cfb\u7edf\u8c03\u7528\u7684\u65f6\u5019\uff0c\u5728sys_clone()\u8fd9\u4e2a\u51fd\u6570\u91cc\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u5e76\u4f7f\u5176\u52a0\u5165\u88ab\u8c03\u7528\u7684task\u961f\u5217\u3002</p>"},{"location":"CS/OS/lab/#lab7","title":"lab7","text":"<p>Warning</p> <p>lab7 \u6211\u53ea\u5b8c\u6210\u4e86\u5360 60% \u7684\u7b2c\u4e00\u90e8\u5206\uff0c\u4f46\u5176\u5b9e\u5de5\u4f5c\u91cf\u6bd4\u8f83\u5927\u7684\u8fd8\u5728\u7b2c\u4e8c\u90e8\u5206\u3002\u6211\u8fd9\u91cc\u53ea\u80fd\u603b\u7ed3\u7b2c\u4e00\u90e8\u5206\u4e86\u3002</p> <p>\u672c\u5b9e\u9a8c\u6bcf\u4e2atask\u90fd\u6709\u4e00\u4e2a\u7ed3\u6784\u4f53\u53bb\u7ef4\u62a4\u5df2\u7ecf\u6253\u5f00\u7684\u6587\u4ef6\u8868\u3002\u672c\u5b9e\u9a8c\u9996\u5148\u4fee\u6539task struct\uff0c\u5728\u6bcf\u4e2atask struct\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u9875(struct file* \u578b)\u53bb\u7ef4\u62a4\u8fd9\u4e2a\u6587\u4ef6\u8868\u3002</p> <p>\u6bcf\u4e2a\u6587\u4ef6\u8868\u6709\u4e00\u4e9b\u51fd\u6570\u6307\u9488\uff0c\u5206\u522b\u6307\u5411\u5bf9\u6587\u4ef6\u7684\u8bfb\u5199\u64cd\u4f5c\u51fd\u6570\u3002\u9996\u5148\u9700\u8981\u5b9e\u73b0\u8fd9\u4e9b\u51fd\u6570\uff0c\u5982 <code>stdout_write()</code> \u548c <code>stdin_read()</code> \u7b49\u3002</p> <p>\u5f53\u7528\u6237\u7a0b\u5e8f\u4ea7\u751f\u6587\u4ef6\u8bfb\u5199\u7684 system call \u65f6\uff0c<code>trap_handler()</code> \u4e2d\u9700\u8981\u5b9e\u73b0\u5bf9\u8fd9\u4e9b system call \u7684\u5904\u7406\u51fd\u6570\u3002\u5177\u4f53\u64cd\u4f5c\u5c31\u662f\u6355\u83b7\uff0c\u7136\u540e\u4ec0\u4e48\u4e5f\u4e0d\u505a\uff0c\u76f4\u63a5\u628a\u53c2\u6570\u4ea4\u7ed9\u4e0a\u8ff0\u5b9e\u73b0\u7684\u6587\u4ef6\u8bfb\u5199\u51fd\u6570\u6765\u64cd\u4f5c\u3002</p>"},{"location":"CS/OS/lab/#_10","title":"\u5e38\u89c1\u95ee\u9898\u4e4b\u8865\u5145\u53c8\u540d\u6211\u4e4b\u603b\u662f\u9047\u89c1\u95ee\u9898","text":"<p>Q1: \u8fd0\u884c\u53d1\u73b0\u7a0b\u5e8f\u5728\u51e0\u4e2a\u521d\u59cb\u5316\u51fd\u6570\u4e4b\u95f4\u6765\u56de\u8df3\u8dc3\uff0c\u6bd4\u5982\u5df2\u7ecf\u5230\u4e86 <code>set_up_vm_final()</code>\uff0c\u53c8\u8df3\u56de <code>set_up_vm()</code>\uff0c\u518d\u5f80\u4e0b\u8fd0\u884c\u5c31\u5728\u8fd9\u51e0\u4e2a\u51fd\u6570\u4e4b\u95f4\u5faa\u73af\u3002\u8fdb\u5165 gdb \u8c03\u8bd5\uff0c\u5219\u53d1\u73b0\u53d1\u751f\u8df3\u8f6c\u7684\u5730\u65b9\u5e76\u6ca1\u6709\u4efb\u4f55 branch \u6216\u8005 call \u8bed\u53e5\u6307\u5411\u8df3\u5f80\u7684\u5730\u5740\uff0c\u4f46\u662f\u80fd\u89c2\u5bdf\u5230\u51fa\u73b0\u8df3\u8f6c\u7684\u5730\u65b9\uff0c\u5f80\u5f80\u662f\u8fdb\u4e86 memset() \u6216\u8005 memcopy() \u51fd\u6570\u3002</p> <p>A1: \u6574\u4e2a\u5b9e\u9a8c\u8fc7\u7a0b\u4e2d\u6211\u9047\u5230\u4e86\u4e09\u56db\u6b21\uff0c\u4e00\u5f00\u59cb\u89c9\u5f97\u662f\u4ee5\u5947\u602a\u7684\u65b9\u5f0f\u89e3\u51b3\u4e86\uff08\u6bd4\u5982\uff0c\u7a81\u7136\u53d1\u73b0\u81ea\u5df1\u5728\u521d\u59cb\u5316\u8fdb\u7a0b\uff0c\u5f15\u5165\u5916\u90e8\u9875\u8868\u65f6\u7528\u5230\u7684\u4ee3\u7801\u662f <code>extern unsigned long *swapper_pg_dir;</code>\uff0c\u800c\u4e0d\u662f <code>extern unsigned long swapper_pg_dir[512] __attribute__((__aligned__(0x1000)));</code>\uff0c\u5373\uff0c\u7f3a\u5c11\u4e86\u4e00\u4e2a\u5730\u5740\u5bf9\u9f50\u3002\u540c\u5b66\u6307\u51fa\u5982\u679c\u6ca1\u6709\u5bf9\u9f50\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9875\u8868\u8fb9\u7f18\u7684\u4e00\u4e9b\u6570\u636e\u7684\u4e22\u5931\u635f\u574f\u3002\uff09\uff0c\u540e\u6765\u6162\u6162\u53d1\u73b0\u89c4\u5f8b\u662f\uff1a\u53d1\u751f\u8fd9\u6837\u8df3\u8f6c\u7684\u6307\u4ee4\uff0c\u90fd\u5728\u5c1d\u8bd5\u5f80 <code>0x80000000</code> \u8fd9\u4e2a\u7269\u7406\u5730\u5740\u4ee5\u4e0b\u7684\u7269\u7406\u5730\u5740\u5199\u4e1c\u897f\u3002\u6211\u4eec\u6ce8\u610f\u5230 qemu \u63d0\u4f9b\u7ed9\u6211\u4eec\u7684\u7269\u7406\u5730\u5740\u90fd\u662f <code>0x80000000</code> \u4ee5\u4e0a\u7684\u5730\u5740\uff0c\u867d\u7136\u6ca1\u6709\u8003\u8bc1\uff0c\u4f46\u662f\u5408\u7406\u731c\u6d4b\u5176\u4e0b\u7684\u5730\u5740\u662f qemu \u81ea\u5df1\u7684\u4ee3\u7801\u533a\uff0c\u652f\u6301 qemu \u81ea\u5df1\u7684\u8fd0\u884c\u903b\u8f91\u3002\u5982\u679c\u4e0d\u5c0f\u5fc3\u5199\u5230\u4e86\u8fd9\u4e2a\u5730\u65b9\uff0c\u5f53\u7136\u53ef\u80fd\u53d1\u751f\u4e0d\u80fd\u89e3\u91ca\u7684 qemu \u884c\u4e3a\u3002</p> <p>\u6240\u4ee5\u5982\u679c\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u884c\u7684\u4e00\u6b65\u4e00\u6b65\u68c0\u67e5\u65b9\u6cd5\u662f\uff1a</p> <ul> <li>\u68c0\u67e5 lab3 <code>create_mapping()</code> \u505a\u9875\u8868\u6709\u6ca1\u6709\u505a\u5bf9\u3002\u4e00\u4e2a\u6f02\u4eae\u7684\u68c0\u67e5\u65b9\u6cd5\u662f <code>printk(\"[function name]: map from %#llx-%#llx to %#llx-%#llx\", pa, pa+size, va, va+size);</code>\uff0c\u5e2e\u52a9\u68c0\u67e5\u4ece\u54ea\u4e2a\u5730\u5740 copy \u5230\u54ea\u4e2a\u5730\u5740\u4e86\u3002</li> <li>\u68c0\u67e5\u505a\u597d\u7684\u9875\u8868\uff0c\u4f7f\u7528\u4e0a\u662f\u5426\u6b63\u786e\u3002</li> <li>\u68c0\u67e5 <code>memset()</code> <code>memcpy()</code> \u7b49\u51fd\u6570\u6709\u6ca1\u6709\u7528\u5bf9\u3002\u4e00\u6837\u662f\u7528\u4e0a\u9762\u7c7b\u4f3c\u7684 prink \u53bb\u6253\u5370\u8d77\u59cb\u5730\u5740\u3002</li> </ul> <p>\u603b\u4e4b\uff0c\u6839\u672c\u76ee\u6807\u662f\u53bb\u770b\u4e00\u4e0b\u6709\u6ca1\u6709\u5f80\u7269\u7406\u5730\u5740 <code>0x80000000</code> \u4ee5\u4e0b\u7684\u5730\u65b9\u5199\u4e1c\u897f\u3002</p> <p>Q2: \u8fd0\u884c\u7a0b\u5e8f\u5230\u4e00\u534a\u5361\u4f4f\uff0c\u6ca1\u6709\u4efb\u4f55\u8f93\u51fa\u4e86\uff0c\u8c03\u8bd5\u53d1\u73b0\u6700\u540e\u662f\u5728 <code>__dummy</code> \u7684 <code>sret</code> \u540e\u5361\u4f4f\u4e86\u3002</p> <p>A2: \u53ef\u4ee5\u5148\u5b9e\u73b0\u4e00\u4e2a\u6f02\u4eae\u70b9\u7684 <code>trap_handler()</code> \u5e2e\u52a9\u8c03\u8bd5\u3002\u8fd9\u70b9\u5728 lab7 \u7684\u6307\u5bfc\u91cc\u624d\u6709\u63d0\u793a\u5230\uff0c\u4e0d\u8fc7\u6211\u89c9\u5f97\u5e94\u8be5\u65e9\u70b9\u5b9e\u73b0\u8d77\u6765\u3002\u6bd4\u5982\uff1a</p> <p><pre><code>void trap_handler(uint64 scause, uint64 sepc, struct pt_regs* regs) {  // a0, a1, a2\nuint64 stval = csr_read(stval);\n// printk(\"[S] Trap @sepc = %#llx, @scause = %#llx, @stval = %#llx\\n\", sepc, scause, stval);\nint done = 0;\n/* Interrupt */\nif ((scause &gt;&gt; 63) &amp;&amp; (scause &amp; 0x7FFFFFFFFFFFFFFF) == 5) {\nclock_set_next_event();\nprintk(\"[S] Supervisor Timer Intterupt\\n\");\ndo_timer();\n} /* Exception */\nelse {\n/* instrution addr misaligned */\nif (scause == 0) {}\n/* Instruction access fault */\nelse if (scause == 1) {}\n/* Illegal instruction */\nelse if (scause == 2) {}\n/* breakpoint */\nelse if (scause == 3) {}\n/* load addr misaligned */\nelse if (scause == 4) {}\n/* load access fault */\nelse if (scause == 5) {}\n/* store/amo addr misaligned */\nelse if (scause == 6) {}\n/* store/amo access fault */\nelse if (scause == 7) {}\n/* ecall U-mode */\nelse if (scause == 8) {\nif (sys_call_num == SYS_WRITE) {\n// ...\n} else if (sys_call_num == SYS_GETPID) {\n// ...\n} else if (sys_call_num == SYS_CLONE) {\n// ...\n}\nregs-&gt;sepc += 4; // pc + 4\n} /* ecall S-mode */\nelse if (scause == 9) {}\n/* Instruction page fault */\n/* Load page fault */\n/* Store/amo page fault */\nelse if (scause == 12 || scause == 13 || scause == 15) {\ndone = do_page_fault(scause, regs);\n} else {\nprintk(\"[S] Unhandled exception with scause = %d, sepc = %lx\\n\", scause, sepc);\nwhile (1);\n}\n}\n// if (!done) while(1);\n}\n</code></pre> \u603b\u4e4b\uff0c\u5efa\u8bae\u5bf9 <code>trap_handler()</code> \u505a\u7684\u6539\u8fdb\u6709\u4e24\u4ef6</p> <ul> <li>\u5982\u679c\u53d1\u751f trap \u5c31\u8f93\u51fa\u4e00\u4e0b\u5f53\u524d\u7684 scause\uff08trap \u539f\u56e0\uff09\uff0cstval\uff08\u5177\u4f53\u53d1\u751f trap \u7684\u6307\u4ee4\u5730\u5740\uff09\uff0csepc\uff08trap \u4e4b\u540e\u7684\u8fd4\u56de\u5730\u5740\uff09\uff0c\u4e00\u65b9\u9762\u770b\u770b\u6709\u6ca1\u6709 trap\uff0c\u53e6\u4e00\u65b9\u9762\u6839\u636e\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7684\u503c\u770b\u770b trap \u53d1\u751f\u7684\u539f\u56e0\u3002</li> <li>\u53ef\u4ee5\u89c2\u5bdf\u5230\u6709\u4e00\u4e9b <code>while(1)</code> \u8bed\u53e5\uff0c\u8fd9\u662f\u56e0\u4e3a\u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u5361\u4f4f\u7684\u539f\u56e0\u662f\u5faa\u73af\u53d1\u751f trap\uff0c\u4e00\u4e2a trap \u8fd8\u6ca1\u7ed3\u675f\u5c31\u8fdb\u5165\u4e86\u53e6\u4e00\u4e2a\uff0c\u90a3\u53ef\u80fd\u4f1a\u5faa\u73af\u8f93\u51fa\u4f60\u6253\u5370\u7684\u4fe1\u606f\u770b\u4e0d\u6e05\u3002\u8fd9\u4e2a\u8bed\u53e5\u53ef\u4ee5\u5e2e\u4f60\u505c\u4f4f\u8ba9\u4f60\u770b\u6e05\u6253\u5370\u7684\u4fe1\u606f\u3002\uff08\u600e\u4e48\u6211\u8bb2\u5f97\u542c\u8d77\u6765\u597d\u5f31\u667a\uff09</li> </ul> <p>\u5982\u679c\u786e\u5b9e\u662f\u5faa\u73af trap \u5bfc\u81f4\u7684\u7a0b\u5e8f\u5361\u4f4f\uff0c\u90a3\u4e48\u6309\u6253\u5370\u7684\u4fe1\u606f\u53bb\u601d\u8003\u5c31\u53ef\u4ee5\u4e86\u3002\u5982\u679c\u8fd8\u662f\u4ec0\u4e48\u8f93\u51fa\u90fd\u6ca1\u6709\uff08\u6211\u8bb0\u5f97\u4e5f\u6709\u8fd9\u79cd\u60c5\u51b5\uff09\uff0c\u6211\u4e0d\u8bb0\u5f97\u662f\u4ec0\u4e48\u539f\u56e0\u4e86\uff0c\u4f46\u662f\u8d77\u7801\u5e2e\u4f60\u6392\u9664\u4e86\u53d1\u751f\u4e86 trap \u7684\u53ef\u80fd\u6027\uff0c\u4f60\u53ef\u4ee5\u5728\u6b64\u57fa\u7840\u4e0a\u7ee7\u7eed\u601d\u8003\u662f\u4e3a\u4ec0\u4e48\u3002</p>"},{"location":"DL/","title":"\u7d22\u5f15","text":"<p>\u672c\u7ae0\u8282\u5305\u62ec\u6df1\u5ea6\u5b66\u4e60\u7406\u8bba+\u5de5\u7a0b\u7b14\u8bb0\uff0c\u5df2\u5b8c\u6210\u4ee5\u4e0b\u5185\u5bb9 - NLP\u5b66\u4e60\u548c\u5de5\u7a0b\u7b14\u8bb0</p> <p>\u8fd9\u4e2a\u7d22\u5f15\u6ca1\u5199\u5b8c</p> <p>\u800c\u4e14\u6211\u4e5f\u4e0d\u8bb0\u5f97\u4e3a\u4ec0\u4e48\u4e0b\u9762\u653e\u4e86\u8fd9\u5f20\u56fe\u4e86</p> <p></p> <p>\u597d\u7684\u7b14\u8bb0</p> <p>AI\u5185\u5bb9\u751f\u6210\uff08ai-gc\uff09</p>"},{"location":"DL/NLPTheory/explainable_nlp/","title":"Explainable NLP","text":"<p>TODO</p>"},{"location":"DL/NLPTheory/explainable_nlp/#survey","title":"Survey","text":""},{"location":"DL/NLPTheory/explainable_nlp/#a-survey-of-the-state-of-explainable-ai-for-natural-language-processing","title":"A Survey of the State  of Explainable AI for Natural Language Processing","text":"<p>This survey thoroughly explains the state of explainable NLP. The Introduction discusses two distinguishing criteria for explanability models (1) whether the explanation is for each prediction individually or the model\u2019s prediction process as a whole, and (2) determining whether generating the explanation requires post-processing or not. In Categorization of Explanations, this paper categorizes the explanation models into local (provides information or justification for the model's prediction on a specific input) vs. global (provides similar justification by revealing how the model's predictive process works, independently of any particular input), and self-explaining (also directly interpretable, generates the explanation at the same time as the prediction, e.g. decision trees, rule-based models, and feature saliency models like attention models) vs. post-hoc (an additional operation is performed after the predictions are made). This section also states that the different categories of models can overlap. In section Aspects of Explanations, this paper introduces three types of explanation techniques: (1) explainability techniques (feature importance, surrogate model, example-driven, provenance-based, declarative induction), (2) operations to enable explainability (first-derivation saliency, layer-wise relevance propagation, and input perturbations, attention, LSTM gating signals, explainability-aware architecture design) and (3) visualization techniques (saliency, raw declarative representations, natural language explanation). The section Evaluation introduces several evaluating metrices. </p>"},{"location":"DL/NLPTheory/explainable_nlp/#opinion-papers","title":"Opinion Papers","text":""},{"location":"DL/NLPTheory/explainable_nlp/#climbing-towards-nlu-on-meaning-form-and-understanding-in-the-age-of-data-2020","title":"Climbing towards NLU: On Meaning, Form, and Understanding in the Age of Data (2020)","text":"<p>This paper argues that the modern NLP models trained on form has no abilities in understanding natural languages based on both the science and philosophy theories. It is structured as follows. In section Large LMs: Hype and analysis, this paper samples example pieces from news and academic literature that exaggerate the understanding abilities in using words including \"understand\"\"comprehension\"\"recall factual knowledge\", and argues that the current LMs have the ability no other than learning the surface linguistic forms of language rather than understanding them. In section What is meaning?, this paper clarifies the meaning of language as the communicative intent that a parole intends to express, and distinguishes the concept \"meaning\" and \"truth\" as the truth is the meaning that is \"grounded\" to the real world. In section The octopus test, this paper detailedly tells a thought experiment of a super intelligent octopus who can mimic the human response by never receiving the knowledge of the grounded real world of the language meaning, by which this paper argues that it might be that how the language receiver decodes the communicative intends affects the conventional meaning of language. In section More constrained thought experiments, two more thought experiments are provided, training the JAVA and training the English LMs without providing the executing methods the communicative intends, and the paper argues that such tasks are impossible. In section Human language acquisition, this paper supports its idea by providing the example of human children's acquiring knowledge is not only grounded on the world image, but also in the interaction with other people. In section Distributional semantics, this paper argues that in NLP, two methods based on the instincts above are training distributional models on corpora augmented with perceptual data, and looking to interaction data (according to Wittgenstein's \"meaning in use\"). </p>"},{"location":"DL/NLPTheory/explainable_nlp/#information-theory-based-compositional-distributional-semantics-2021","title":"Information Theory-based Compositional Distributional Semantics (2021)","text":"<p>According to the abstract, the contribution of this paper can be concluded as proposing the notion of Information Theory-based Compositional Distributional Semantics (ICDS): (i) We first establish formal properties for embedding, composition, and similarity functions based on Shannon\u2019s Information Theory; (ii) we analyze the existing approaches under this prism, checking whether or not they comply with the established desirable properties; (iii) we propose two parameterizable composition and similarity functions that generalize traditional approaches while fulfilling the formal properties; and finally (iv) we perform an empirical study on several textual similarity datasets that include sentences with a high and low lexical overlap, and on the similarity between words and their description. In section Introduction, the author introduces Frege's concepts of compositionality and contextuality, which respectively refers to that \"the meaning of the whole is a function of the meaning of its parts and the syntactic way in which they are combined\", and that \"the meaning of words and utterances is determined by their context\". This section also introduces the main concern of lacking systematicity by the linguists to the NLP, where systematicity is defined as \"A system is said to exhibit systematicity if, whenever it can process a sentence, it can process systematic variants, where systematic variation is understood in terms of permuting constituents or (more strongly) substituting constituents of the same grammatical category.\" Thus, this section introduces that this paper aims to propose a novel system called Information Theory-based Compositional Distributional Semantics (ICDS). In section Related Work, the author introduces a set of properties in selective proper text representation paradigms which includes \"systematicity\", \"usage context\", \"continuity\", and \"information measurbility\", and introduces a series of previous work under this standard. In section Theoretical Framework, this paper first establishes a geometric interpretation of ICDS, that \"The direction of an embedding represents the pragmatic meaning, and the vector norm of embedding represents how much information the literal utterance provides about its meaning in the pragmatic context\", and then proposes the concept of ICDS as \"there are minimal linguistic units whose semantics are determined by their use and whose amount of information is determined by their specificity. On the other hand, the systematicity of language can be captured by compositional mechanisms while preserving the amount of information of the composite utterance\". Section Formal Definition and Properties formally defines the concepts involved in ICDS, where (\\(\\pi\\),\\(\\delta\\), \\(\\bigodot\\)) stand for \"embedding\", \"semantic similarity\", and \"composition function\" respectively. This section points out the embedding function properties (information measurability and angular isometry), composition function properties (composition neutral element, composition norm monotonicity, and sensitivity to stricture), and similarity function properties (angular distance simialrity monotonicity, orthogonal embedding similarity monotonicity, and equidistant embedding simialrity monotonicity). In section Function Analysis and Generalization, this research evaluates several current embedding vector with the proposed framework, while in section Experiment, the semantic representation abilities of several prevailing LLMs including BERT and GPT are evaluated. </p>"},{"location":"DL/NLPTheory/explainable_nlp/#contrastive-explanations-for-model-interpretability-2021","title":"Contrastive Explanations for Model Interpretability (2021)","text":"<p>This paper proposes a data augmentation method to generate counterexample on the bases of NLI datasets, and proves that by training on patterns \"why A rather than B\" with contrastive learning methods, the model performs better than the previous NLI baselines.</p>"},{"location":"DL/NLPTheory/explainable_nlp/#using-counterfactual-contrast-to-improve-compositional-generalization-for-multi-step-quantitative-reasoning-2023","title":"Using counterfactual contrast to improve compositional generalization for multi-step quantitative reasoning (2023)","text":""},{"location":"DL/NLPTheory/mwp/","title":"Math Word Problems","text":""},{"location":"DL/NLPTheory/mwp/#an-introduction-to-math-word-problems","title":"An Introduction to Math Word Problems","text":"<p>The math word problem (MWP) aims to solve simple primary school math problems (in plain-text format) with deep learning methods. The problems usually consists of numbers no larger than 100 and only 5 operators (+, -, *, / and =). This blog is structured as follows. The Dataset part will introduce two main types, one indicating the locations of variables, and the other simply embedding the math formula within the natural language texts. The Methods parts will introduce several prevailing methods in solving this task, including both the models and workflows that improves the accuracy of models.</p>"},{"location":"DL/NLPTheory/mwp/#surveys","title":"Surveys","text":""},{"location":"DL/NLPTheory/mwp/#the-gap-of-semantic-parsing-a-survey-on-automatic-math-word-problem-solvers-2019","title":"The Gap of Semantic Parsing: A Survey on Automatic Math Word Problem Solvers (2019)","text":"<p>This survey provides a comprehensive introduction to the MWP datasets and methods prior to 2019. This survey defines three stages of MWP solving, the Rule-based matching stage (1960-2010), Semantic parsing, feature engineering and statistical learning stage (2011-2017), and Deep learning and reinforcement learning stage (2017-2019).</p>"},{"location":"DL/NLPTheory/mwp/#towards-tractable-mathematical-reasoning-challenges-strategies-and-opportunities-for-solving-math-word-problems-2021","title":"Towards Tractable Mathematical Reasoning: Challenges, Strategies, and Opportunities for Solving Math Word Problems (2021)","text":"<p>This survey introduces the contemporary MWP datasets til 2021, and methods including rule-based, and neural network encoder-decoder structures. Specifically, this paper concludes three strategies for math word solving, (i) direct answer generation, (ii) expression tree generation for inferring answers, and (iii) template retrieval for answer computation. Considering the type of problem solving method, this paper concludes two classes. The first class is non-neural approaches (rule-base or pattern matching approaches, semantic parsing, and statistical machine learning approaches), within which a particular strategy of applying domain knowledge in classifying the problems (e.g. into change, part-whole and compare classes). The second class is neural approaches, including intuitions of (i) predicting the answer directly (ii) generating a set of equations or mathematical expressions and inferring answers from the by executing them (iii) retrieving the templates from a pool of templates derived from training data and augmenting numerical quantities to compute the answer. These neural approaches generally follow encoder-decoder architectures, which fall in four types (i) seq-to-seq (ii) Transformer-to-tree (iii) seq-to-tree (iv) graph-to-tree.   Among the four methods, the tree-structured decoder attend both parents and siblings to generate the next token, while the bottom-up representation of sub-tree of a sibling could further help to derive better outcomes. The graph-based encoder aims to learn different types of relationships among the constituents of MWPs. This section also mentions that \"Data augmentation is a popular preprocessing technique to increase the size of training data\" (reverse operation-based augmentation techniques, different traversal orders of expression trees, and weak supervision).  In section Math Reasoning in Neural Approaches, this paper mentions several further topics under math reasoning, interpretability and explainability, infusing explicit and definitive knowledge, and reinforcement learning. </p>"},{"location":"DL/NLPTheory/mwp/#datasets","title":"Datasets","text":""},{"location":"DL/NLPTheory/mwp/#mawps-a-math-word-problem-repository-2016","title":"MAWPS: A Math Word Problem Repository (2016)","text":"<p>sroy9/mawps: Code for MAWPS: A Math Word Problem Repository (github.com) The data format is as follows. <pre><code>[\n{\n\"iIndex\": 1,\n\"sQuestion\": \"Joan found 70.0 seashells on the beach. She gave Sam some of her seashells . She has 27.0 seashells . How many seashells did she give to Sam ?\",\n\"lEquations\": [\"X=(70.0-27.0)\"],\n\"lSolutions\": [43.0]\n},\n]\n</code></pre></p>"},{"location":"DL/NLPTheory/mwp/#math23k-deep-neural-solver-for-math-word-problems-2017","title":"Math23k: Deep Neural Solver for Math Word Problems (2017)","text":"<p>Deep Neural Solver for Math Word Problems (aclanthology.org) This dataset is in Chinese. <pre><code>Problem: Dan have 2 pens, Jessica have 4 pens. How many pens do they have in total ? \nEquation: x = 4+2 \nSolution: 6\n</code></pre></p>"},{"location":"DL/NLPTheory/mwp/#mathqa-2019","title":"MathQA (2019)","text":"<p>MathQA-Dataset (math-qa.github.io) This paper proposes a math dataset which enhances the AQuA dataset by providing fully-specified operational programs. This dataset has a diverse range of operators. </p>"},{"location":"DL/NLPTheory/mwp/#math-2021","title":"MATH (2021)","text":"<p>arxiv.org/pdf/2103.03874.pdf MATH is a LaTeX format dataset, with its answer highlighted in a square block. </p>"},{"location":"DL/NLPTheory/mwp/#svmap","title":"SVMAP","text":"<p>arkilpatel/SVAMP: NAACL 2021: Are NLP Models really able to Solve Simple Math Word Problems? (github.com) This dataset does not distinguish the data with the texts. An example data is as follows. </p>"},{"location":"DL/NLPTheory/mwp/#gsm8k-grade-school-math-2021","title":"GSM8k: grade school math (2021)","text":"<p>Collected by OpenAI, this dataset consists of math problems in natural language descriptions, with the math formulas highlighted with special notes.The numbers are not explicitly highlighted with special symbols. Several examples of the data format are as follows. </p>"},{"location":"DL/NLPTheory/mwp/#draw","title":"DRAW","text":"<p>Providing 1000 grounded word problems.</p>"},{"location":"DL/NLPTheory/mwp/#algebra","title":"Algebra","text":""},{"location":"DL/NLPTheory/mwp/#asdiv","title":"AsDiv","text":""},{"location":"DL/NLPTheory/mwp/#multiarith","title":"MultiArith","text":""},{"location":"DL/NLPTheory/mwp/#singleeq","title":"SingleEq","text":""},{"location":"DL/NLPTheory/mwp/#methods","title":"Methods","text":""},{"location":"DL/NLPTheory/mwp/#models","title":"Models","text":"<p>Prior to 2017, the models for solving MWP are mainly concerning with neural networks. After Transformer has been released in 2017, attention-based models have been thriving. The novel models based on Transformer are mainly modifying the encoder and decoder structures, among which there are graph-encoder and tree-decoders.</p>"},{"location":"DL/NLPTheory/mwp/#graph-to-tree-learning-for-solving-math-word-problems-2020","title":"Graph-to-Tree Learning for Solving Math Word Problems (2020)","text":"<p>This paper proposes a attention-based model Graph2Tree, consisting of graph-based encoder and a tree-based decoder. The math word problems are constructed into Quantity Comparison Graph.  </p>"},{"location":"DL/NLPTheory/mwp/#math-word-problem-solving-with-explicit-numerical-values-2021","title":"Math Word Problem Solving with Explicit Numerical Values (2021)","text":"<p>A novel approach called NumS2T is proposed to solve MWP. NumS2T is constructed with (a) an attention-based seq2seq model to generate its math expressions, (b) a numerical value encoder to obtain the number-aware problem state which are then concatenated with the problem hidden state in (a) to obtain number-aware problem representation, and (c) a numerical properties prediction mechanism for comparing the paired numerical values, determining the category of each numeral and measuring whether they should appear in the target expression.! </p>"},{"location":"DL/NLPTheory/mwp/#learning-to-reason-deductively-math-word-problem-solving-as-complex-relation-extraction-2022","title":"Learning to Reason Deductively: Math Word Problem Solving as Complex Relation Extraction (2022)","text":"<p>This paper proposes a novel approach</p>"},{"location":"DL/NLPTheory/mwp/#workflows","title":"Workflows","text":"<p>Most of the recent works follow the method of knowledge distilling, which means to generate high quality data with LLMs and then train a small model with the generated (and sometimes then augmented) data. The workflow of such tasks mainly assembles that of the following paper.</p>"},{"location":"DL/NLPTheory/mwp/#large-language-models-are-reasoning-teachers","title":"Large Language Models Are Reasoning Teachers","text":"<p>This paper proposes a knowledge distilling method in solving math reasoning problems. </p>"},{"location":"DL/NLPTheory/mwp/#solving-math-word-problems-via-cooperative-reasoning-induced-language-models-acl-2023","title":"Solving Math Word Problems via Cooperative Reasoning induced Language Models (ACL 2023)","text":"<p>This paper develops a cooperative reasoning-induced PLM for solving MWPs called Cooperative Reasoning (CoRe), with a generator to generate reasoning paths and a verifier to supervise the evaluation. </p>"},{"location":"DL/NLPTheory/mwp/#scaling-relationship-on-learning-mathematical-reasoning-with-large-language-models-2023","title":"Scaling Relationship on Learning Mathematical Reasoning with Large Language Models (2023)","text":"<p>This paper mainly focus on the following two questions: (i) Which is a better performance indicator of LLMs? (pre-training loss amount/model size) (ii) How to improve small model's performance by data augmentation? To answer the second question, this paper proposes a novel methods in data augmentation in the LLM data generation step which is called Rejection Finetuning (RFT). The algorithm of sampling data in RFT mainly adopts the thought of rejection sampling, which is expressed in the following pseudo-code. This paper assumes such an algorithm will yield as many as possible diverse reasoning paths.  The workflow of the RFT method is illustrated as follows, where the SFT stands for supervised finetuning.  With the novel method RFT, small models such as Llama-7b yields an accuracy of at most 49.7% on GSM8k, 14% higher than the previous SOTA method SFT.</p>"},{"location":"DL/NLPTheory/mwp/#pal","title":"PAL","text":"<p>This work is a prompt engineering work. <pre><code>Q: Roger has 5 tennis balls. He buys 2 more cans of tennis balls. Each can has 3 tennis balls. How many tennis balls does he have now? \nA: Roger started with 5 tennis balls. tennis_balls = 5 2 cans of 3 tennis balls each is bought_balls = 2 * 3 tennis balls. The answer is answer = tennis_balls + bought_balls \nQ: The bakers at the Beverly Hills Bakery baked 200 loaves of bread on Monday morning. They sold 93 loaves in the morning and 39 loaves in the afternoon. A grocery store returned 6 unsold loaves. How many loaves of bread did they have left?\n</code></pre></p> <pre><code>A: The bakers started with 200 loaves loaves_baked = 200 They sold 93 in the morning and 39 in the afternoon loaves_sold_morning = 93 loaves_sold_afternoon = 39 The grocery store returned 6 loaves. loaves_returned = 6 The answer is answer = loaves_baked - loaves_sold_morning - loaves_sold_afternoon + loaves_returned\n</code></pre>"},{"location":"DL/NLPTheory/mwp/#preview","title":"Preview","text":""},{"location":"Ling/","title":"Linguistic Notes","text":"<p>It is commonly considered that the subject linguistics consists of 6 main branches. </p> <pre><code>Liguistics\n    |     -------------\n    | -   | Phonetics |\n    |     -------------       -&gt; Interface: TODO\n    | -   | Phonology |\n    |     -------------       -&gt; Interface: \n    | -   | Morphology |\n    |     -------------       -&gt; Interface: \n    | -   |   Syntax   |\n    |     -------------       -&gt; Interface: \n    | -   | Semantics |\n    |     -------------       -&gt; Interface: \n    | -   | Pragmatics |\n    |     -------------\n</code></pre> <p>Besides, border topics of linguistics include - Psycholinguistics - Phylosophy of linguistics - Computational linguistics</p>"},{"location":"Ling/pol_en_todo/","title":"TODO","text":"<p>Aug. 25th. 2023</p> <p>This talk aims both to provide an introduction to the subject Philosophy of Language (a similar subject with semantics and pragmatics, according to its definition; PoL hereafter), and give a summary on the recent ongoing discussion on the linguistics concepts in NLP (e.g. \"meaning\", \"understanding\", \"reasoning\", \"grounding\").</p>"},{"location":"Ling/pol_en_todo/#a-preview-of-this-talk","title":"A Preview of This Talk","text":"<p>1st 40min: History of philosophy of language 2nd 40min: Recent papers and discussions on PoL topics in NLP 3rd 10min: Discussion on take-away</p>"},{"location":"Ling/pol_en_todo/#the-location-of-pol-on-the-academic-coordinate","title":"The Location of PoL on the Academic Coordinate","text":"<p>Before we start this talk, we will first provide a brief definition of the term Philosophy of Language in our talk here. The PoL concerns mainly the two following questions, (i) The relationship between the natural language and the world, (ii) The relationship between the human languages and their meaning. Chen (2003) believes that the PoL and the linguistics are two different subjects. He suggests that the linguistics is the study of language rules and patterns and the application of them, while the PoL pays more attention on the more abstract and essential features of the human language (e.g. its relation to the cognition). The author of this talk believes, according to the definition of PoL, it is a subject that closely involves the semantics and pragmatics branches in linguistics. However the PoL and linguistics overlap or not, it is commonly believed that the subject PoL was born in the 1920s, when the linguistic turn was put on stage in the European philosophy. </p>"},{"location":"Ling/pol_en_todo/#history-of-pol","title":"History of PoL","text":"<p>Now we will dive into the history of PoL. This section is parted \"person by person\". It is noticed that \"person-by-person\" is a common structure of most of the philosophy history, as most of the philosophy progresses are propelled by giants instead of the common people.</p>"},{"location":"Ling/pol_en_todo/#gottfried-wilhelm-leibniz","title":"Gottfried Wilhelm Leibniz","text":"<p>The main contribution of Leibniz is </p>"},{"location":"Ling/pol_en_todo/#ferdinand-de-saussure","title":"Ferdinand de Saussure","text":""},{"location":"Ling/pol_en_todo/#friedrich-ludwig-gottlob-frege","title":"Friedrich Ludwig Gottlob Frege","text":""},{"location":"Ling/pol_en_todo/#bertrand-russell","title":"Bertrand Russell","text":"<p>Bertrand Russell is a pure logician. </p>"},{"location":"Ling/pol_en_todo/#ludwig-wittgenstein","title":"Ludwig Wittgenstein","text":""},{"location":"Ling/pol_en_todo/#noam-chomsky","title":"Noam Chomsky","text":""},{"location":"Ling/pol_zh/","title":"Philosophy of Language \u8bed\u8a00\u54f2\u5b66","text":"<p>Nov. 9th. 2022</p>"},{"location":"Ling/pol_zh/#talk","title":"\u8fd9\u6b21talk\u4f1a\u8bb2\u4ec0\u4e48","text":"<p>\u2705\u00a0\u4ecb\u7ecd\u8bed\u8a00\u54f2\u5b66\u7684\u601d\u6f6e\u6d41\u53d8\u5386\u7a0b\uff0c\u4ecb\u7ecd\u8bed\u8a00\u4e0a\u7684\u5b9e\u9a8c\u601d\u60f3\u5b9e\u9a8c\uff0c\u8ba8\u8bba\u4e00\u4e9b\u8bed\u8a00\u5b66\u3001\u8ba4\u77e5\u3001\u903b\u8f91\u548c\u54f2\u5b66\u7684\u5173\u8054</p>"},{"location":"Ling/pol_zh/#pol","title":"PoL","text":"<p>\u8bed\u8a00\u54f2\u5b66\u7684\u57fa\u672c\u95ee\u9898\uff1a 1. \u8bed\u8a00\u548c\u4e16\u754c\u7684\u5173\u7cfb 2. \u8bed\u8a00\u6216\u8bed\u8bcd\u7684\u610f\u4e49\u95ee\u9898</p> <p>\u8bed\u8a00\u54f2\u5b66\u548c\u8bed\u8a00\u5b66 \u8bed\u8a00\u5b66\u548c\u8bed\u8a00\u54f2\u5b66\u7684\u8054\u7cfb\u7d27\u5bc6\uff0c\u4f46\u662f\u662f\u4e24\u95e8\u5b66\u79d1\u3002</p> <p>20\u4e16\u7eaa\u54f2\u5b66\u4e0a\u53d1\u751f\u4e86\u8bed\u8a00\u8f6c\u5411\uff0c\u8fd9\u4e5f\u662f\u73b0\u4ee3\u8bed\u8a00\u5b66\u5f62\u6210\u7684\u65f6\u5019\u3002</p> <p>\u8bed\u8a00\u5b66\u662f\u5bf9\u8bed\u8a00\u89c4\u5f8b\u548c\u8fd9\u4e9b\u89c4\u5f8b\u7684\u5e94\u7528\u7684\u7814\u7a76\uff0c\u8bed\u8a00\u54f2\u5b66\u66f4\u5173\u5fc3\u8bed\u8a00\u66f4\u672c\u8d28\u66f4\u62bd\u8c61\u7684\u610f\u4e49\u3002</p>"},{"location":"Ling/pol_zh/#history-of-pol","title":"History of PoL","text":"<p>\u83b1\u5e03\u5c3c\u8328\uff1a\u63d0\u51fa\u903b\u8f91\u8bed\u8a00\uff0c\u7b80\u5386\u4eba\u5de5\u8bed\u8a00\u7684\u52aa\u529b</p> <p>\u5f3a\u8c03\u81ea\u7136\u8bed\u8a00\u4f9d\u8d56\u4e8e\u77e5\u8bc6\uff0c\u56e0\u6b64\u5206\u6709\u77e5\u89c9\u7684\u6a21\u7cca\u3001\u6b67\u4e49\u7b49\u79cd\u79cd\u7f3a\u9677\u3002\u81ea\u7136\u8bed\u8a00\u4e0d\u662f\u63cf\u8ff0\u5ba2\u89c2\u4e8b\u7269\u7684\u6700\u4f73\u5de5\u5177\uff0c\u4e3a\u4e86\u63a2\u7a76\u771f\u7406\uff0c\u5fc5\u987b\u5efa\u7acb\u4e00\u4e2a\u7531\u666e\u904d\u7b26\u53f7\u7ec4\u6210\u7684\u66f4\u4e3a\u6e05\u695a\u7684\u7b26\u53f7\u4f53\u7cfb\u3002\u8fd9\u79cd\u52aa\u529b\u5728\u6570\u5b66\u65b9\u9762\u662f\u5353\u6709\u6210\u6548\u7684\uff0c\u6bd4\u5982\u5fae\u79ef\u5206\u7b26\u53f7\u3002</p> <p>\u7d22\u7eea\u5c14\uff1a \u7d22\u7eea\u5c14\u6700\u5927\u7684\u5f71\u54cd\u662f\u300a\u666e\u901a\u8bed\u8a00\u5b66\u300b\u3002\u6211\u4eec\u4e00\u822c\u8ba4\u4e3a\u7d22\u7eea\u5c14\u662f\u4e00\u4f4d\u8bed\u8a00\u5b66\u5bb6\uff0c\u4f46\u662f\u4ed6\u5728\u8fd9\u672c\u4e66\u4e2d\u63d0\u51fa\u7684\u201c\u80fd\u6307\u201d\u4e0e\u201c\u6240\u6307\u201d\u7406\u8bba\uff0c\u662f\u54f2\u5b66\u91cc\u7684\u7b26\u53f7\u5b66\u7684\u5f00\u7aef\u3002</p> <p>\u8bed\u8a00\u662f\u7528\u58f0\u97f3\u8868\u8fbe\u601d\u60f3\u7684\u7b26\u53f7\u7cfb\u7edf\uff0c\u7b26\u53f7\u662f\u7528\u4ee5\u8868\u793a\u8005\u548c\u88ab\u8868\u793a\u8005\u7684\u7ed3\u5408\u3002</p> <p>\u6211\u4eec\u4f1a\u8bf4\uff0c\u58f0\u97f3\u672c\u8eab\u4e0d\u80fd\u65bd\u6307\uff0c\u53ea\u6709\u5904\u5728\u67d0\u79cd\u7279\u5b9a\u5173\u7cfb\u4e2d\uff08\u8bed\u8a00\u5b9a\u4e49\u4e86\u58f0\u97f3\u548c\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\uff09\uff0c\u58f0\u97f3\u624d\u6709\u4e86\u610f\u4e49\u3002</p> <p>\u4efb\u610f\u6027\u539f\u5219\u662f\uff0c\u5982\u6b64\u8fd9\u822c\u7684\u65bd\u6307\u548c\u5982\u6b64\u8fd9\u822c\u7684\u6240\u6307\u7ed3\u5408\u800c\u6210\u7684\u4e00\u4e2a\u7b26\u53f7\uff0c\u662f\u4efb\u610f\u7684\u3002eg. \u989c\u8272\u4e0e\u989c\u8272\u8bcd\u7684\u8054\u7ed3\u662f\u4efb\u610f\u7684\uff0c\u989c\u8272\u7684\u754c\u9650\u4e0e\u989c\u8272\u8bcd\u7684\u8054\u7ed3\u4e5f\u662f\u4efb\u610f\u7684\u3002</p> <pre><code>\"\u7eff\"\u4e0d\u4ec5\u548c\u7eff\u989c\u8272\u76f8\u8fde\uff0c\u800c\u4e14\u548c\u201c\u84dd\u201d\u201c\u9752\u201d\u7b49\u8bed\u8bcd\u76f8\u8fde\u3002\n\u5982\u679c\u6ca1\u6709\u201c\u84dd\u201d\u201c\u9752\u201d\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u77e5\u9053\u201c\u7eff\u201d\u6240\u754c\u5b9a\u7684\u989c\u8272\u8303\u56f4\u3002\n\n\u201c\u4e03\u8272\u5f69\u8679\u201d\n\u65e5\u8bed\u4e0d\u533a\u5206\u201c\u84dd\u201d\u548c\u201c\u7eff\u201d\uff0c\u53ea\u6709\u4e00\u4e2a\u5355\u8bcd\u201c\u9752\u201d\uff08aoi\uff09\uff0c\u65e5\u8bed\u6bcd\u8bed\u8005\u5728\u9274\u522b\u84dd\u8272\u548c\u7eff\u8272\u65f6\u53cd\u5e94\u65f6\u9ad8\u4e8e\u82f1\u8bed\u6bcd\u8bed\u8005\u3002\n\u4e00\u79cd\u5317\u6b27\u8bed\u8a00\u6709\u4e03\u79cd\u84dd\u8272\u7684\u540d\u79f0\u3002\n</code></pre> <p>\u6211\u4eec\u4e60\u60ef\u628a\u8bed\u8bcd\u548c\u60c5\u5883\u7684\u8054\u7cfb\u79f0\u4f5c\u7eb5\u5750\u6807\u6216\u8bed\u5883\u5750\u6807\uff0c\u628a\u8bed\u8bcd\u4e4b\u95f4\u7684\u8054\u7cfb\u79f0\u4f5c\u6a2a\u5750\u6807\u548c\u903b\u8f91\u5750\u6807\u3002</p> <p>eg. \u5b8c\u5f62\u586b\u7a7a\u9898 </p> <p>eg. \u6570\u636e\u5e93\u5173\u7cfb\u6a21\u578b\u7684\u5c5e\u6027\u3001\u5143\u7ec4 </p> <p>\u975e\u5e38\u6709\u8da3\uff0c\u7d22\u7eea\u5c14\u5199\u8fd9\u672c\u8bed\u8a00\u5b66\u6559\u6750\u65f6\uff0c\u4e16\u754c\u4e0a\u5e76\u6ca1\u6709\u7b26\u53f7\u5b66\u8fd9\u4e2a\u5b66\u79d1\u3002\u5728\u4ed6\u63d0\u51fa\u201c\u80fd\u6307\u201d\u201d\u6240\u6307\u201c\u8fd9\u4e2a\u6982\u5ff5\u540e\uff0c\u7b26\u53f7\u5b66\u5728\u4ed6\u201d\u80fd\u6307\u201c\u5728\u201d\u6240\u6307\u201c\u7684\u94fe\u6761\u4e0a\u6ed1\u52a8\u8fd9\u4e00\u8bba\u65ad\u7684\u57fa\u7840\u4e0a\u8bde\u751f\uff0c\u5e76\u81f3\u4eca\u6210\u4e3a\u6cd5\u56fd\u54f2\u5b66\u7684\u4e00\u4e2a\u91cd\u8981\u95ee\u9898\u3002</p> <p>\u5f17\u96f7\u683c\uff1a</p> <p>\u5f17\u96f7\u683c\u662f\u516c\u8ba4\u7684\u5206\u6790\u54f2\u5b66\u3001\u8bed\u8a00\u54f2\u5b66\u548c\u73b0\u4ee3\u6570\u7406\u903b\u8f91\u7684\u5f00\u521b\u8005\u3002</p> <p>\u300a\u6982\u5ff5\u6587\u5b57\uff1a\u4e00\u79cd\u6a21\u4eff\u7b97\u672f\u8bed\u8a00\u6784\u9020\u7684\u7eaf\u601d\u7ef4\u7684\u5f62\u5f0f\u8bed\u8a00\u300b\u4e3b\u8981\u5de5\u4f5c\u662f\uff0c\u8bbe\u8ba1\u4e86\u4e00\u5957\u4eba\u5de5\u7b26\u53f7\u7cfb\u7edf\uff0c\u6392\u9664\u4e86\u81ea\u7136\u8bed\u8a00\u4e2d\u4fee\u8f9e\u4e4b\u7c7b\u7684\u4e1c\u897f\uff0c\u4e13\u6ce8\u4e8e\u6982\u5ff5\u672c\u8eab\u548c\u6982\u5ff5\u4e4b\u95f4\u7684\u8054\u7cfb\uff0c\u56e0\u6b64\uff0c\u5b83\u5c06\u6392\u9664\u81ea\u7136\u8bed\u8a00\u7684\u6a21\u7cca\u6027\u548c\u4e0d\u786e\u5b9a\u6027\u3002\u7528\u8fd9\u5957\u7b26\u53f7\u7cfb\u7edf\u6765\u91cd\u65b0\u8868\u8ff0\u7b97\u672f\u7684\u57fa\u672c\u6982\u5ff5\u548c\u63a8\u7406\u89c4\u5219\uff0c\u660e\u786e\u6240\u6709\u63a8\u7406\u7684\u524d\u63d0\uff0c\u4fdd\u8bc1\u4e00\u4e2a\u8bc1\u660e\u4e2d\u5404\u4e2a\u547d\u9898\u95f4\u7684\u6240\u6709\u63a8\u7406\u89c4\u5219\uff0c\u4f7f\u63a8\u7406\u4e0d\u518d\u57fa\u4e8e\u76f4\u89c9\uff0c\u4e5f\u6ca1\u6709\u8df3\u8dc3\u548c\u8131\u8282\u3002</p> <p>\u5bf9\u8bed\u8a00\u54f2\u5b66\u5f71\u54cd\u6700\u6df1\u7684\u662f\u4ed6\u5728\u300a\u7b97\u672f\u57fa\u7840\u300b\u4e2d\u63d0\u51fa\u7684\u4e09\u6761\u8457\u540d\u539f\u5219\uff1a</p> <ol> <li>\u59cb\u7ec8\u628a\u5fc3\u7406\u7684\u4e1c\u897f\u548c\u903b\u8f91\u7684\u4e1c\u897f\u3001\u4e3b\u89c2\u7684\u4e1c\u897f\u548c\u5ba2\u89c2\u7684\u4e1c\u897f\u4e25\u683c\u533a\u5206\u5f00\u3002\u8fd9\u4e00\u6761\u53cd\u5bf9\u5f53\u65f6\u751a\u4e3a\u6d41\u884c\u7684\u5fc3\u7406\u4e3b\u4e49\u3002\u5f17\u96f7\u683c\u4e3b\u5f20\u903b\u8f91\u5b66\u5bb6\u7814\u7a76\u7684\u662f\u8bed\u8a00\u8868\u8fbe\u5f0f\u3002\u8bed\u8a00\u8868\u8fbe\u5f0f\u662f\u53ef\u4ee5\u516c\u5f00\u8003\u5bdf\u7684\uff0c\u610f\u4e49\u7814\u7a76\u5e94\u5f53\u57fa\u4e8e\u8fd9\u4e9b\u8868\u8fbe\u5f0f\uff0c\u800c\u4e0d\u662f\u4f9d\u8d56\u4e8e\u5bf9\u5fc3\u7406\u8fc7\u7a0b\u7684\u81c6\u6d4b\u3002</li> <li>\u7edd\u4e0d\u5b64\u7acb\u5730\u5bfb\u95ee\u4e00\u4e2a\u8bcd\u7684\u610f\u4e49\uff0c\u800c\u53ea\u5728\u4e00\u4e2a\u547d\u9898\u7684\u4e0a\u4e0b\u6587\u4e2d\u5bfb\u95ee\u8bcd\u7684\u610f\u601d\u3002\u88ab\u79f0\u4e3a\u8bed\u5883\u539f\u5219\u548c\u4e0a\u4e0b\u6587\u539f\u5219\uff0c\u6307\u51fa\u8bed\u4e49\u7814\u7a76\u7684\u6700\u5c0f\u5355\u4f4d\u8d77\u7801\u662f\u53e5\u5b50\uff0c\u4e0d\u662f\u8bcd\uff0c\u4e0d\u662f\u8868\u5c42\u8bed\u6cd5\u3002\u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u4e00\u6761\u4e0e\u7b2c\u4e00\u6761\u76f8\u5173\uff0c\u56e0\u4e3a\u5982\u679c\u7814\u7a76\u8bcd\uff0c\u8bcd\u4f9d\u8d56\u7684\u5fc5\u7136\u662f\u610f\u4e49\u5728\u5fc3\u7406\u8fc7\u7a0b\u4e2d\u7684\u6620\u5c04\uff0c\u800c\u7814\u7a76\u53e5\u5b50\uff0c\u6211\u4eec\u4f1a\u628a\u8bed\u8bcd\u5728\u53e5\u5b50\u4e2d\u7684\u8054\u7cfb\u5f53\u4f5c\u610f\u4e49\u3002</li> <li>\u7edd\u4e0d\u5fd8\u8bb0\u6982\u5ff5\u548c\u5bf9\u8c61\u7684\u533a\u522b\u3002</li> </ol> <p>\u4e24\u4e2a\u601d\u7ef4\u5b9e\u9a8c\uff1a</p> <ol> <li> <p>\u6307\u79f0\u76f8\u540c\u800c\u610f\u4e49\u4e0d\u540c\u7684\u8bcd     <pre><code>\u201c\u542f\u660e\u661f\u201d\u548c\u201c\u957f\u5e9a\u661f\u201d\u662f\u540c\u4e00\u9897\u884c\u661f\u2014\u2014\u2014\u2014\u91d1\u661f\u3002\n\u4f46\u662f\u4e24\u4e2a\u540d\u8bcd\u7684\u610f\u4e49\u4e0d\u540c\uff0c\u5927\u591a\u6570\u65f6\u5019\u4e0d\u80fd\u66ff\u6362\u3002\n\u201c\u4ed6\u5929\u8fd8\u6ca1\u4eae\u5c31\u8d77\u8eab\uff0c\u8fce\u7740\u542f\u660e\u661f\u5411\u4e1c\u8d70\u53bb\u3002\u201d\n</code></pre></p> </li> <li> <p>\u51fd\u5f0f\u7406\u8bba     <pre><code>\uff08 \uff09\u662f\u4e2d\u56fd\u7684\u9996\u90fd\n\uff08 \uff09= \"\u4f26\u6566\"\u3001\"\u5317\u4eac\"\n\u53ea\u6709\u586b\u5165\u5317\u4eac\u7684\u65f6\u5019\u624d\u662f\u771f\u547d\u9898\n</code></pre></p> </li> </ol> <p>\u7f57\u7d20\uff1a\u903b\u8f91</p> <p>\u6df1\u5165\u4e13\u540d\u548c\u901a\u540d\u3001\u6096\u8bba\u3001\u6392\u4e2d\u5f8b\u3002</p> <p>\u7ef4\u7279\u6839\u65af\u5766\uff1a</p> <p>\u524d\u671f\u601d\u60f3\u300a\u903b\u8f91\u54f2\u5b66\u8bba\u300b </p> <p>\u201c\u4e16\u754c\u662f\u4e8b\u5b9e\u7684\u7efc\u5408\u201d\uff1a\u201c\u53f8\u9a6c\u5149\u662f\u5510\u671d\u4eba\u201d\u7b26\u5408\u903b\u8f91\uff0c\u4f46\u4e0d\u7b26\u5408\u4e8b\u5b9e\u3002</p> <p>\u56fe\u50cf\u8bba</p> <p>\u8bed\u8a00\u662f\u547d\u9898\u7684\u603b\u548c\u800c\u4e0d\u662f\u540d\u79f0\u7684\u603b\u548c\u3002</p> <p>\u4eba\u5728\u4ea4\u6d41\u601d\u60f3/\u547d\u9898\u65f6\uff0c\u4ea4\u6d41\u7684\u662f\u8111\u4e2d\u7684\u56fe\u50cf\u3002</p> <p>\u4ed6\u7684\u524d\u671f\u601d\u60f3\u542f\u53d1\u4e86\u7ef4\u4e5f\u7eb3\u5b66\u6d3e\uff1a\u4eba\u5de5\u8bed\u8a00\uff0c\u903b\u8f91\u8bed\u8a00</p> <p>\u5341\u4e5d\u4e16\u7eaa\u672b\u4ee5\u6765\u4eba\u5de5\u8bed\u8a00\u7684\u5c1d\u8bd5\uff1a\u201c\u4e16\u754c\u8bed\uff08Esperanto\uff09\u201d\uff0c\u4e18\u5409\u5c14\u63a8\u5d07\u7684\u57fa\u672c\u82f1\u8bed\uff0c\u81ea\u7136\u8bed\u8a00\u4e2d\u5bf9\u201c\u5973\u4eba\u201d\u201c\u5973\u6027\u201d\u201c\u5973\u58eb\u201d\u201c\u5987\u5973\u201d\u8fd9\u6837\u7684\u6307\u79f0\u7684\u89c4\u8303\u5c1d\u8bd5\u3002</p> <p>\u540e\u671f\u601d\u60f3\u300a\u54f2\u5b66\u7814\u7a76\u300b</p> <p>\u8bed\u8a00\u6e38\u620f\uff08Sprachspiel\uff09</p> <p>\u8bed\u8a00\u7684\u529f\u80fd\u7684\u672c\u8d28\uff1a\u4e00\u65b9\u558a\u51fa\u8bed\u8bcd\uff0c\u53e6\u4e00\u65b9\u4f9d\u7167\u8fd9\u4e9b\u8bed\u8bcd\u6765\u884c\u52a8\u3002</p> <pre><code>\u8001\u5e08\u6307\u7740\u77f3\u5934\u8bf4\u201c\u77f3\u5934\u201d\uff0c\u5b66\u751f\u8ddf\u7740\u8bf4\u201c\u77f3\u5934\u201d\u3002\n</code></pre> <pre><code>\u4e22\u624b\u7ee2\u65f6\u5531\u7740\u201c\u8f7b\u8f7b\u5730\u653e\u5728\u5c0f\u670b\u53cb\u7684\u8eab\u540e\u201d\uff0c\u628a\u624b\u7ee2\u653e\u5728\u5c0f\u670b\u53cb\u7684\u8eab\u540e\n</code></pre> <p>\u4e0e\u524d\u671f\u56fe\u50cf\u7406\u8bba\u7684\u5bf9\u6bd4\uff1a\u5728\u56fe\u50cf\u7406\u8bba\u4e2d\uff0c\u8bed\u8a00\u4ece\u6839\u672c\u4e0a\u662f\u4e00\u79cd\u53cd\u6620\uff1b\u5728\u8bed\u8a00\u6e38\u620f\u8bf4\u4e2d\uff0c\u8bed\u8a00\u9996\u5148\u662f\u4e00\u79cd\u6d3b\u52a8\u3002</p> <p>\u610f\u4e49\u6765\u6e90\u4e8e\u4f7f\u7528\u3002</p> <pre><code>\u6211\u4eec\u5173\u5fc3\u201c\u9524\u5b50\u201d\u662f\u4ec0\u4e48\u65f6\uff0c\n\u5173\u5fc3\u7684\u662f\u201c\u4f7f\u7528\u4e00\u628a\u9524\u5b50\u201d\uff0c\n\u800c\u4e0d\u662f\u201c\u9524\u5b50\u610f\u5473\u7740\u2026\u2026\u201d\n\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u4e5f\u6b63\u662f\u4ece\u201c\u4f7f\u7528\u4e00\u628a\u9524\u5b50\u201d\u6765\u5b9a\u4e49\u9524\u5b50\n</code></pre> <pre><code>\u5982\u4f55\u533a\u5206\u201c\u4f7f\u7528\u201d\u201c\u6709\u7528\u201d\u201c\u5229\u7528\u201d\uff1f\n\u5728\u4e00\u4e9b\u60c5\u5883\u4e2d\u80fd\u7528\uff0c\u5728\u4e00\u4e9b\u60c5\u5883\u4e2d\u4e0d\u80fd\u7528\u3002\n</code></pre> <p>\u8bed\u8a00\u6e38\u620f\u7684\u7c7b\u522b</p> <p></p> <p></p> <p>\u5bb6\u65cf\u76f8\u4f3c\u7406\u8bba\uff08Familien\u00e4hnlichkeiten\uff09</p> <p>\u201c\u4e00\u4e2a\u5bb6\u65cf\u7684\u6709\u4e9b\u6210\u5458\u6709\u4e00\u6837\u7684\u9f3b\u5b50\uff0c\u53e6\u4e00\u4e9b\u6709\u4e00\u6837\u7684\u7709\u6bdb\uff0c\u8fd8\u6709\u4e00\u4e9b\u6709\u4e00\u6837\u7684\u6b65\u6001\uff1b\u8fd9\u4e9b\u76f8\u4f3c\u4e4b\u5904\u4ea4\u53c9\u91cd\u53e0\u3002\u201c </p> <p>\u5185\u6db5\uff1a\u4e00\u4e2a\u6982\u5ff5\u7684\u5b9a\u4e49</p> <p>\u5916\u5ef6\uff1a\u4e00\u4e2a\u6982\u5ff5\u5305\u542b\u7684\u4e0b\u5c5e\u6982\u5ff5\u7684\u8303\u56f4</p> <p>\u901a\u540d\u7684\u4e0b\u5c5e\u8bcd\uff0c\u5404\u79cd\u4e13\u540d\u4e4b\u95f4\u5e76\u6ca1\u6709\u4e25\u683c\u7684\u754c\u9650\uff0c\u4e00\u4e2a\u76f8\u4f3c\u53e6\u4e00\u4e2a\uff0c\u5206\u4eab\u4e0d\u540c\u7684\u5171\u540c\u7279\u5f81\u3002</p> <p></p> <p>\u751f\u6d3b\u5f62\u5f0f\uff08Lebens Form\uff09\uff1a\u5e38\u8bc6\u7684\u91cd\u8981\u6027</p> <p></p> <p></p> <pre><code>\u201c\u626b\u5e1a\u5728\u90a3\u91cc\u201d\u5df2\u7ecf\u8db3\u591f\u6e05\u6670\u3002\n\u201c\u626b\u5e1a\u628a\u548c\u626b\u5e1a\u5934\u5728\u90a3\u91cc\u201d\uff0c\u867d\u7136\u5206\u6790\u5f97\u66f4\u6e05\u695a\uff0c\u4f46\u5728\u4ea4\u9645\u4e2d\u8ba9\u4eba\u8d39\u89e3\u3002\n</code></pre> <p>\u4eff\u4f5b\u6211\u4eec\u53ea\u8981\u66f4\u591a\u8bf4\u4e00\u70b9\uff0c\u591a\u5206\u6790\u4e00\u70b9\uff0c\u4e8b\u60c5\u5c31\u4f1a\u66f4\u6e05\u695a\uff0c\u4eff\u4f5b\u6ca1\u6709\u4e00\u53e5\u8bdd\u672c\u8eab\u5c31\u662f\u8db3\u591f\u6e05\u695a\u7684\u3002</p>"},{"location":"Ling/pol_zh/#conclusion-of-agreements","title":"Conclusion of Agreements","text":"<ol> <li>\u8bed\u8a00\u7684\u610f\u4e49\u4f9d\u8d56\u4e8e\u7b26\u53f7\u4e0e\u7b26\u53f7\u4e4b\u95f4\u76f8\u4e92\u5b9a\u4e49\uff0c\u4e0e\u771f\u5b9e\u4e16\u754c\u7684\u5bf9\u8c61\u6ca1\u6709\u7edd\u5bf9\u7684\u4e00\u4e00\u5bf9\u5e94\u5173\u7cfb\u3002</li> <li>\u8bed\u8a00\u7684\u529f\u80fd\u5728\u4e8e\u53d1\u51fa\u548c\u5b8c\u6210\u547d\u4ee4\u3002</li> <li>\u81ea\u7136\u8bed\u8a00\u771f\u5b9e\u73b0\u8c61\u6bd4\u4eba\u9020\u8bed\u8a00\u89c4\u5219/\u903b\u8f91\u8868\u8fbe\u5f0f\u66f4\u80fd\u53cd\u5e94\u4eba\u8111\u7684\u8ba4\u77e5\u3001\u66f4\u503c\u5f97\u7814\u7a76\u3002</li> </ol>"},{"location":"Ling/pol_zh/#history-of-nlp","title":"History of NLP","text":"<ol> <li>\u57fa\u4e8e\u89c4\u5219\u7684 \u2192 \u7ef4\u7279\u6839\u65af\u5766\u524d\u671f\u53ca\u4ee5\u524d\u7684\u7eaf\u903b\u8f91\u8bed\u8a00\uff0c\u4eba\u9020\u8bed\u8a00\u3002</li> <li>\u57fa\u4e8e\u7edf\u8ba1\u7684\u548c\u6df1\u5ea6\u5b66\u4e60 \u2192 \u7ef4\u7279\u6839\u65af\u5766\u540e\u671f\u7684\u8bed\u8a00\u610f\u4e49\u5728\u4f7f\u7528\u4e2d\u3002</li> <li>\u548c\u7ed3\u5408\u8bed\u8a00\u5b66\u3001\u8ba4\u77e5\u77e5\u8bc6 \u2192 \u4e54\u59c6\u65af\u57fa\u7684\u8bed\u8a00\u7684\u610f\u4e49\u5728\u521b\u9020\u4e2d\u3002</li> </ol>"},{"location":"Ling/pol_zh/#pol_1","title":"PoL\u7684\u5176\u5b83\u95ee\u9898","text":"<p>\u963f\u4f69\u5c14\u603b\u7ed3\u897f\u65b9\u54f2\u5b66\u7684\u53d1\u5c55\uff1a</p> <p>\u53e4\u4ee3\u54f2\u5b66\u6ce8\u91cd\u7684\u662f\u672c\u4f53\u8bba\uff0c\u4ece\u8fd1\u4ee3\u5f00\u59cb\uff0c\u54f2\u5b66\u6ce8\u91cd\u7684\u662f\u8ba4\u8bc6\u8bba\uff0c\u523020\u4e16\u7eaa\uff0c\u54f2\u5b66\u6ce8\u91cd\u7684\u662f\u8bed\u8a00\u3002</p> <p>\u672c\u4f53\u8bba\u7684\u95ee\u9898\uff1a\u4ec0\u4e48\u4e1c\u897f\u5b58\u5728\uff0c\u4ec0\u4e48\u662f\u5b9e\u5728\u7684\u57fa\u672c\u5b58\u5728\u5f62\u5f0f\u3002</p> <p>\u8ba4\u8bc6\u8bba\u7684\u95ee\u9898\uff1a\u54ea\u4e9b\u4e1c\u897f\u662f\u6211\u4eec\u80fd\u8ba4\u8bc6\u7684\uff0c\u6211\u4eec\u662f\u600e\u6837\u8ba4\u8bc6\u8fd9\u4e9b\u4e1c\u897f\u7684\u3002</p> <p>\u8bed\u8a00\u7684\u95ee\u9898\uff1a\u6211\u4eec\u5728\u4f55\u79cd\u610f\u4e49\u4e0a\u80fd\u591f\u8ba4\u8bc6\u5b58\u5728\u2014\u2014\u800c\u610f\u4e49\u7684\u9996\u8981\u8f7d\u4f53\u662f\u8bed\u8a00\u3002\u2192 Linguistic Turn</p> <p>PoL\u7684\u5176\u5b83topic\uff1a 1. \u6307\u79f0\u4e0e\u5b9e\u4f53\uff0c\u8bed\u8a00\u4e0e\u610f\u4e49\u7684\u5173\u7cfb 2. \u901a\u540d\u4e0e\u4e13\u540d\uff0c\u8bcd\u4e49\u7684\u8303\u56f4 3. \u771f\u7406\u7406\u8bba 4. \u300a\u6211\u4eec\u8d56\u4ee5\u751f\u5b58\u7684\u9690\u55bb\u300b\uff1a\u9690\u55bb\u65e0\u5904\u4e0d\u5728\uff0c\u4e0d\u4ec5\u5b9a\u4e49\u4e2d\u7684\u201cxx\u662fxx\u201d\u662f\u9690\u55bb\uff0c\u6709\u65f6\u5355\u4e2a\u8bcd\u5c31\u662f\u4e00\u4e2a\u9690\u55bb\u3002</p> <p>\u52a8\u8bcd\u662f\u9690\u55bb <pre><code>\u65f6\u95f4\u5728\u6d41\u901d\u3002\n</code></pre></p> <p>\u4ecb\u8bcd\u662f\u9690\u55bb <pre><code>I\u2019m feeling up today.\nHe is down.\n\u9ad8\u5174\u4e3a\u4e0a\uff0c\u60b2\u4f24\u4e3a\u4e0b\u3002\nWake up.\nHe fell asleep.\n\u6709\u610f\u8bc6\u4e3a\u4e0a\uff0c\u65e0\u610f\u8bc6\u4e3a\u4e0b\u3002\nHe fell ill.\nShe dropped dead.\n\u5065\u5eb7\u548c\u751f\u547d\u4e3a\u4e0a\uff0c\u75be\u75c5\u548c\u6b7b\u4ea1\u4e3a\u4e0b\u3002\nI have controlled over her.\nHe fell from power.\n\u63a7\u5236\u6216\u5f3a\u8feb\u4e3a\u4e0a\uff0c\u88ab\u63a7\u5236\u6216\u88ab\u5f3a\u8feb\u4e3a\u4e0b\u3002\nMy income rose last year.\nThe number of errors is low.\n\u66f4\u591a\u4e3a\u4e0a\uff0c\u66f4\u5c11\u4e3a\u4e0b\u3002\n</code></pre></p> <p>\u4e54\u59c6\u65af\u57fa\uff1a</p> <p>\u7ed3\u6784\u4e3b\u4e49\u8bed\u8a00\u5b66\u5230\u8f6c\u6362\u751f\u6210\u8bed\u6cd5\u3002</p> <p></p> <ol> <li>\u8bed\u8a00\u80fd\u529b/\u8bed\u8a00\u8868\u73b0\uff1a\u8bed\u8a00\u80fd\u529b\u662f\u4eba\u5148\u5929\u5177\u6709\u7684\u72ec\u7acb\u80fd\u529b\uff0c\u5b83\u901a\u8fc7\u5b66\u4e60\u67d0\u79cd\u6216\u67d0\u4e9b\u7279\u5b9a\u8bed\u8a00\u5c55\u73b0\u51fa\u6765\u3002</li> <li>\u6df1\u5c42\u7ed3\u6784/\u8868\u5c42\u7ed3\u6784\uff1a\u6df1\u5c42\u7ed3\u6784\u901a\u8fc7\u8f6c\u6362\u89c4\u5219\u751f\u6210\u8868\u5c42\u7ed3\u6784\u3002</li> </ol> <p>\u8bed\u8a00\u5b66\u7684\u5de5\u4f5c\u4e0d\u5e94\u5f53\u662f\u641c\u96c6\u8bed\u8a00\u7d20\u6750\u52a0\u4ee5\u5f52\u7eb3\uff0c\u800c\u662f\u8981\u89e3\u91ca\u8bed\u8a00\u7684\u521b\u9020\u6027\u3002</p> <p>CNF <pre><code>S -&gt; AB\nA -&gt; AA | a\nB -&gt; b | e\n</code></pre></p> <p>\u8f6c\u6362\u751f\u6210\u8bed\u6cd5\u89c4\u5219 \\(\\Sigma = \\{NP, Vp, T, N, Npsing, NPpl, Aux, V, C, M, En, S, Past, Af\\}\\) <pre><code>S -&gt; NP + VP\nVP -&gt; Verb + NP\nNP -&gt; Det + N\nVerb -&gt; Aux + V\nDet -&gt; the, a...\nN -&gt; man, ball...\nAux -&gt; will, can...\nV -&gt; hit, see...\n</code></pre></p> <p>\u4f20\u7edf\uff08\u6210\u5206\uff09\u8bed\u6cd5\u89c4\u5219 <pre><code>1. \u4e3b + \u8c13\n2. \u4e3b + \u8c13 + \u5bbe\n3. \u4e3b + \u7cfb + \u8868\n4. \u4e3b + \u8c13 + \u5bbe + \u53cc\u5bbe\n5. \u4e3b + \u8c13 + \u5bbe + \u5bbe\u8865\n6. \u4e3b + \u8c13 + \u5e76\u5217\u5bbe\n\n...\n</code></pre></p> <p>\u300a\u53e5\u6cd5\u7ed3\u6784\u300b\uff081957\uff09\u6838\u5fc3\u53e5\u548c\u8f6c\u6362\u6982\u5ff5\u3002</p> <p></p> <p>\u751f\u6210\u6b65\u9aa4 1. \u751f\u6210\u6838\u5fc3\u53e5\u3002     <pre><code>S -&gt; X1 | X2 | ... Xn\n</code></pre></p> <ol> <li> <p>\u8f6c\u6362\u7ed3\u6784\uff08\u66ff\u6362\u3001\u7701\u7565\u3001\u6dfb\u52a0\u3001\u6362\u4f4d\uff09\u3002     <pre><code>X1 -&gt; Y1Z1 | ...\n...\n</code></pre></p> </li> <li> <p>\u6dfb\u52a0\u5f62\u6001\u97f3\u4f4d\u89c4\u5219\u3002     <pre><code>Z1 -&gt; W1\n...\nZn -&gt; Wn\n</code></pre></p> </li> </ol> <p>\u8f6c\u6362\uff1a\u6574\u4e2a\u8f6c\u6362\u751f\u6210\u8fc7\u7a0b\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u6b65\u9aa4</p> <ol> <li>\u901a\u8fc7\u77ed\u8bed\u7ed3\u6784\u6539\u5199\u89c4\u5219\uff0c\u5f97\u5230\u8868\u8fbe\u5f0f\\(R_c\\)\uff0c\\(R_c\\)\u7531\u975e\u7ec8\u7aef\u8bed\u7c7b\u7b26\u53f7\u7ec4\u6210\uff0c\u662f\u6df1\u5c42\u7ed3\u6784\u3002</li> <li>\u901a\u8fc7\u8bcd\u6c47\u63d2\u5165\u89c4\u5219\u5f97\u5230\u8868\u8fbe\u5f0f\\(R_1\\)\uff0c\\(R_1\\)\u7531\u7ec8\u7aef\u8bed\u7c7b\u7b26\u53f7\u7ec4\u6210\uff0c\u4f46\u4ecd\u662f\u6df1\u5c42\u7ed3\u6784\u3002</li> <li>\u901a\u8fc7\u8f6c\u6362\u89c4\u5219\u5f97\u5230\u8868\u8fbe\u5f0f\\(R_1\\)\uff0c\\(R_1\\)\u5f53\u7136\u8fd8\u662f\u7531\u975e\u7ec8\u7aef\u8bed\u7c7b\u7b26\u53f7\u7ec4\u6210\uff0c\u4f46\u5b83\u662f\u8868\u5c42\u7ed3\u6784\u3002 </li> </ol> <p>\u6df1\u5c42\u7ed3\u6784\u548c\u8868\u5c42\u7ed3\u6784</p> <p>\u4e54\u59c6\u65af\u57fa\u8bed\u6cd5\u4f53\u7cfb\u4e2d\uff0c\u6307\u53e5\u5b50\u751f\u6210\u8fc7\u7a0b\u4e2d\u7279\u5b9a\u9636\u6bb5\u6240\u91c7\u7528\u7684\u4e00\u79cd\u7279\u6b8a\u64cd\u4f5c\u624b\u6bb5\u6216\u89c4\u5219\u3002\u6df1\u5c42\u7ed3\u6784\u662f\u5b83\u7684\u8f93\u5165\uff0c\u8868\u5c42\u7ed3\u6784\u662f\u5b83\u7684\u8f93\u51fa\u3002</p> <p>\u6709\u7684\u53e5\u5b50\u8868\u5c42\u7ed3\u6784\u4e0d\u540c\uff0c\u6df1\u5c42\u7ed3\u6784\u76f8\u4f3c\u3002\u901a\u8fc7\u8f6c\u6362\u64cd\u4f5c\u53ef\u4ee5\u76f8\u4e92\u8f6c\u5316\u3002 </p> <p>\u6709\u7684\u53e5\u5b50\u6df1\u5c42\u7ed3\u6784\u4e0d\u540c\uff0c\u8868\u5c42\u7ed3\u6784\u76f8\u4f3c\u3002\u901a\u8fc7\u8f6c\u6362\u64cd\u4f5c\u4e0d\u80fd\u76f8\u4e92\u8f6c\u5316\u3002 </p> <p>\u4e3a\u4ec0\u4e48\u4eca\u5929\u6211\u4eec\u8981\u8c08\u8bed\u8a00\u54f2\u5b66\uff1f</p> <p>\u9648\u5609\u6620\u8001\u5e08\uff1a\u79d1\u5b66\u662f\u4e00\u4e2a\u4e25\u5bc6\u7684\u6574\u6d01\u7684\u4f53\u7cfb\uff0c\u539f\u56e0\u662f\u5b83\u628a\u6240\u6709\u6df7\u6c8c\u7684\u65e0\u6cd5\u89e3\u51b3\u7684\u95ee\u9898\u629b\u5728\u4e86\u8fd9\u4e2a\u4f53\u7cfb\u4e4b\u5916\u3002[\u300a\u8d70\u51fa\u552f\u4e00\u771f\u7406\u89c2\u300b\uff0c2020]</p> <p>\u6240\u4ee5\u54f2\u5b66\u7684\u95ee\u9898\u662f\u7814\u7a76\u88ab\u79d1\u5b66\u6254\u51fa\u53bb\u7684\u6df7\u6c8c\u3002</p> <p>\u8bed\u8a00\u54f2\u5b66\u5c31\u50cf\u201c\u5165\u4fb5\u7684\u5b9e\u5728\u754c\u201d\uff0c\u201c\u8fb9\u754c\u7684\u6d4b\u8bd5\u70b9\u201d\u3002</p>"},{"location":"Ling/pol_zh/#recommended-reading","title":"Recommended Reading","text":"<p>\u300a\u8bed\u8a00\u54f2\u5b66\u300b\u9648\u5609\u6620</p> <p>\u300a\u666e\u901a\u8bed\u8a00\u5b66\u300b\u7d22\u7eea\u5c14</p> <p>\u300a\u903b\u8f91\u54f2\u5b66\u8bba\u300b\u7ef4\u7279\u6839\u65af\u5766</p> <p>\u300a\u54f2\u5b66\u7814\u7a76\u300b\u7ef4\u7279\u6839\u65af\u5766</p> <p>\u300a\u6211\u4eec\u8d56\u4ee5\u751f\u5b58\u7684\u9690\u55bb\u300b\u4e54\u6cbb\u00b7\u83b1\u8003\u592b</p> <p>\u300a\u5fc3\u667a\u3001\u8bed\u8a00\u548c\u673a\u5668\u300b\u5f90\u82f1\u747e</p>"},{"location":"Ling/pol_zh/#_1","title":"\u8ba8\u8bba","text":"<p>\u662f\u5426\u6240\u6709\u6ca1\u6709\u7528\u8bed\u8a00\u8868\u8fbe\u7684\u77e5\u8bc6\uff0c\u90fd\u53ef\u4ee5\u88ab\u7528\u8bed\u8a00\u8868\u8fbe\uff1f\uff08not NP or NP-hard\uff09</p> <p>\u53ea\u5b66\u4e60\u8bed\u8a00\u662f\u5426\u80fd\u6a21\u62df\u4eba\u7684\u667a\u80fd\u6c34\u5e73\uff1f</p> <p>\u6a21\u578b\u662f\u5426\u9700\u8981\u5e94\u5bf9\u6240\u6709\u7684\u5f02\u5e38\u60c5\u51b5/\u673a\u5668\u8bed\u8a00\u7684\u76ee\u6807\u672c\u8eab\u8981\u4e0e\u4eba\u7c7b\u8bed\u8a00\u6709\u6240\u533a\u522b</p>"},{"location":"Ling/French/","title":"French","text":"<p>\u4e3b\u8981\u53ef\u80fd\u5199\u4e00\u4e9b\u8bed\u6cd5\uff0c\u8bcd\u6cd5\u548c\u53e5\u6cd5\u7b49\u3002</p> <p>\u5355\u8bcd\u8bb0\u5fc6\u548c\u4e60\u60ef\u7528\u8bed\u4e0d\u5728\u672c\u5e16\u7684\u8bb0\u5f55\u8303\u56f4\u4e4b\u5185\u3002</p>"},{"location":"Ling/French/#references","title":"References","text":"<ul> <li>French grammar</li> </ul>"},{"location":"Ling/French/delf/","title":"DELF B2 \u5907\u8003","text":""},{"location":"Ling/French/delf/#_1","title":"\u6837\u5377\u8bd5\u9898","text":""},{"location":"Ling/French/delf/#comprehension-des-ecrits","title":"Compr\u00e9hension des \u00e9crits","text":""},{"location":"Ling/French/delf/#comprehension-de-loral","title":"Compr\u00e9hension de l'oral","text":""},{"location":"Ling/French/delf/#production-ecrite","title":"Production \u00e9crite","text":""},{"location":"Ling/French/delf/#producion-orale","title":"Producion orale","text":""},{"location":"Ling/French/tense/","title":"French Tense summarization","text":""},{"location":"Ling/French/tense/#overview","title":"Overview\uff1a\u8bed\u6001\u548c\u65f6\u6001","text":"<p>\u52a8\u8bcd\u7684\u53d8\u4f4d\u6709\u4e24\u79cd\u5c5e\u6027\uff1a\u8bed\u6001\u548c\u65f6\u6001\u3002\u8bed\u6001\u5bf9\u5e94\u4e00\u4e2a\u52a8\u4f5c\u7684\u7edd\u5bf9\u8fdb\u884c\u7a0b\u5ea6\u5c5e\u6027\uff0c\u800c\u65f6\u6001\u5bf9\u5e94\u52a8\u4f5c\u7684\u76f8\u5bf9\u53d1\u751f\u65f6\u95f4\u3002</p> <p>\u6211\u627e\u5230\u4e86\u4e00\u4e2a\u5173\u4e8e\u8bed\u6001\u6bd4\u8f83\u597d\u7684\u793a\u610f\u56fe\uff0c\u6a2a\u5411\u8868\u793a\u52a8\u8bcd\u7684\u5b8c\u6210\u7a0b\u5ea6\uff0c\u7eb5\u5411\u8868\u793a\u52a8\u8bcd\u672c\u8eab\u7684\u6301\u7eed\u65f6\u957f\uff0c\u4e8e\u662f\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u53ef\u4ee5\u5927\u81f4\u5bf9\u5e94\u77ac\u6001\u52a8\u8bcd\u3001\u6301\u7eed\u52a8\u8bcd\u3001\u5c06\u8981\u53bb\u505a\u3001\u5df2\u7ecf\u5b8c\u6210\u3002 <pre><code>          \u77ac\u6001\n           /\\\n          /  \\\n         /\u975e\u5e38\u6001\\\n         -------\n\u4e0d\u5b9a\u6001  /         \\  \u5b8c\u6210\u6001\n       ------------\n           \u5e38\u6001\n</code></pre> \u800c\u65f6\u6001\u8868\u793a\u52a8\u4f5c\u53d1\u751f\u7684\u65f6\u95f4\u987a\u5e8f\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u8ff0\u4e09\u89d2\u5957\u5165\u8fc7\u53bb\u3001\u73b0\u5728\u3001\u5c06\u6765\u8fd9\u4e09\u4e2a\u76f8\u5bf9\u65f6\u95f4\uff0c\u7ec4\u5408\u5f97\u5230\u5bf9\u5e94\u65f6\u6001\u4e0b\u7684\u591a\u4e2a\u8bed\u6001\u3002</p> <p>\u6cd5\u8bed\u7684 3 \u79cd\u65f6\u6001\u6709\uff1a</p> <ul> <li>\u8fc7\u53bb\u65f6 (le pass\u00e9): \u8fc7\u53bb\u65f6\u95f4\u70b9\u53d1\u751f\u7684</li> <li>\u73b0\u5728\u65f6 (le pr\u00e9sent): \u73b0\u5728\u53d1\u751f\u7684</li> <li>\u5c06\u6765\u65f6 (le future): \u5c06\u6765\u65f6\u95f4\u70b9\u53d1\u751f\u7684\uff0c\u672a\u53d1\u751f\u7684</li> </ul> <p>\u540c\u65f6\u8fd8\u6709 6 \u79cd\u8bed\u6001\uff1a</p> <ul> <li>\u4e0d\u5b9a\u5f0f (l'infinitif): \u672a\u7ecf\u53d8\u5316\u7684\u52a8\u8bcd\u5c5e\u4e8e\u4e0d\u5b9a\u5f0f\uff0c\u4f4d\u4e8e\u68af\u5f62\u5de6\u8fb9\u3002</li> <li>\u76f4\u9648\u5f0f (l'indicatif): \u8868\u8fbe\u5ba2\u89c2\u5b58\u5728\u7684\u4e8b\u5b9e\uff0c\u4f4d\u4e8e\u68af\u5f62\u4e2d\u4e0b\u3002</li> <li>\u547d\u4ee4\u5f0f (l'imp\u00e9ratif): \u7948\u4f7f\u53e5\u3002\u53d8\u4f4d\u6bd4\u8f83\u5c40\u9650\u7684\u4e00\u79cd\u8bed\u6001\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e5f\u5728\u68af\u5f62\u4e2d\u95f4\uff0c\u8868\u8fbe\u4e00\u79cd\u5e0c\u671b\u52a8\u4f5c\u53d1\u751f\u7684\u613f\u671b\uff0c\u4f46\u662f\u5e76\u4e0d\u5f3a\u8c03\u8be5\u52a8\u4f5c\u7684\u65f6\u95f4\u70b9\u3002</li> <li>\u6761\u4ef6\u5f0f (le conditionnel): \u7528\u6765\u8868\u8fbe\u4e0e\u73b0\u5b9e\u76f8\u53cd\u3001\u731c\u6d4b\u6216\u5a49\u8f6c\u8bed\u6c14\u7684\u4e00\u79cd\u8bed\u6001\uff0c\u5f3a\u8c03\u6309\u7167\u5ba2\u89c2\u5e38\u7406\u5e94\u8be5\u53d1\u751f\u3002\u5bf9\u5e94\u68af\u5f62\u53f3\u4fa7\u3002</li> <li>\u865a\u62df\u5f0f (le subjonctif): \u8868\u8fbe\u81ea\u5df1\u7684\u5fc3\u60c5\u548c\u611f\u53d7\uff08\u613f\u671b\u3001\u5931\u671b\u3001\u731c\u6d4b\u3001\u60c5\u7eea\uff09\uff0c\u5f3a\u8c03\u6839\u636e\u4e3b\u89c2\u610f\u613f\u5e0c\u671b\u53d1\u751f\u3002\u5bf9\u5e94\u68af\u5f62\u5de6\u4fa7\u3002</li> <li>\u5206\u8bcd\u5f0f (le participe): \u52a8\u8bcd\u7684\u5206\u8bcd\u5f0f\uff0c\u5206\u4e3a\u73b0\u5728\u5206\u8bcd\u548c\u8fc7\u53bb\u5206\u8bcd\u4e24\u79cd\uff0c\u5206\u522b\u5728\u68af\u5f62\u5de6\u53f3\u4fa7\u3002</li> </ul> <p>\u4e8e\u662f\u53ef\u4ee5\u7ec4\u5408\u4ea7\u751f\u591a\u4e2a\u65f6\u6001\u4e0b\u7684\u591a\u4e2a\u8bed\u6001\uff0c\u5b83\u4eec\u4e00\u822c\u5408\u79f0\u53eb\u65f6\u6001\uff0c\u6709\u70b9\u6b67\u4e49\uff0c\u4e0d\u8fc7\u5c31\u8fd9\u6837\u53eb\u597d\u4e86\u3002\u4e0b\u9762\u4e00\u4e00\u4ecb\u7ecd\u3002</p>"},{"location":"Ling/French/tense/#_1","title":"\u5177\u4f53\u65f6\u6001\u4ecb\u7ecd","text":"<p>\u9996\u5148\u63d0\u4f9b\u4e00\u4e2a overview\u3002</p> <p></p> <p>Fig 1. \u4ec5\u4e0e\u5ba2\u89c2\u73b0\u5b9e\u6709\u5173\u7684\u51e0\u4e2a\u65f6\u6001\u7684\u65f6\u95f4\u8f74</p> <p>\u76f4\u9648\u5f0f (l'indicatif)\u4e0b\u7684\u65f6\u6001</p> \u65f6\u6001 \u5b9a\u4e49 \u5927\u81f4\u6784\u6210\u89c4\u5219 \u4e00\u7c7b\u52a8\u8bcd\u6784\u6210 \u6784\u6210 \u7b2c\u4e09\u7ec4\u6784\u6210 \u76f4\u9648\u5f0f\u73b0\u5728\u65f6l'indicatif pr\u00e9sent \u53d1\u751f\u5728\u73b0\u5728\u7684\u52a8\u4f5c\u6216\u5b58\u5728\u7684\u72b6\u6001\u3002 \u52a8\u8bcd\u8bcd\u6839 - \u8bcd\u5c3e + \u4e0d\u540c\u4eba\u79f0\u4e3b\u8bed\u5bf9\u5e94\u7684\u8bcd\u5c3e j'aime,tu aimes,il/elle/on aime,nous aimons,vous aimez,ils/elle aiment je choisis,tu choisis,il/elle/on choisit,nous choisissons,vous choisissez,ils/elles choisissent je dors,tu dors,il/elle/on dort,nous dormons,vous dormez,ils/elles dorment \u76f4\u9648\u5f0f\u590d\u5408\u8fc7\u53bb\u65f6le pass\u00e9 compos\u00e9 \u8868\u793a\u4ece\u73b0\u5728\u89d2\u5ea6\u770b\u5df2\u7ecf\u53d1\u751f\u7684\u52a8\u4f5c\u3002\u8868\u8fbe\u7684\u662f\u201c\u67d0\u4e8b\u5df2\u7ecf\u5b8c\u6210\u201d\u7684\u6982\u5ff5\u3002 \u00eatre \u7684\u76f4\u9648\u5f0f\u73b0\u5728\u65f6 + \u52a8\u8bcd\u8fc7\u53bb\u5206\u8bcd\uff08\u5c11\u90e8\u5206\u8868\u793a\u8d8b\u5411\u6027\u3001\u4f4d\u7f6e\u6216\u72b6\u6001\u53d8\u5316\u7684\u4e0d\u53ca\u7269\u52a8\u8bcd\u3001\u6240\u6709\u4ee3\u8bcd\u5f0f\u52a8\u8bcd\uff0csee Fig 2\uff09 \u6216avoir \u7684\u76f4\u9648\u5f0f\u73b0\u5728\u65f6 + \u52a8\u8bcd\u8fc7\u53bb\u5206\u8bcd\uff08\u5176\u5b83\uff09 .. .. .. \u76f4\u9648\u5f0f\u672a\u5b8c\u6210\u8fc7\u53bb\u65f6l'imparfait \u8868\u793a\u8fc7\u53bb\u53d1\u751f\u7684\u52a8\u4f5c\uff0c\u53ea\u662f\u4e8b\u60c5\u7684\u5b8c\u6210\u72b6\u6001\u662f\u4e0d\u660e\u786e\u7684\uff0c \u76f4\u9648\u5f0f\u6108\u8fc7\u53bb\u65f6le plus-que parfait \u76f4\u9648\u5f0f\u7b80\u5355\u8fc7\u53bb\u65f6le pass\u00e9 simple \u76f4\u9648\u5f0f\u5148\u8fc7\u53bb\u65f6le pass\u00e9 ant\u00e9rieur \u76f4\u9648\u5f0f\u6700\u8fd1\u8fc7\u53bb\u65f6le pass\u00e9 proche \u76f4\u9648\u5f0f\u7b80\u5355\u5c06\u6765\u65f6le furture simple \u76f4\u9648\u5f0f\u5148\u5c06\u6765\u65f6le future ant\u00e9rieur \u76f4\u9648\u5f0f\u6700\u8fd1\u5c06\u6765\u65f6le future proche \u76f4\u9648\u5f0f\u8fc7\u53bb\u5c06\u6765\u65f6le futur dans le pass\u00e9 <p>Fig 2. le pass\u00e9 compos\u00e9 \u4e2d\u4f7f\u7528 \u00eatre \u52a9\u52a8\u8bcd\u7684\u52a8\u8bcd</p> <p></p> <p>\u547d\u4ee4\u5f0f (l'imp\u00e9ratif)\u4e0b\u7684\u65f6\u6001</p> \u65f6\u6001 \u5b9a\u4e49 \u5927\u81f4\u6784\u6210\u89c4\u5219 \u4e00\u7c7b\u52a8\u8bcd\u6784\u6210 \u6784\u6210 \u7b2c\u4e09\u7ec4\u6784\u6210 \u547d\u4ee4\u5f0f\u73b0\u5728\u65f6l'imp\u00e9ratif pr\u00e9sent \u547d\u4ee4\u5f0f\u73b0\u5728\u65f6l'imp\u00e9ratif pr\u00e9sent <p>\u6761\u4ef6\u5f0f (le conditionnel)\u4e0b\u7684\u65f6\u6001</p> \u65f6\u6001 \u5b9a\u4e49 \u5927\u81f4\u6784\u6210\u89c4\u5219 \u4e00\u7c7b\u52a8\u8bcd\u6784\u6210 \u6784\u6210 \u7b2c\u4e09\u7ec4\u6784\u6210 \u547d\u4ee4\u5f0f\u73b0\u5728\u65f6l'imp\u00e9ratif pr\u00e9sent \u547d\u4ee4\u5f0f\u73b0\u5728\u65f6l'imp\u00e9ratif pr\u00e9sent <p>\u865a\u62df\u5f0f (le subjonctif)\u4e0b\u7684\u65f6\u6001</p> \u65f6\u6001 \u5b9a\u4e49 \u5927\u81f4\u6784\u6210\u89c4\u5219 \u4e00\u7c7b\u52a8\u8bcd\u6784\u6210 \u6784\u6210 \u7b2c\u4e09\u7ec4\u6784\u6210 \u547d\u4ee4\u5f0f\u73b0\u5728\u65f6l'imp\u00e9ratif pr\u00e9sent \u547d\u4ee4\u5f0f\u73b0\u5728\u65f6l'imp\u00e9ratif pr\u00e9sent <p>\u5206\u8bcd\u5f0f (le participe)\u4e0b\u7684\u65f6\u6001</p> \u65f6\u6001 \u5b9a\u4e49 \u5927\u81f4\u6784\u6210\u89c4\u5219 \u4e00\u7c7b\u52a8\u8bcd\u6784\u6210 \u6784\u6210 \u7b2c\u4e09\u7ec4\u6784\u6210 \u547d\u4ee4\u5f0f\u73b0\u5728\u65f6l'imp\u00e9ratif pr\u00e9sent \u547d\u4ee4\u5f0f\u73b0\u5728\u65f6l'imp\u00e9ratif pr\u00e9sent"},{"location":"Ling/French/tense/#references","title":"References","text":"<ul> <li>\u82f1\u8bed\u8bed\u6cd5\u4e2d\uff0c\u65f6\u6001\u7684\u57fa\u672c\u903b\u8f91\u662f\u4ec0\u4e48\uff1f-\u77e5\u4e4e</li> <li>\u6cd5\u8bed\u8bed\u6cd5\u77e5\u8bc6 | \u90a3\u4e9b\u8ba9\u4f60\u6293\u72c2\u53c8\u4e0d\u5f97\u4e0d\u9762\u5bf9\u7684\u6cd5\u8bed\u8bed\u5f0f\u4e0e\u65f6\u6001\u603b\u7ed3-\u77e5\u4e4e</li> </ul>"},{"location":"Ling/Morphology/","title":"Morphology","text":""},{"location":"Ling/Morphology/#outline","title":"outline","text":""},{"location":"Ling/Pragmatics/ca_da/","title":"Research Methods: Conversation Analysis and Discourse Analysis","text":""},{"location":"Ling/Pragmatics/ca_da/#discourse-analysis","title":"Discourse Analysis","text":"<p>Some discourse analysis are taught in linguistic departments (Johnstone, 2018)</p> <p>Foucault (1972, 1980) use 'discourse' to refer to the ways of talking and thinking constitute ideologies (set of interrelated ideas) and serve  to circulate power in society, and in the sense involved patterns of belief and habitual actions as well as patterns of language. </p> <p>Johnstone, Barbara. 2018. Discourse Analysis (3rd ed.). UK: Wiley-Blackwell.</p>"},{"location":"Ling/Pragmatics/ca_da/#conversational-analysis","title":"Conversational Analysis","text":"<p>Definition</p> <p>Conversation analysis is the study of interactional activities. The object being studied involves at least two persons.</p> <p>Unit</p> <p>conversation &gt; sequence &gt; adjacency pair &gt; turn</p> <p>types of adjacency pairs</p> <ul> <li>question - answer</li> <li>greeting - greeting</li> <li>offer - acceptance</li> <li>request - acceptance</li> <li>complaint - excuse</li> </ul> <p>turn-taking feature</p> <p>One involved in a conversation is supposed to give floor to the other party (parties) at a proper point of time. to keep the balance between the time one spends talking and the time the others spend talking. </p> <p>pre-sequence</p> <ul> <li>courtesy phrases<ul> <li>Summon-answer (Higgins: Mother? Mother: Yes?)</li> <li>Pre-announcement (A: Did you hear the good news? B: What?)</li> <li>Pre-invitation (A: Will you be free this weekend?)</li> <li>Pre-request (A: What are you doing now? B: Why? A: Could you help me with my paper?)</li> <li>Pre-closing (A: Oops, it\u2019s already midnight,\u2026 B: Do you want to go home?)</li> </ul> </li> <li>physical devices: patting, raising hands, coughing</li> </ul> <p>insertion sequence</p> <pre><code>A: Are you coming tonight?\nB: Can I bring a guest?\nA: Male or female?\nB: What difference does that make?\nA: An issue of balance.\nB: Female.\nA: Sure.\nB: Yeah, I\u2019ll be there.\n</code></pre> <p>preference organization</p> first part second part preferred dispreferred assessment agree disagree invitation accept refuse offer accept decline proposal agree disagree request acccept refuse"},{"location":"Ling/Pragmatics/intro/","title":"Introduction and Concepts","text":""},{"location":"Ling/Pragmatics/intro/#what-is-pragmatics","title":"What is Pragmatics","text":"<ul> <li>Briefly: Meaning and context. The study of language use.</li> <li>Specifically: The study of how contextual factors interact with linguistics meaning in the interpretation of language.</li> <li>Context is the soul of pragmatics.</li> </ul>"},{"location":"Ling/Pragmatics/intro/#how-pragmatics-differ-from-other-linguistics-branches","title":"How pragmatics differ from other linguistics branches?","text":"<p>Charles W. Morris (1901-1979) American semiotician and philosopher. supervised by Charles S. Pierce. In his Foundations of the Theory of Signs (1938), Morris proposed that semiotics should have three divisions:</p> <ul> <li>syntax: Structural rules. Relation of signs (/words) to each other. The way words combine to form phrases and sentences.</li> <li>semantics: Meaning in Language itself. Signs (/words) and things which they denote. Literal, propositional / truth-conditional meaning.</li> <li>pragmatics: Meaning in context. Signs (/words) and interpreters. Implicit, context-related, non-literal, non-truth-conditional meaning.</li> </ul> <pre><code>syntax  -------------&gt; semantics -------------&gt; pragmatics\n              \u2b06\ufe0f\u00a0                        \u2b06\ufe0f\u00a0           \n                        decoding              use in context\n</code></pre> <p>During the course of everyday communication, human beings as social animals convey more than the literal, propositional meaning (i.e. we don\u2019t always mean what we say literally).</p> <p>There is more to the literal meaning of a sentence when we consider the sentence in relation to the context, i.e., the situation of uttering the sentence.</p> <p>Sentence that cannot be considered in isolation \u2192 utterance</p> <ul> <li>sentence \u53e5\u5b50</li> <li>utterance \u8bdd\u8bed</li> </ul> <p>Pragmatics looks beyond truth-conditional meanings, and explores non-literal, implicit, context-related meanings.</p> <p>Thus both semantics and pragmatics deal with meaning, yet there is a division of labour: semantics deals with meaning in context. </p>"},{"location":"Ling/Pragmatics/intro/#levels","title":"Levels","text":"<ul> <li>lexical pragmatics</li> <li>intercultural pragmatics</li> <li>historical pragmatics</li> <li>socio-pragmatics</li> </ul>"},{"location":"Ling/Pragmatics/intro/#context-deixis-and-reference","title":"Context, Deixis and Reference \u8bed\u5883\uff0c\u6307\u793a\u4e0e\u6307\u79f0","text":""},{"location":"Ling/Pragmatics/intro/#deixis","title":"Deixis","text":"<p>Definition</p> <ul> <li>Deixis means pointing via language. The phenomenon of deixis constitutes the singlemost obvious way to show how (situational) context determines meaning.</li> <li>Any linguistic form used to accomplish \u2018pointing\u2019 is called a deictic expression, e.g., you, I s/he, this, that, here, there</li> <li>Among the first words acquired by children</li> <li>Used in face-to-face spoken interaction</li> </ul> <p>Deixis and context: Deictic does not have concrete meanings. Deictic words depend on context for meaning.</p> <ul> <li>situational context: every non-linguistic factor that affects the interpretation of words, phrases, and utterances<ul> <li>who is speaking</li> <li>the time of speaking</li> <li>the location of speaking</li> <li>gesture or body language of the speaker</li> <li>topic of the discourse</li> </ul> </li> <li> <p>linguistic context: refers to the language surrounding the expression in question</p> <pre><code>The boy said he has five girlfriends.\n</code></pre> <p>Both he and the boy refer to the boy. </p> <p>He refers to the boy anaphorically, the boy refer to the boy deictically.</p> </li> </ul> <p>Types of deixis</p> <ul> <li>proximal: this, here, now</li> <li>distal: that, there, then</li> </ul> <p>defined in relation to the deictic center (person, time, place, discourse, social)</p> <ul> <li>gestural: terms used in gestural deictic way, be interpreted with audio-visual-tactile</li> <li> <p>symbolic: symbolic usages of deictic terms</p> </li> <li> <p>personal deixis</p> <ul> <li>any expression used to point to a person</li> <li>basic three-part division: speaker, addressee, others. you and I can exchange</li> <li>inclusion/exclusion distinction: \u2018we\u2019 including addressee and speaker. Some language (Fijian) grammaticalize this distinction</li> </ul> </li> <li>spatial/space/place deixis<ul> <li>words used to point to a location. e.g., here, there</li> <li>locations can be specified relative to other objects or a fixed reference point / the location of participants</li> <li>pure place-deictic words: here, there, this, that</li> <li>some languages have demonstratives with three-or-four-way distinctions/proximal-distal dimension: Turkish, Tlingit, Japanese</li> <li>some verbs of motion: come/go</li> <li>deictic projection: location from the speaker\u2019s  perspective can be fixed mentally as well as physically. (psychological distance)</li> </ul> </li> <li>time/temporal deixis<ul> <li>expressions used to point to a time (e.g. now, then, yesterday, today)</li> <li>deictic simultaneity: coding time (CT) = receiving time (RT)</li> </ul> </li> <li>discourse/text deixis<ul> <li>use of expressions referring to a part of the discourse</li> <li>words and phrases that indicate the relationship between an utterance and the prior discourse</li> </ul> </li> <li>social deixis<ul> <li>honorifics \u656c\u8bed</li> <li>absolute social deixis<ul> <li>authorized speakers: only certain types of speakers may use particular words/morphemes.</li> <li>authorized recipients: only certain types of addressees may be addressed with certain words/morphemes. e.g., Mr. President</li> </ul> </li> </ul> </li> </ul> <p>The deictic cycle. Harman, 1990.</p> <p></p>"},{"location":"Ling/Pragmatics/intro/#reference","title":"Reference","text":"<p>Definition: The act of using a word/phrase to pick out something in the world. </p> <p>Types of referring expressions (\u6307\u793a\u8bed)</p> <ul> <li>proper nouns (Mike, Mary)</li> <li>definite NPs (the linguist, the writer)</li> <li>indefinite NPs (a.. )</li> <li>pronouns (he, she)</li> </ul> <p>Choice of referring expressions: based on the speaker\u2019s assumption about what the listener knows.</p> <ul> <li>Shared visual contexts: Look at her/this!</li> <li>Shared memory: Remember that weird guy in the first semester?</li> <li>Shared world knowledge: We need to find a cop (entity is unknown but can be assumed to exist)</li> </ul> <p>Conditions for successful reference: must be collaborative</p> <ul> <li>The speaker has the intention to refer</li> <li>The addressee recognizes the intention and then identifies something.</li> </ul>"},{"location":"Ling/Pragmatics/intro/#presupposition","title":"Presupposition","text":"<p>Differences between semantic and pragmatic presuppositions</p> <ul> <li>semantic presupposition: only within the sentence. does not consider the speaker</li> <li>pragmatic presupposition: held by the speaker. Presupposition is what is assumed to be the case prior to making an utterance.</li> </ul> <p>for pragmatic presupposition</p> <ul> <li>presupposition should be shared by all participants</li> <li>Robery Syalnaker: people who communicate have mutula knowledge or a common ground (belief or a background set of assumptions)</li> </ul> <p>cancellation of presuppositions</p> <p>Presuppositions are cancellable or defeasible by changing the words to alter the previous proposition.</p> <pre><code>F: \u6709\u4e9b\u4eba\u517b\u732b\u4e86\n~F: \u6709\u4e9b\u4eba\u6ca1\u517b\u732b\n</code></pre> <p>projection problem</p> <p>presupposition may not survive when simple sentences are projected into complex ones.</p> <pre><code>Mary didnt manage to find a job.\nMary didnt manage to find a job. In fact, she didnt even try.\n</code></pre> <pre><code>Mike didnt date Mary again.\nMike didnt date Mary gain, if indeed he ever did.\n</code></pre> <p>presupposition triggers (\u89e6\u53d1\u8bed): how to determine speakers\u2019 presupposition in the course of verbal communication? </p> <ul> <li> <p>Definite descriptions \u6709\u5b9a\u63cf\u5199: It gives definite descriptions associated with presuppositions of existence. e.g. the/this/that + NP, 3rd person pronoun, possessive + N (my, your, his/her).</p> <pre><code>Sue's neighbour's daughter got married last week.\n=&gt; Sue has a neighbour.\n=&gt; The neighbour has a daughter.\n</code></pre> </li> <li> <p>Factive verbs \u5b9e\u60c5\u52a8\u8bcd: sth has happened. e.g. regret, realize, know, be aware that, be sorry that, be glad that, be proud that, be pleased that, be odd, be strange, be disappointed that.</p> <pre><code>John regretted having started the project.\n=&gt; He started the project.\n</code></pre> </li> <li> <p>Implicative verbs \u542b\u84c4\u52a8\u8bcd: e.g. manage, forget, happen, avoid\u2026</p> <pre><code>I forgot to bring the book.\n=&gt; I ought to have brought the book.\n\nWe happened to meet Bob in the cinema.\n=&gt; We didnt expect to meet Bob in the cinema.\n</code></pre> </li> <li> <p>\u201cChange of state\u201d verbs \u8868\u72b6\u6001\u6539\u53d8\u7684\u52a8\u8bcd: e.g. finish, stop, begin, start, carry on, continue, cease, leave, arrive, enter, come, go, turn, transform..</p> <pre><code>He stopped / didnt stop smoking cigars\n</code></pre> </li> <li> <p>Iteratives \u8868\u53cd\u590d\u7684\u8bcd\u8bed: words expressing repetition. e.g. repeat, back, again, too, another time, any more..</p> <pre><code>The spaceship came back to earth.\n=&gt; The spaceship used to be on earth.\n</code></pre> </li> <li> <p>Verbs of judging \u5224\u65ad\u6027\u52a8\u8bcd: accuse, charge, criticize \u603b\u611f\u89c9\u8fd9\u4e2a\u8ddf\u524d\u9762\u7684factive verb\u6709\u70b9\u50cf\uff0c\u53ef\u80fd\u662f\u524d\u9762\u90a3\u4e2a\u4e00\u822c\u662f\u52a0that\u8868that\u540e\u9762\u7684\u662fpresuppotion, \u800c\u8fd9\u4e2a\u8868\u793a\u52a8\u8bcd\u672c\u8eab\u7684\u5c5e\u6027(e.g. \u60c5\u611f\u8272\u5f69) \u4f46\u662f\u597d\u50cf\u533a\u522b\u4e5f\u4e0d\u5927</p> <pre><code>Joe accused Zeo of forgery.\n=&gt; Joe thinks forgery is bad\n</code></pre> </li> <li> <p>Temporal clauses \u65f6\u95f4\u72b6\u8bed\u4ece\u53e5: before, after, since, ..</p> <pre><code>After his father died, he stepped into a large fortune.\n=&gt; His father died.\n</code></pre> </li> <li> <p>Cleft sentence \u5207\u5206\u53e5/\u65ad\u88c2\u53e5: it is.. that/who.. = \u5f3a\u8c03\u53e5\u3002\u8fd9\u4e2a\u597d\u7275\u5f3a\u3002\u3002</p> <pre><code>What I lost is my passport\n=&gt; I lost something.\n</code></pre> </li> <li> <p>Non-restrictive attributive clauses</p> <pre><code>Jack, who visited China last year, is fond of Chinese tea.\n=&gt; Jack has been to China\n</code></pre> </li> <li> <p>Counterfactual conditionals</p> <pre><code>If I had not burnt the cake, we would be having it for tea.\n=&gt; I burnt the cake.\n</code></pre> </li> <li> <p>Questions</p> <pre><code>Does Frank speak English or French?\n=&gt; Frank speaks one of the two European languages.\n</code></pre> </li> </ul>"},{"location":"Ling/Pragmatics/intro/#conversational-implicature","title":"Conversational Implicature","text":"<p>Implicature</p> <p>Grice\u2019s theory of conversational implicature, Logic and Conversation. </p> <p>An outline of a systematic theory of language use, which can account for the way people read between the lines when understanding everyday language.</p> <p>meaning of a sentence</p> <ul> <li>what is literally said by a sentence</li> <li>a variety of inferences that may reasonably be drawn from the speaker\u2019s use of that sentence in a particular context</li> </ul> <p>Grice\u2019s new terms</p> <ul> <li>implicate: \u6307\u4ee3\u8bcd</li> <li>implicature:  covers the family of uses of \u201cwhat is implied\u201d / \u201cwhat is suggested\u201d / \u201cwhat is meant\u201d</li> </ul> <p>Grice draws a distinction</p> <ul> <li>entailment (semantically)</li> <li>implicature (pragmatically)</li> </ul> <pre><code>- Smith doesn't seem to have a girlfriend these days.\n\n- He has been paying a lot of visits to New York lately.\n\n=&gt; entailment: he visits New York recently\n=&gt; implicature: Smith may be having a girlfriend in New York.\n</code></pre> <p>features</p> <ul> <li>cancellable</li> <li>non-detachable: you cannot get rid of the implicature by substituting a synonymous expression.</li> <li>calculable: (1) what is literally said + (2) contextual information</li> </ul> <p>Grice\u2019s cooperative principle</p> <p>common purpose/common direction: Conversational partners normally recognize a common purpose or a common direction in their conversation.</p> <p>common objectives (~= joint project): At any point of a conversation, certain \u201cconversational moves\u201d are judged suitable or unsuitable for accomplishing their common objectives. </p> <ul> <li>Maxim of quality<ul> <li>Make your contribution as informative as required</li> <li>Do not make your contribution more informative than required</li> </ul> </li> <li>Maxim of quantity<ul> <li>Make your contribution one true.</li> <li>Do not say what you believe to be false</li> <li>Do not say that for which you lack adequate evidence</li> </ul> </li> <li>Maxim of relation<ul> <li>Make your contribution relevant</li> </ul> </li> <li>Maxim of manner<ul> <li>Be perspicuous</li> <li>Avoid obscurity of expression</li> <li>Avoid ambiguity</li> <li>Be brief (avoid unnecessary prolixity)</li> <li>Be orderly</li> </ul> </li> </ul> <p>How the cooperative principle is applied:</p> <ul> <li>conversational partners are being cooperative</li> <li>they are supposed to follow the four principles</li> <li>if an utterance superficially spears not to conform to any of the maxims, the listeners would look for a way of taking it so that it conforms in some way.</li> </ul> <p>How to follow the maxims:</p> <ul> <li>hedges: \u6a21\u7cca\u9650\u5236\u8bed<ul> <li>quality: as far as I know, I may be mistaken, I guess</li> <li>quantity: to cut a long story short, I wont bore you with all the details</li> <li>relation: by the way, anyway, I dont know if this is important</li> <li>manner: this may be a bit confused, Im not sure if this makes sense, I dont know if this is clear at all</li> </ul> </li> </ul> <p>How to break the maxims: </p> <p>The cooperative maxims are guidelines instead of rules. They can be creatively infringed/violated.</p> <ul> <li> <p>quantity:</p> <pre><code>Chandler: Where is the book you are reading?\nMonica: Its in the living room where there is also light and no one will kick you in the shin.\n</code></pre> </li> <li> <p>quality</p> <pre><code>Two travelers arrived at the hotel and were shown a rather dirty room.\n\u201cWhat,\u201d said one, \u201cdoes this pigsty (\u732a\u5708) cost?\u201d Promptly the owner replied, \u201cFor one pig, two dollars; for two pigs, three dollars.\u201d\n</code></pre> </li> <li> <p>relation</p> <pre><code>(The American ambassador Joseph Chroates was once mistaken for a doorman by a guest at an embassy function).\nGuest: Call me a taxi.\nJC: OK, you\u2019re a taxi.\n</code></pre> </li> <li> <p>manner</p> <pre><code>Miss X sang \u201cHome Sweet Home\u201d vs.\nMiss X produced a series of sounds which corresponded closely with the score (\u4e50\u8c31) of \u2018Home Sweet Home\u2019.\n</code></pre> </li> </ul> <p>The Horn scales &amp; scalar implicature</p> <p>When any form on a scale (most, some, always, often, must, may\u2026) is used or asserted, the negative of all forms higher on the scale is implicated.</p> <p>types of implicature</p> <pre><code>graph TD\nimplicatures --&gt; conventional/lexical\nimplicatures --&gt; conversational\nconversational --&gt; generalized\nconversational --&gt; particularized\n</code></pre>"},{"location":"Ling/Pragmatics/intro/#lexical-pragmatics","title":"Lexical Pragmatics","text":"<p>Criticism of relevance theory</p> <ul> <li>RT seems to work at the macro-level, but is rather vague at the micro-level.</li> </ul> <p>To calculate the processing cost,</p> <p>Lexical pragmatics</p> <ul> <li>at micro-level</li> <li>the lexical meaning is also relevance-determined</li> </ul> <p>pragmatic enrichment</p> <pre><code>graph TD\n\npragmatic_enrichment --&gt; pragmatic_narrowing\npragmatic_enrichment --&gt; pragmatic_broadening\npragmatic_broadening --&gt; approximation\npragmatic_broadening --&gt; metaphorical_extension\n</code></pre> <ul> <li> <p>pragmatic narrowing: superordinate \u2192 subordinate</p> <pre><code>Doctors also *drink*.\n=&gt; drink alcohol\n</code></pre> </li> <li> <p>pragmatic broadening</p> <ul> <li>approximation: e.g. the water is boiling (close to a boiling point, but not at)</li> <li>metaphorical extension: metaphor &amp; hyperbole</li> </ul> </li> </ul>"},{"location":"Ling/Pragmatics/socio/","title":"Sociopragmatics","text":"<p>\u8fd9\u5757\u5185\u5bb9\u4f3c\u4e4e\u6ca1\u6709\u8bb2\u5f88\u591a\u4e1c\u897f. \u7c98\u4e00\u70b9ppt\u539f\u8bdd</p> <p>Intercultural Pragmatics</p> <p>Intercultural Pragmatics has the potential to help establish a \u201charmonious\u201d interaction and relationship between people from different cultures.</p> <p>IP aims to study how to deal with the differences arising from cross-cultural communication and how they may affect the universality of pragmatic principles (theory of speech acts, co-</p> <p>operative principle, politeness principle, etc.)</p> <p>intercultural pragmatics\u2019 two way perspective</p> <ul> <li>IP takes the point of view that individuals from different societies or communities interact according to their own pragmatics norms, often causing conflicts of world views and misunderstanding between them</li> </ul> <p>sociopragmatics</p> <ul> <li>the study of language use in its social context.</li> <li>to study how local and social factors affect language practices</li> </ul>"},{"location":"Ling/Pragmatics/theories/","title":"Theories and Hypothesis","text":""},{"location":"Ling/Pragmatics/theories/#speech-act-theory","title":"Speech Act Theory \u8a00\u8bed\u884c\u4e3a\u7406\u8bba","text":"<p>Speech action definition: </p> <ul> <li>John Austion, 1962, How to do things with words</li> <li>analyzing the relationships between utterance and performance.</li> </ul> <p>Speech act theory:</p> <ul> <li> <p>locutionary act \u8a00\u5185\u884c\u4e3a: is the saying of it with the literal meaning</p> <pre><code>It's stuffy here.\n=&gt; There isn't enough fresh air in here\n</code></pre> </li> <li> <p>illocutionary act \u8a00\u5916\u884c\u4e3a: the speaker\u2019s intention, can be a request</p> <pre><code>It's stuffy here.\n=&gt; a request of the receiver to open the window.\n</code></pre> </li> <li> <p>perlocutionary act \u8a00\u540e\u884c\u4e3a: action or state of mind brought about by, or as a consequence of, saying something</p> <pre><code>It's stuffy here.\n=&gt; the receiver opens the window or refuses\n</code></pre> </li> </ul> <p>A speech act = locutionary act + illocutionary act + perlocutionary act</p> <p>Illocutionary force \u8bed\u529b: communicative purposes or social functions</p> <p>Classification of speech act</p> <p>Funtion-based classification system:</p> <p>by John Searle, UCB philosopher</p> <ul> <li>Representatives: The speaker asserts a proposition to be true, usually containing or using such verbs. affirm, believe, conclude, deny, report</li> <li>Directives: The speaker tries to make the hearer do something, with such words as: ask, beg, command, dare, invite, insist, request.</li> <li>Commissives: the speaker commits himself/herself to a (future) course of action, with verbs such as: guarantee, pledge, promise, swear.</li> <li>Expressive: the speaker expresses an attitude about a state of affairs, using such verbs as: apologize, appreciate, congratulate, deplore, detest, regret, thank, welcome</li> <li>Declaratives: The speaker alters the status or condition of an object or situation, solely by making the utterance.</li> </ul> <p>Structure-based classification system: </p> <ul> <li>Declarative \u9648\u8ff0\u53e5</li> <li>Imperative \u7948\u4f7f\u53e5</li> <li>Interrogative \u7591\u95ee\u53e5</li> </ul>"},{"location":"Ling/Pragmatics/theories/#politeness-theory","title":"Politeness Theory","text":"<p>Development of Gricean theory</p> <ul> <li>Gricean classic theory of Co-operative Principle</li> <li>Neo-Gricean Theories<ul> <li>Q- and R- principles by L. Horn</li> <li>Q-, I- and M- principles by S. Levinson</li> </ul> </li> <li>Face Theory by Brown and Levinson</li> <li>Politeness Principle by G. Leech</li> <li>Relevance Theory by D. Sperber and D. Wilson</li> </ul> <p>Definition of politeness theory</p> <p>Conversationalists work together, each trying to maintain his/her own face and the face of his/her counterpart.</p> <p>type of face</p> <ul> <li>positive face: desire for respect, admiration and approval</li> <li>negative face: freedom from imposition (i.e. people dont want to be intruded or disturbed)</li> </ul> <p>Acts involved</p> <ul> <li>face threatening acts<ul> <li>positive politeness</li> <li>negative politeness</li> </ul> </li> <li>politeness strategies<ul> <li>bald on record \u76f4\u63a5\u7b56\u7565: use imperative forms and directly address the other person to express your needs</li> <li>off-record \u95f4\u63a5\u7b56\u7565: indirect statements to address needs</li> <li>positive politeness \u6b63\u9762\u793c\u8c8c\u7b56\u7565: minimize the threat to the hearer\u2019s positive face. e.g. let\u2019s, nicknames (beauty)</li> <li>negative politeness \u8d1f\u9762\u793c\u8c8c\u7b56\u7565: e.g. modal verbs (could), apologies (I am sorry to bother you), hesitations, indicating reluctance (I normally wouldnt ask\u2026)</li> </ul> </li> </ul> <p>Leech\u2019s six Politeness Principle: extension of Gricean theory</p> <ul> <li>tact maxim: Minimize cost to the hearer &amp; Maximize benefit to the hearer</li> <li>generosity maxim: maximize cost to yourself &amp; minimize benefit to yourself</li> <li>praise/approbation maxim: minimize dispraise of the hearer &amp; maximize praise of the hearer</li> <li>modesty maxim: minimize praise of self &amp; maximize dispraise of self</li> <li>agreement maxim: minimize disagreement with the hearer &amp; maximize agreement with the hearer</li> <li>sympathy maxim: minimize antipathy towards the hearer &amp; maximize sympathy towards the hearer</li> <li>consideration maxim: minimize the discomfort or displeasure of the hearer &amp; maximize comfort or pleasure of the hearer</li> </ul> <p>(Note that the term \u2018neo-Gricean\u2019 is most often used to describe the works of Laurence Horn, Stephen Levinson, etc. not other theories e.g. relevance theory)</p>"},{"location":"Ling/Pragmatics/theories/#relevance-theory","title":"Relevance Theory","text":"<p>Only preserving the maxim of relation in Gricean theory</p> <p>Definition of relevance theory</p> <p>its investigates how aspects of meaning are generated in context and in relation to the speakers intentions.</p> <p>R(relevance) = E(#contextual effects)/C(cost of efforts in obtaining E)</p> <p>Relevance is higher when cognitive effects are higher, but it is lower when more processing efforts is required.</p> <p>Two aspects of relevance principle</p> <ul> <li> <p>cognitive principle of relevance</p> <p>Human cognition is geared towards the maximization of relevance. </p> <p>The degree of relevance of a cognitive activity is governed by </p> <ul> <li>cognitive effects</li> <li>processing effort</li> <li>communicative principle of relevance</li> </ul> <p>it is only worth an addressee\u2019s time and effort to process some information if the ratio of rewards to effort is sufficiently high.</p> <p>Every act of ostensive communication automatically carries with it the utterer\u2019s belief in its optimal relevance.</p> </li> </ul> <p>Application of RT</p> <ul> <li> <p>disambiguation</p> <pre><code>(1) She has a mole on her left cheek.\n(2) They managed to place a mole in the rival organization.\n</code></pre> </li> <li> <p>assignment of reference</p> <pre><code>A: I\u2019ll make the salad dressing.\nB: The oil is on the top shelf.\nA: I can\u2019t see it.\n</code></pre> </li> <li> <p>enrichment</p> <pre><code>A: When you\u2019ve finished the dishes will you post these letters?\nB: I will.\n=&gt; what B really means is \u201cI will post those letters when I\u2019ve finished the dishes.\n</code></pre> </li> <li> <p>implicature</p> <pre><code>A: Did Chris get invited to the conference?\nB: His paper was too long.\n=&gt; Chris didn\u2019t get invited to the conference.\n</code></pre> </li> </ul>"},{"location":"Ling/Semantics/","title":"Index","text":""},{"location":"Ling/Semantics/#contents","title":"Contents","text":"<p>1 - Definition Clearification</p> <pre><code>This chapter provides a brief introduction to the terminologies involved in semantics.\n</code></pre> <p>2 - Logics &amp; Formal Semantics</p> <pre><code>This chapter first introduces the semiotics in formal semantics (which adopts a similar system with that in the logics). It then discusses about the semantics in two perspectives: the propositional logic and the predicate logic. It also introduces several basic rules in logic inference.\n</code></pre> <p>3 - Scope Ambiguity</p> <pre><code>This chapter discusses on the unsolved questions in scope ambiguity.\n</code></pre>"},{"location":"Ling/Semantics/#grading","title":"Grading","text":"<p>mid-term: 35%</p> <p>final: 50%</p> <p>participation: 15%</p>"},{"location":"Ling/Semantics/#two-tests","title":"Two tests","text":"<p>Two  tests  will   be  given   during  the  term,  one  in  the  middle  and  one  at  the  end of  the term, covering all the material covered up to that point in the course. The tests will be a combination of various types of questions, including true/false and short essay. </p>"},{"location":"Ling/Semantics/#final-review-for-fun","title":"Final Review &amp; For Fun","text":"<p>The following parts are written in preparation for the final review but I upload it as well for you to read for fun.</p>"},{"location":"Ling/Semantics/#noble-semanticians","title":"Noble Semanticians","text":"Name Field Contribution Live Nation Institution Fun facts Noam Chomsky mainly in syntax generative grammar, transformational grammar, government and binding theory, minimalist program, productivity of language, recursivity of language 1928- USA MIT Most prominent linguist alive Ferdinand de Saussure linguist and semiotician founder of semiotics. concepts: sign, signifier vs. signified, diachronic vs. synchronic, language vs. parole, paradigmatic vs. syntagmatic 1857-1913 Switzerland University of Geneva, Switzerland Charles Sanders Peirce philosopher, mathematician, logician founder of semiotics. concepts: index, icon, symbol. 1839-1914 Milford Pennsylvania JHU Michel Br\u00e9al comparative grammar coined the term \u201csemantics\u201d, diachronic focus 1832-1915 born in Rheinlan (Germany), studied in Paris and Berlin in Paris Leonard Bloomfield structural linguistics structural linguistics, language as a self-regulating system, behaviorism(stimulus-response testing) 1887-1949 Yale University reject introspection Aristotle polymath term logic, initiator of western scientific tradition 384-322 BC Stagira, Greece tutor of Alexander the Great Gottlob Freg philosopher, logician, mathematician predicate logic, sense(sentence\u2019s proposition) vs. reference (its truth value) 1848-1925 German University of Jena extreme right-wing views Peter Geach philosopher, professor of logic donkey sentence (1962) 1916-2013 England Oxford Richard Montegue semanticist Montegue grammar: syntax and semantics go together 1930-1971 student of Alfred Tarski, gay man, killed in his apartment, four influential papers Gareth Evans philosopher philosophy of mind, work on reference, e-type anaphora 1946-1980 England Oxford Irene Heim semanticist definite and indefinite pronouns 1954- German, Munich MIT, phd 1982 advisor: Barbara Partee Hans Kamp philosopher and linguist discourse representation theory (DRT) 1954- Dutch Bertrand Russell philosopher, logician logic, philosophy of mathematician 1872-1970 Wales, Britain Cambridge Henri\u00ebtte de Swart linguist tense and aspect, negation, bare nominals and indefinite noun phrases. She has also investigated the role of semantics in language evolution, and was involved in the development of bidirectional optimality theory. 1961- Dutch director of Netherlands Graduate School of Linguistics and Utrecht Institute of Linguistics"},{"location":"Ling/Semantics/#example-questions","title":"Example questions","text":"<p>What is a donkey pronoun?</p> <pre><code>A donkey sentence is such that an expected existential is interpreted as universal taking wide scope.\n</code></pre> <p>What is a discourse pronoun:</p> <pre><code>outside the scope of existing quantifier\ne.g. No student studies semantics. He is outside.\n</code></pre> <p>The scope of a quantifier is always bound in the clause it appears.</p> <pre><code> True\n</code></pre> <p>What is quantifier raising?</p> <pre><code>Chmosky and May.\nLF, \n</code></pre> <p>What are De Morgan\u2019s laws?</p> <pre><code>~(p or q) &lt;=&gt; (~p) and (~q)\n~(p and q) &lt;=&gt; (~p) or (~q)\n</code></pre> <p>What are conditional laws</p> <pre><code>p -&gt; q &lt;=&gt; ~p or q\n</code></pre> <p>When is the indefinite \u201ca\u201d not an existential quantifier?</p> <pre><code>1. donkey sentence\n2. generic noun phrase. A woman is difficult to please. \\forall x(Wx -&gt; Dx)\n3. John is a plumber.pj\n</code></pre> <p>2 readings: Some boy smiled at Jane and some boy kissed Molly.</p> <pre><code>\\exist x(Bx and Sx,j and Kx,m)\n\\exist x(Bx and Sx,j) and \\forall y(By and Ky,m)\n</code></pre> <p>2 Types of Recursion</p> <pre><code>embedding and coordination\n</code></pre>"},{"location":"Ling/Semantics/AMR/","title":"\u62bd\u8c61\u8bed\u4e49\u8868\u793a\uff08AMR\uff09\u6307\u5bfc\u624b\u518c","text":""},{"location":"Ling/Semantics/AMR/#_1","title":"\u7b2c\u4e00\u90e8\u5206 \u7b80\u4ecb","text":""},{"location":"Ling/Semantics/AMR/#_2","title":"\u7b2c\u4e8c\u90e8\u5206 \u6982\u5ff5\u548c\u5173\u7cfb","text":""},{"location":"Ling/Semantics/AMR/#_3","title":"\u7b2c\u4e09\u90e8\u5206 \u73b0\u8c61","text":"<p>References - Abstract Meaning Representation (AMR) 1.2.6 Specification - \u5168\u7f51\u9996\u8bb2\u6700\u8be6\u7ec6AMR\u7cfb\u7edf\u4ecb\u7ecd\uff081\uff09\uff1aAbstract Meaning Representation(AMR) \u7684\u57fa\u7840\u8868\u793a\u903b\u8f91\uff1b\u9644\u82f1\u6587\u7248\u539f pdf \u8d44\u6599</p>"},{"location":"Ling/Semantics/ambiguity/","title":"Scope Ambiguity","text":""},{"location":"Ling/Semantics/ambiguity/#scope-ambiguity","title":"Scope Ambiguity","text":""},{"location":"Ling/Semantics/ambiguity/#scope-and-anaphora","title":"Scope and Anaphora","text":"<p>antecedent vs. postcedent</p> <p>anaphor vs. cataphor</p> <p>Predicate logic is suited to capture natural language meaning</p> <p>allow recursion = recursivity</p> <p>two sources of recursion</p> <ul> <li>coordination: john likes cats, dogs, beer</li> <li>embedding: John said that Mary knws that Bill thinks that Jane claims that</li> </ul> <pre><code>some boy kissed every girl.\n\nEvery girl was kissed by some boy.\n</code></pre> <pre><code>Someone mentioned tehy called everyone.\n\n\\forall x: Px\\forall y(M(x, Cxy))\n</code></pre> <p>linear order: negative polarity item</p> <pre><code>graph TD\n  DS -.Transformation.-&gt; SS\n    SS -.send off.-&gt; PF\n    SS -.send off.-&gt; LF\n    PF -.acoustic representation.-&gt; SS\n    LF -.semantic interpretation.-&gt; SS\n</code></pre> <p>Transformation: </p> <ul> <li>Jane laughed at Bill</li> <li>Bill was laughed at by Jane</li> </ul> <p>CALLOUT: annotation, connotation and denotation</p> <ul> <li> <p>annotation</p> <ul> <li>a critical or explanatory commentary or analysis</li> <li>a comment added to a text</li> <li>the process of writing such comment or commentary</li> <li>(computing) metadata added to a document or program</li> <li>(genetics) information relating to the genetic structure of sequences of bases</li> </ul> </li> <li> <p>connotation: intension.</p> <ul> <li> <p>A meaning of a word or phrase that is suggested or implied, as opposed to a denotation, or literal meaning. A characteristic of words or phrases, or of the contexts that words and phrases are used in.</p> <p>The\u00a0connotations\u00a0of the phrase \"you are a dog\" are that you are physically unattractive or morally reprehensible, not that you are a canine.</p> </li> <li> <p>A technical term in logic used by J. S. Mill and later logicians to refer to the attribute or aggregate of attributes connoted by a term, and contrasted with\u00a0denotation\u00a0.</p> <p>The two expressions \"the morning star\" and \"the evening star\" have different\u00a0connotations\u00a0but the same denotation (i.e. the planet Venus).</p> </li> </ul> </li> <li> <p>denotation</p> <ul> <li>its explicit or direct meaning, as distinguished from the ideas or meanings associated with it or suggested by it. Simply put, a word\u2019s\u00a0denotation\u00a0is what that word\u00a0means\u00a0or directly represents.</li> </ul> </li> </ul>"},{"location":"Ling/Semantics/ambiguity/#solution-for-scope-ambiguity","title":"Solution for scope ambiguity","text":"<p>Quantifier-raising  - NC RM - syntactic structure comes before the semantic structure - The movement we make in SS to remove ambiguity in DS is called quantifier-raising. - take the quantifier to the higher position to show the scope</p> <p>Quantifier-in - Montague grammar - The derivational illustration is called quantifier-in. - each predicate take an argument once a time</p> <p>Quantifier storage - Cooper storage - semantic ambiguity not represented in syntactic structure - semantic representation in which scope ambiguities are obtained without special syntactic rules</p>"},{"location":"Ling/Semantics/ambiguity/#quantifier-in","title":"Quantifier-in","text":"<p>interrogative: asking a question <pre><code>which woman does every man love?\n</code></pre></p> <p>which scopes over every.</p>"},{"location":"Ling/Semantics/ambiguity/#scope-ambiguity_1","title":"Scope ambiguity","text":"<p>e.g.  some boy did not laugh. <pre><code>\\exist x (Boy(x) and ~Laugh(x))\n~\\exist x (Boy(x) and Laugh(x))\n</code></pre></p> <p>some boy kissed no girl. <pre><code>\\exist x (Boy(x) and ~\\exist y (Girl(y) and Kiss(x, y)))\n~\\exist y (Girl(y) and \\exist x (Boy(x) and Kiss(x, y))): there was no girl kissed by a boy\n</code></pre></p> <p>every boy kissed no girl. <pre><code>\\forall x (Boy(x) and ~\\forall y(Girl(y) and Kiss(x, y)))\n</code></pre></p>"},{"location":"Ling/Semantics/ambiguity/#deictic","title":"Deictic","text":"<p>No boy said he was hungry.</p> <p>No boy was present. He was outside instead.: \u201che\u201d is trying to refer to \u201dno boy\u201d but outside the scope.</p> <p>pronoun \\(\\sub\\) anaphora</p>"},{"location":"Ling/Semantics/ambiguity/#discourse-anaphora","title":"Discourse Anaphora","text":"<p>e.g.  <pre><code>Every student was present and she was interested.\n</code></pre></p> <p>every: scopes over \u201cEvery student was present\u201d</p> <p>every: an indefinite quantifier. \u201cshe\u201d\u2019s antecedent is not clear</p> <p>\u201cshe\u201d is hardly bound by the antecedent. \u201cshe\u201d is free * ungrammatical: \u4e0d\u5408\u8bed\u6cd5\u7684, syntactic</p>"},{"location":"Ling/Semantics/ambiguity/#infelicitous-semantic-fit-the-context","title":"infelicitous: \u4e0d\u5408\u9002\u7684, semantic, fit the context","text":"<ul> <li>sentence pronoun: within the same clause</li> <li> <p>discourse pronoun: in separate clauses</p> </li> <li> <p>sentence quantifier:     <pre><code>Some boy said he was hungry.\nNo boy said he was hungry.\n</code></pre></p> </li> <li> <p>discourse quantifier:     <pre><code>Some boy was present; he was hungry.\n#No boy was present; he was hungry.   // he is free\n</code></pre></p> </li> <li> <p>coreference     individual constants     <pre><code>Fred thought he was the the best\n</code></pre></p> </li> <li> <p>binding     individual variables     <pre><code>Every student thinks he/she is the best\n</code></pre></p> </li> </ul> <p>So we may conclude the following rules for e-type anaphora. BUT this part has NOT been verified with any authority. Do NOT take them as given truths during exams.</p> <ul> <li>F: universal quantifier + singular pronoun</li> <li>T: universal quantifier + plural pronoun</li> <li>F: negated quantifier + singular pronoun</li> <li>T: negated quantifier + plural pronoun, semantically plural but grammatically singular</li> <li>T: existential quantifier + singular pronoun</li> </ul> <p>e.g. No boy thinks that he has a chance. <pre><code>~\\exist x(Boy(x) and Think(x, Has-a-chance(x)))\n</code></pre></p> <p>A particular boy said he wanted to kiss every girl. He then did it. <pre><code>\\exist !x(Bx and  W(x, K(x, \\forall y(Gy -&gt; K(x, y))))) and K(x, y)\n</code></pre></p>"},{"location":"Ling/Semantics/ambiguity/#donkey-anaphora","title":"Donkey anaphora","text":"<p>if a farmer owns a donkey, he beats it. <pre><code>* \\exist x (Fx and \\exist y (Dy and O(x, y))) -&gt; B(x, y)\n\\forall x \\forall y (Fx and Dy and O(x, y) -&gt; B(x, y))\n</code></pre></p> <p>= every farmer who owns a donkey beats it. <pre><code>\\exist x(Fx and \\exist y (Dy and O(x, y)) -&gt; B(x, y))  // y is free\n</code></pre></p> <p>\u2757\u2757\u2757</p> <p>A donkey sentence is such that an expected existential is interpreted as universal taking wide scope.</p> <p>donkey pronoun can be: it, him, they (can also be plural forms) </p> <p>\u201ca\u201d: generic indefinite <pre><code>A woman is a difficult thing to please.\n</code></pre></p> <p>[Every farmer [who owns a donkey] beats it.]</p> <p>universal wide scope: it scopes more over the relative clause</p> <p>The problem - Existential with narrow scope - interpreted as universal with wide scope - in conditional clauses - in restriction of every</p> <p>Conclusion - the machinery of predicate logic is broken - cannot capture meaning of natural language</p> <p>If a student tries, she passes the exam. <pre><code>(\\exist x(Sx and Tx)) -&gt; Py   ; y is free\n\\exist x((Sx and Tx)) -&gt; Py)\n</code></pre></p> <p>interpretation <pre><code>\\forall x((Sx and Tx) -&gt; px)\n</code></pre></p> <p>Solutions for donkey anaphora:</p> <ul> <li> <p>E-type anaphora</p> <ul> <li>Gareth Evans, 1970s, philosopher, university of Oxford, logic, philosophy of mind</li> <li>pronoun outside the scope of their binder</li> <li> <p>initial examples     <pre><code>A student came in. She had a question about the exam.\nshe = the student came in\n\nBill owns some sheep and Max vaccinates them.\nthem = the sheep Bill owns. E-type pronoun, some sheep scopes over the first half\n</code></pre></p> </li> <li> <p>If a student likes Copenhagen, she is happy.     <pre><code>she = for every case we examine, the student is \n</code></pre></p> </li> <li> <p>every student who reads a semantic paper likes it.     <pre><code>Bill owns a cat. Max takes care of it.\nBill is a cat-owner. #Max takes care of it.\n</code></pre></p> </li> </ul> </li> <li> <p>DRT (Dynamic binding theory)</p> <ul> <li>discourse anaphora and donkey pronouns</li> <li>intermediate level</li> <li>Irene Heim (1982) and Hans Kamp (1981)</li> <li>Discourse Representation Theory (DRT)<ul> <li>embedding conditions</li> <li>language of boxes</li> <li>boxes constantly updated</li> <li>embedded boxes in accessible</li> </ul> </li> </ul> </li> <li> <p>Unselective binding     example of the subject is \u2018unselectively bound\u2019 by a special \u2018generic operator.     <pre><code>Dogs bark.\nA dog barks.\n</code></pre></p> </li> </ul> <p>Reference: Unselective Binding</p>"},{"location":"Ling/Semantics/ambiguity/#chapter-6-in-short-discoursedonkey-anaphora","title":"Chapter 6 in short: Discourse/Donkey Anaphora","text":"<p>(\u52a0\u7c97\u7684\u662fDonkey anaphora\u548cE-type anaphora\u7684\u533a\u522b)</p> <p>Discourse: basic unit of interpretation</p> <ul> <li>Dynamic theory of meaning: look beyond the meaning of individual sentences and determine the way they are pieced together to make discourse</li> <li>discourse anaphora: anaphora in sequence of sentences (instead of single sentence)</li> <li> <p>Donkey sentence: is such that an expected existential is interpreted as universal taking wide scope. / sentences that contain a pronoun with clear meaning but whose syntactical role in the sentence poses challenges to grammarians (wikipedia)</p> <ul> <li>universal: each, every, all, not all, not every</li> <li>existential: a, one, some, no</li> <li> <p>e.g.     <pre><code>every farmer who owns a donkey beats *it*.\nit: (corresponding to the) existential (\"a\") but interpreted as universal\n</code></pre></p> <pre><code>every police officer who arrested a murder insulted *him*.\nhim\n</code></pre> <pre><code>every farmer who owns some sheep cleans *them*.\nthem\n</code></pre> </li> </ul> </li> <li> <p>donkey anaphora = donkey pronoun: it, him, they (can also be plural forms)</p> </li> <li> <p>Analysis of donkey anaphora: Montague grammar</p> <p>e.g. </p> <pre><code>\\forall x(Farmer(x) and \\exist y (Donkey(y) and Owns(x,y)) -&gt; Beat(x,y))\n</code></pre> </li> </ul> <p>Anaphoric relations in sentence and discourse - E-type anaphora: pronoun outside the scope of binder, not bound, content of pronoun reconstructed, reconstruction based on context     - in separate sentences</p> <pre><code>    ```\n    A student came in. *She*(the student came in) had a question about the exam.\n    ```\n\n- in the same sentence but outside the scope\n    ```\n    If a student likes Copenhagen, *she*(for every case we examine, the student in question who likes Copenhagen) is happy.\n    ```\n\n- problem of compound: antecedent must appear as a noun?\n    ```\n    Bill owns a cat. Max takes care of it.\n    Bill is a cat-owner. # Max takes care of it.\n    ```\n</code></pre> <ul> <li>unselective binding + Discourse Representation Theory (DRT)<ul> <li>embedded conditions</li> <li>language of boxes, boxes constantly updated</li> <li>Accessibility: the antecedent to be in a box \u2018as high as\u2019(same box or left box) or \u2018higher than\u2019 the discourse referent for the pronoun</li> <li>\u21d2 binds all left variables. unselective quantification over all the variables. unselective binding</li> </ul> </li> <li>dynamic binding<ul> <li>TODO</li> </ul> </li> </ul> <p>Anaphora resolution - TODO</p>"},{"location":"Ling/Semantics/definitions/","title":"Definition Clarification","text":""},{"location":"Ling/Semantics/definitions/#what-is-semantics","title":"What is semantics?","text":"<ul> <li>Study of meaning with regard to natural language.</li> <li>mean = signify, import, denote, represent</li> <li>meaning = sense, significance, signification, acceptance, import</li> </ul>"},{"location":"Ling/Semantics/definitions/#the-topics-involving","title":"The topics involving:","text":"<ul> <li>Semantics vs. semiotics<ul> <li>semiotics is the use signs to convey meaning</li> <li>Ferdinand de Saussure: signifier (phonic and orthographic form that evokes an idea (the signified)) vs. signified (idea in our mind that the signifier evokes). The referent is the actual object in the world that the signified points to.</li> <li>Charles Sanders Peirce: icon (mimic of reality), index (real indicator of the presence of some real event), symbol (arbitrarily evokes or represents something in the world)</li> </ul> </li> </ul>"},{"location":"Ling/Semantics/definitions/#meaning-capturing-metalanguage-tools","title":"Meaning capturing: metalanguage tools","text":"<ul> <li> <p>parenthesis     <pre><code>small dogs and cats: \n- small (dogs and cats)\n- (small dogs) and cats\n\n// example of scope of quantifier\n</code></pre></p> </li> <li> <p>logical quantifier     <pre><code>every body did not cry:\n- every not (boy did cry) 'no boy did cry'\n- not every (boy did cry) 'at least one boy did cry'\n</code></pre></p> </li> </ul>"},{"location":"Ling/Semantics/definitions/#ways-to-capture-meaning-henriette-de-swart","title":"Ways to capture meaning: (Henri\u00ebtte de Swart)","text":"<ul> <li>mentalistic approach: words itself stands for meaning.<ul> <li>prototype: a central or typical member of a category.</li> <li>difficulty: cannot describe functional words: only, of, just</li> <li>by psycho semanticians</li> </ul> </li> <li>referential approach: words refer to things to entities.<ul> <li>intensionality: world-creating predicates</li> <li>difficulty: things do not exists</li> <li>by formal semanticians</li> </ul> </li> </ul>"},{"location":"Ling/Semantics/definitions/#predicatepredicate-calculusfirst-order-predicate-logic","title":"Predicate/Predicate Calculus/First-order Predicate Logic","text":"<ul> <li> <p>everything but the subject     e.g. John likes grammar.</p> </li> <li> <p>content verb or adjective taking arguments     e.g. like (John, grammar).</p> </li> </ul>"},{"location":"Ling/Semantics/definitions/#map-of-linguistics-theory","title":"Map of Linguistics Theory","text":"<pre><code>graph TD\n  Language_Ability --&gt; Competence\n  Language_Ability --&gt; Performance\n  Competence --&gt; Grammar\n  Competence --&gt; Lexicon\n  Grammar --&gt; Semantics\n  Grammar --&gt; Phonology\n  Grammar --&gt; Syntax\n  Grammar --&gt; Pragmantics\n</code></pre>"},{"location":"Ling/Semantics/definitions/#semantics-syntax","title":"Semantics &amp; Syntax","text":""},{"location":"Ling/Semantics/definitions/#syntax-needs-semantics","title":"Syntax needs semantics","text":"<ul> <li> <p>We can/cannot study syntax without semantics.</p> <pre><code>Colorless green ideas sleep furiously.\n</code></pre> </li> </ul>"},{"location":"Ling/Semantics/definitions/#semantics-needs-syntax","title":"Semantics needs Syntax","text":"<ul> <li>Semantics needs syntax: Semantics is how meaning is assigned to linguistic expressions.     SOV and SVO.</li> </ul>"},{"location":"Ling/Semantics/definitions/#semantics-pragmatics","title":"Semantics &amp; Pragmatics","text":"<ul> <li>irony and metaphor</li> </ul>"},{"location":"Ling/Semantics/definitions/#context-and-deixis","title":"Context and Deixis","text":""},{"location":"Ling/Semantics/definitions/#deixis-needs-context","title":"Deixis needs context","text":"<p>Deixis is how objects, events and situations relate to the here and now of the speakers. It shows that utterance meaning cannot be fully determined by sentence meaning.</p> <ul> <li>tense (present and past)</li> <li>demonstratives (this, that)</li> <li>pronouns (I, you, etc.)</li> <li>adverbials (here, there, etc.)</li> </ul> <pre><code>(Last week) (I) play(ed) tennis with Chris.\n</code></pre>"},{"location":"Ling/Semantics/definitions/#deictic-vs-anaphoric-use-of-pronouns","title":"Deictic  vs. Anaphoric use of pronouns","text":"<p>Deictic: pointing context Anaphoric: linguistic expression context. pronoun resolution: antecedent - pronoun</p>  \ud83d\udcad index - indices (higher register) / indexes    \ud83d\udcad Desiderata (high-register way to say Goal, desideratum. sl.)"},{"location":"Ling/Semantics/definitions/#map-of-semantics-taxomony","title":"Map of Semantics / Taxomony","text":"<p>Semantics - lexical semantics     - meaning of lexical items     - smaller unites     - mainly words     - morphemes - compositional semantics     - meaning of larger units     - phrases and sentences     - word combination</p>"},{"location":"Ling/Semantics/definitions/#utterance-sentence-proposition","title":"Utterance / Sentence / Proposition","text":"<ul> <li>utterance: the concrete result of a distinct act of speaking by an actual speaker</li> <li>sentence: abstract results of one one more act of sentence/writing</li> <li>proposition: the meaning of sentence independent of speaker context</li> </ul>"},{"location":"Ling/Semantics/definitions/#lexical-semantics","title":"lexical semantics","text":"<ul> <li>meanings of lexical items</li> <li>smaller units</li> </ul> <pre><code>abiguity: bank, punch, pitcher\nsynonymy: beautiful-lovely, antonymy: male-female\nhyponymy: set -&gt; superset\ntaxonomy: set -&gt; subset\nsymmetric relation: marry. mutually entail each other\nconverse relation: send, sell\nmeronomy: </code></pre>"},{"location":"Ling/Semantics/definitions/#1-homonymy","title":"1) homonymy","text":"<ul> <li>homographs: written the same. lab, match, stroke</li> <li>homophones: same pronunciation, distinct orthography. ring vs. wring, phase vs. faze, sent vs. cent</li> </ul>"},{"location":"Ling/Semantics/definitions/#2-polysemy","title":"2) polysemy","text":"<ul> <li>related meaning for the same words.</li> </ul>"},{"location":"Ling/Semantics/definitions/#3-synonymy","title":"3) synonymy","text":"<ul> <li>neutral - derogatory</li> </ul>"},{"location":"Ling/Semantics/definitions/#4-antonymy","title":"4) antonymy","text":"<ul> <li>simple opposite, black and white: dead - alive, pass - fail, hit - miss, present - absent</li> <li>gradable: cold - cool - tepid - warm - hot, silent - audible - soft - loud</li> <li>reverse: same perspective, distinct directions, often movements involved, pull - push, come - go, lift - push down, leave - return</li> <li>converse: same relationship, distinct perspective, above - below, own - belong to, employer - employee. the subject and objects of a predicate.</li> <li>taxonomic sisters<ul> <li>equal part of a whole</li> <li>color of spectrum: blue, green, red, yellow, purple</li> <li>days of the week: Monday, Tuesday</li> <li>fingers of the hand: thumb, index finger, ring finger, middle finger</li> </ul> </li> </ul>"},{"location":"Ling/Semantics/definitions/#5-hyponymy","title":"5) hyponymy","text":"<ul> <li>sets: subsets and supersets</li> <li>hyponym of  = type of</li> <li>hypernym of  = subsumes</li> <li>car - vehicles, bottles - container.</li> <li>transitive relationships</li> </ul>"},{"location":"Ling/Semantics/definitions/#6-meronymy","title":"6) meronymy","text":"<p>part-whole relationship</p> <p>subtypes of meronymy</p> <ul> <li>from part to whole: is part of</li> <li>from whole to part: has / have<ul> <li>steering wheel - car, roof - house, trunk - tree, keyboard - lap</li> </ul> </li> <li>from member to collection, from collection to member</li> <li>from portions to mass (is a portion of), from mass to portion ()can be separated into).<ul> <li>mass noun: liquid, salt, paper, homework, love</li> <li>count noun: laptop, tree, car</li> <li>drop of liquid - liquid, grain of salt - salt, sheet of paper - paper, bottle of beer - beer</li> </ul> </li> </ul> <pre><code>pistachio - almond taxonymy\nlaugh - cry move in - move out\ncry - weep\nRMB - monetary unit\ngrilfriend - wife\nsit - stand\njump - hop\ngood - bad\nbeat - beet\nrise - fall reverse\ncigarette - cigar taxonymy\nkid - goat dragon - monster\n</code></pre>"},{"location":"Ling/Semantics/definitions/#compositional-semantics","title":"Compositional semantics","text":"<ul> <li>causation feature: kill - cause to cease to be alive, open - cause to be open,</li> <li>problem: too many features need, residual meaning</li> <li>semantics need syntax: a. Jim hit Sally b. Sally hit Jim.</li> <li>thematic roles: agent - patient - recipient - beneficiary - goal - theme - experiencer - instrument - source - percept (Frank saw the bottle)</li> <li>hit (agent, patient)</li> </ul>"},{"location":"Ling/Semantics/definitions/#inventory-of-components","title":"Inventory of components","text":"<ul> <li>actor or agent</li> <li>patient</li> <li>theme</li> <li>experiencer</li> <li>beneficiary</li> <li>instrument</li> <li>goal</li> <li>source</li> <li>recipient</li> <li>percept: being perceived</li> </ul>"},{"location":"Ling/Semantics/definitions/#important-linguistics","title":"Important linguistics","text":"<p>Michel Br\u00e9al: coined semantics</p> <p>Ferdinand de Saussure: semiotician, diachronic vs. synchronic. </p> <p>Leonard Bloomfield: structural linguistics, Language, behaviorism(stimulus-response testing). reject introspection(theorize about language learning by thinking about on ones own experience)</p>"},{"location":"Ling/Semantics/definitions/#diachronic-synchronic","title":"Diachronic &amp; Synchronic","text":"<ul> <li>course in general linguistics (1916)</li> <li>across time | with time</li> </ul>"},{"location":"Ling/Semantics/definitions/#signifier-signified-referent","title":"Signifier &amp; Signified &amp; Referent","text":"<ul> <li>signified: ideas in mind</li> <li>referent: real objects</li> </ul>"},{"location":"Ling/Semantics/definitions/#langue-parole","title":"Langue &amp; Parole","text":"<ul> <li>competence &amp; performance</li> </ul>"},{"location":"Ling/Semantics/definitions/#paradigmatic-syntagmatic","title":"Paradigmatic &amp; Syntagmatic","text":"<ul> <li>paradigmatic relation: a relation \u201cbetween an individual unit and others that can replace it in a given sequence\u201d.</li> <li>syntagmatic relation: a relation \u201cbetween elements that form parts of some form, sequence, construction\u201d.</li> </ul> <p>Noam Chomsky Syntax</p>"},{"location":"Ling/Semantics/definitions/#generative-grammar","title":"Generative Grammar","text":"<ul> <li>transformational grammar, deep structure, Standard Theory</li> <li>semantic precedes syntax</li> <li>transformations manipulate semantic structures</li> <li>lexical items inserted at surface syntax</li> <li>reliance on semantic features</li> <li>reliance on lexical decomposition</li> </ul>"},{"location":"Ling/Semantics/definitions/#ambiguity","title":"Ambiguity","text":"<ul> <li>lexical ambiguity</li> <li>scope (quantifiers)</li> <li>syntactic ambiguity</li> <li>pronoun resolution</li> </ul> <p>e.g. Flying planes can be dangerous.</p> <pre><code>graph TD\n  are --&gt; planes\n    planes --&gt; flying\n    are --&gt; dangerous\n</code></pre> <pre><code>graph TD\n    is --&gt; flying\n    flying --&gt; planes\n    is --&gt; dangerous\n</code></pre>"},{"location":"Ling/Semantics/definitions/#pronoun-resolution","title":"pronoun resolution","text":"<ul> <li> <p>anaphora</p> <ul> <li>anaphor(pronoun takes antecendent)</li> <li>cataphor(pronoun takes posteedent)</li> </ul> <pre><code>John said he would helps.\nNo boy said he would help. no boy: all the boy not, not exist a boy\n</code></pre> </li> <li> <p>coreference(coreferential): refer to same person</p> </li> <li>quantification<ul> <li>covariance: the relation between \u201che\u201d and every/all, \u201che\u201d refers to all single one</li> <li>binding: \u201che\u201d binds \u201cevery\u201d/\u201dall\u201d</li> </ul> </li> </ul>"},{"location":"Ling/Semantics/definitions/#inference","title":"Inference","text":"<p>notes: cf. compare, e.g. for example</p> <pre><code>graph TD\n  Inference --&gt; Entailment\n  Inference --&gt; Presuppositions\n  Inference --&gt; Implicature\n</code></pre> <p>any conclusion drawn from a set of propositions, from something someone has said and so on.</p>"},{"location":"Ling/Semantics/definitions/#entailment","title":"Entailment","text":"<ul> <li>If A is true, then B is true.</li> </ul> <pre><code>Three girls were present. -&gt; More than two girls were present.\nThree girls were not present. kills More than two girls were present.\n</code></pre> <p>Cannot be cancelled</p> <pre><code># Three girls were present, but actually two girls come.\n#: semantically wrong\n</code></pre>"},{"location":"Ling/Semantics/definitions/#presupposition","title":"Presupposition","text":"<ul> <li>If A is uttered then B is taken for granted.</li> <li>survives negation</li> </ul> <pre><code>Jim regrets ignoring the first problem. -&gt; Jim has the first problem.\nJim does not regret ignoring the first problem. -&gt; Jim has the first problem.\n</code></pre> <p>cannot be cancelled</p> <pre><code># Jim regrets ignoring the first problem, but he does not have the first problem.\n</code></pre>"},{"location":"Ling/Semantics/definitions/#implicature","title":"Implicature","text":"<ul> <li>If A is uttered, then B is assumed to be true.</li> <li>kills negation</li> <li>can be cancelled</li> </ul> <pre><code>Susan blushes when Jim looks at her, but she does not have a crush on him.\n</code></pre>"},{"location":"Ling/Semantics/definitions/#compositionality","title":"Compositionality","text":"<p>Proposed by Noam Chomsky, the term compositionality entails three dimension. </p> <ul> <li>productivity<ul> <li>Key idea behind generative grammar. A relatively small number of combinatory rules may allow speakers to use a finite set of words to create a very large number of sentence.</li> </ul> </li> <li>generativity</li> <li>recursivity<ul> <li>coordination: I like puppies and ice cream and clear skies and good wine and\u2026</li> <li>embedding: Frank thinks Sam said you deny Sue is cute\u2026</li> </ul> </li> </ul>"},{"location":"Ling/Semantics/definitions/#principle-of-compositionally-of-meaning","title":"Principle of compositionally of meaning","text":"<p>The meaning of the whole is a function of the meaning of its parts and the way they are put together.: \u2026 is determined by\u2026</p>"},{"location":"Ling/Semantics/formal_semantics/","title":"Logics &amp; Formal Semantics","text":""},{"location":"Ling/Semantics/formal_semantics/#metalanguage","title":"Metalanguage","text":"<ul> <li>object language: the language we talk about</li> <li>metalanguage: the language that we use to talk about the object language</li> </ul> <pre><code>a. January has 31 days.\nb. *******January******* has 7 letters.\nb*. 'January' has 7 letters.\n</code></pre> <p>Liar sentence</p> <pre><code>(31) Sentence (31) is false.\n</code></pre> <p>solutions: (\u4e0d\u8003)</p> <ul> <li> <p>fuzzy logic      <pre><code>x = NOT(x)\nx = 1 - x\nx = 0.5\n</code></pre></p> </li> <li> <p>Alfred Tarski     paradox arises only in languages that are \u201csemantically closed\u201d.</p> </li> <li> <p>Arthur Prior     equivalent     <pre><code>This statement is false.\nThis statement is true and this statement is false.\n</code></pre></p> </li> <li> <p>Saul Kripke     Whether a sentence is paradoxical or not can be depend upon contingent facts.     <pre><code>A majority of what Jones says about me is false.\n</code></pre></p> <pre><code>Smith is a big spender.\nSmith is soft on crime.\nEverything Smith says about me is true.\n</code></pre> <p>If a statement's truth value is ultimately tied up in some evaluable fact about the world, that statement is \"grounded\". If not, that statement is \"ungrounded\". Ungrounded statements do not have a truth value. Liar statements and liar-like statements are ungrounded, and therefore have no truth value.</p> </li> <li> <p>Jon Barwise and John Etchemendy     \u201cdenial\u201d or \u201cnegation\u201d</p> </li> <li> <p>Dialetheism</p> <p>Dialetheism is the view that there are true contradictions. Dialetheism raises its own problems. Chief among these is that since dialetheism recognizes the liar paradox, an intrinsic contradiction, as being true, it must discard the long-recognized\u00a0principle of explosion, which asserts that any proposition can be deduced from a contradiction, unless the dialetheist is willing to accept trivialism \u2013 the view that\u00a0all propositions are true. Since trivialism is an intuitively false view, dialetheists nearly always reject the explosion principle. Logics that reject it are called\u00a0paraconsistent.</p> </li> <li> <p>Non-cognitivism</p> </li> <li>Bhartrhari\u2019s perspectivism</li> </ul>"},{"location":"Ling/Semantics/formal_semantics/#connectives-truth-and-truth-conditions","title":"Connectives, truth, and truth conditions","text":"<p>logic overview</p> <pre><code>graph TD\n  Logic --&gt; Logic_from_antiquity\n    Logic --&gt; Predicate_Logic\n    Logic_from_antiquity --&gt; Term_Logic\n    Logic_from_antiquity --&gt; Propositional_Logic\n</code></pre> <p>logic from antiquity: older</p> <p>predicate logic: newer</p> <p>Aristotle: term logic</p> <p>Gottlob Frege: predicate logic</p>"},{"location":"Ling/Semantics/formal_semantics/#history-of-logics","title":"History of Logics","text":"<ul> <li>term logic (syllogism logic)<ul> <li>Aristotle</li> <li>syllogism</li> </ul> </li> <li>propositional logic (predicate calculus, semantic, sentence, symbolic logic)<ul> <li>antiquity</li> <li>proposition: true and false</li> <li>logical words</li> </ul> </li> <li>predicate logic<ul> <li>gottlob frege</li> <li>meaning</li> <li>quantifier</li> </ul> </li> </ul> <p>Not applied for - question (?) - exclamation - modal: modal logic</p>  \ud83d\udcad ergo: therefore"},{"location":"Ling/Semantics/formal_semantics/#term-logic","title":"Term logic","text":""},{"location":"Ling/Semantics/formal_semantics/#modus-ponens","title":"Modus Ponens","text":"<p>Means of putting, MP syllogism, affirming the antecedent</p> <pre><code>P(conditional statement): If it rain, I do not go to school.\nH: It rains.\nC: I do not go to class.\n</code></pre> <p>Formal fallacy: affirming the consequent. Abductive reasoning. <pre><code>P: If it rains, I will not go to class.\nH: I do not go to class.\nC: * It rains.\n</code></pre></p>"},{"location":"Ling/Semantics/formal_semantics/#modus-tollens","title":"Modus Tollens","text":"<p>Means of carrying, MT syllogism, denying the consequent.  <pre><code>P: If it has not been cloudy, it does not rain.\nH: It rains.\nC: It has been cloudy.\n</code></pre></p>"},{"location":"Ling/Semantics/formal_semantics/#hypothetical-syllogism","title":"Hypothetical syllogism","text":"<p>principle of transitivity <pre><code>P: If it rains, the soils goes wet. If the soil goes wet, the plants grow.\nH: It rains.\nC: The plants grow.\n</code></pre></p>"},{"location":"Ling/Semantics/formal_semantics/#disjunctive-syllogism","title":"Disjunctive syllogism","text":"<p>two premises and a conclusion <pre><code>P: It either rains or its sunny.\nH: It rains.\nC: It is not sunny.\n</code></pre></p>"},{"location":"Ling/Semantics/formal_semantics/#three-types-of-reasoning","title":"Three types of reasoning","text":"<ul> <li> <p>Deductive reasoning</p> <p>general to the particular. based on entailment</p> </li> <li> <p>Inductive reasoning</p> <p>particular to the general. empiricism</p> </li> <li> <p>Abductive reasoning</p> <p>formal fallacy. All dogs bark, Fido barks, Fido is a dog.</p> <p>Abductive reasoning allows inferring a as an explanation of b. As a result of this inference, abduction allows the precondition a to be abducted from the consequence b.</p> <p>Properly used, abductive reasoning can be a useful source of\u00a0priors in\u00a0Bayesian statistics.</p> </li> </ul>"},{"location":"Ling/Semantics/formal_semantics/#propositional-logic","title":"Propositional logic","text":"<ul> <li>propositional 1: p</li> <li>propositional 2: q</li> <li>propositional 3: r</li> <li>negation: \\(\\neg\\)</li> <li>conjunction:</li> <li>disjunction:</li> <li>inclusive disjunction</li> <li>exclusive disjunction</li> <li>conditional:</li> <li>biconditional:</li> </ul>"},{"location":"Ling/Semantics/formal_semantics/#conditional-material-implication","title":"conditional, material implication","text":"<ul> <li>antecedent</li> <li>consequent</li> <li>\u2192, arrow.</li> </ul>"},{"location":"Ling/Semantics/formal_semantics/#biconditional","title":"biconditional","text":"<ul> <li>\u2194</li> <li>if and only if</li> <li>logical equivalence</li> </ul>"},{"location":"Ling/Semantics/formal_semantics/#de-swarts-formalizations","title":"De Swarts formalizations","text":"<ul> <li>\\(\\phi\\) phi, any proposition</li> <li>\\(\\psi\\) psi, any other proposition</li> <li>wff, well-formed formula</li> </ul>"},{"location":"Ling/Semantics/formal_semantics/#well-formed-formula","title":"Well-formed formula","text":"<ul> <li>Any atomic proposition is itself a wff.</li> <li>If \\(\\phi\\) is wff, then \\(\\neg\\phi\\) is wff.</li> <li>Two wff\u2019s conbinations under logical operators are a wff.</li> <li>No other are wff.</li> </ul>"},{"location":"Ling/Semantics/formal_semantics/#propositional-practice","title":"Propositional practice","text":"John is happy. p John is not happy. ~p John is happy or sad. p or q exlusive John is happy, not sad. p and ~q If John has eaten, John is happy. p -&gt; q If John has not eaten, John is not happy. ~p -&gt; ~q John is hungry or thirsty. p or q inclusive. John left before you did. p John is not hungry or thirsty. ~(p or q inclusive) &lt;-&gt; ~p and ~q John is not hungry and thirsty. ~(p and q) &lt;-&gt; ~p or ~q inclusive If John did not laugh, then John cried. ~p \u2192 q \u2194 p or q If John laughed, then John also cried. p \u2192 q \u2194 ~p or q inclusive John did not laugh, or John cried. ~p or q \u2194 p \u2192 q John laughed, or John cried and beat on the table. p and (q or r) \u2194 (p and q) or  (p and r) John is not happy, but rather sad. (scope of \u201cnot\u201d) ~p and q. * ~(p and q) John is not happy, or sad. ~(p and q) John is not happy, or John is sad. ~p or q John did not help us or hinder us. ~(p or q) \u2194 ~p and ~q John did not help us or John hinders us. ~p or q <ul> <li>Tautology: necessarily true</li> <li>Contradiction: necessarily false</li> <li>Contingent: possible</li> </ul> <pre><code>John is friendly or John is not friendly.\n</code></pre> p V_e ~p T T F F T T <pre><code>John is friendly and John is not friendly.\n</code></pre> p and ~p T F F F F T <pre><code>It is not the case that John is not friendly.\n</code></pre> ~ ~ p T F T F T F <p>contingent.</p> <pre><code>It is not the case that John is hungry or John is not grumpy.\n</code></pre> ~( p or ~q F T T T F T T F F F T T T F F F"},{"location":"Ling/Semantics/formal_semantics/#material-implication","title":"Material implication \u2192","text":"<p>converse: q\u2192p. affirming the consequent</p> <p>inverse: ~p\u2192~q. denying the antecedent</p> <p>contrapositive: ~q\u2192~p. modus tollens</p> <p>given p\u2192q.</p> <ul> <li>Sufficient condition: if p is True, p is the necessary condition for q so q must be True.</li> <li>Necessary condition: if q is True, q is not a necessary condition for p so p may or may not be True.</li> </ul> <p>Although it was extremely cold, Sally did not stay indoors.</p> <pre><code>~q-&gt;p\np and ~q\n</code></pre> <p>We get a holiday, or we protest.</p> <pre><code>~p-&gt;q\np or q\n</code></pre> <p>Jone said that Jane helped him.</p> <pre><code>p\np and q\n</code></pre> <p>John\u2019s sister burped</p> <pre><code>p: John has a sister. presupposition, assume it true\nq: This sister burped.\np\np and q\n</code></pre> <p>John arrives before Jane left</p> <pre><code>p before q\n</code></pre> <p>John did not arrive before Jane left.</p> <pre><code>~p before q\np ~before q\n</code></pre>"},{"location":"Ling/Semantics/formal_semantics/#predication-and-quantification","title":"Predication and Quantification","text":"<p>universal quantifier: every, each, all, any, only</p> <p>existential quantifier: a, some, there is \\(\\exist\\), for all \\(\\forall\\)</p> <p>predicate, argument</p> <p>John may like Sally.</p> <pre><code>predicate: may like\n</code></pre> <p>John has a crush on Sally.</p> <pre><code>predicate: has a crush on\n</code></pre> <p>Frank is the father of Susan.</p> <pre><code>predicate: is the father of\n</code></pre> <p>Frank is Susan\u2019s father.</p> <pre><code>predicate: is...'s father\n</code></pre> <p>Adjunct: if, probably, means, of course, early</p> <p>Valent, empty place holder: formal subject</p>"},{"location":"Ling/Semantics/formal_semantics/#collective-and-distributive-readings","title":"Collective and distributive readings","text":"<pre><code>Jogn and Molly ate a pizza.\np: one pizza, ate one together.   distributive\np and q: two pizzas, each ate a pizza.  collective\n</code></pre> <pre><code>Cinthia and Sam have saved 100 dollars.\np: together 100 dollars\np and q: 200 dollars\n</code></pre> <p>Content verb is a predicate, but functional verbs are not</p> <p>John obviously spoke with Jane because he had to.</p> <pre><code>predicate: spoke with\nargument: John, Jane\nadjuncts: obviously, because he had to.\n</code></pre> <p>If I get a chance, I will probably try to avoid the mistake.</p> <pre><code>predicate: will try to \nargument: I, avoid the mistake\nadjuncts: If I get a chance, probably\n</code></pre> <p>John performed Jill\u2019s operation first.</p> <pre><code>\n</code></pre> <p>The person who talk loudly is Jim\u2019s father.</p> <pre><code>predicate: is someone's father\nargument: the person who talk loudly, Jim\nadjunct: \n</code></pre> <p>the talking loudly person</p> <pre><code>predicate: talking\nargument: person\nadjunct: loudly\n</code></pre> <p>predicate: the nodes that are connected in SUD parsing tree</p> <p>universal dependency (UD)</p> <p>syntactic-universal dependency (SUD)</p> <pre><code>graph TD\n  Primitive_units_within_propositions --&gt; Predicates\n  Primitive_units_within_propositions --&gt; Arguments\n    Arguments --&gt; individuals_Terms\n    individuals_Terms --&gt; constants\n    individuals_Terms --&gt; variables\n</code></pre> <p>lexical  predicates vs. syntactic predicates</p> <ul> <li>lexical: content verbs, adjectives, common nouns, some prepositions</li> <li>syntactic: content verbs plus functional elements, adjective plus functional elements, predicate expressions (nouns, prepositions, subordinators, plus functional elements)</li> </ul> <p>individual constants vs. individual variables</p> <ul> <li>names and definite descriptions: John, the first one, the idea</li> <li>quantified phrases: every man, some idea, no paper</li> </ul> <p>e.g. We think John likes Susan.</p> <pre><code>T(w, Lj,s)\n</code></pre> <p>Types of predicates:</p> <ul> <li>converse: husband-wife, above-below, precede-follow</li> <li>symmetric: be the roommate of, be married to, be related to</li> <li>reflexive: see oneself, praise oneself</li> <li>transitive: older than, be north of, be a sibling of</li> </ul> <p>e.g. Monica hid her bicycle.</p> <pre><code>x hide y: Hx,y\nMonica: m\nher bicycle: b\nHm,b\n</code></pre> <p>e.g. Monica did not hide her bicycle.</p> <pre><code>x hide y: Hx,y\nMonica: m\nher bicycle: b\n~Hm,b\n</code></pre> <p>e.g. Monica laughed and cried.</p> <pre><code>Monica: m\nlaugh: L()\ncry: C()\nLm and Cm\n</code></pre> <p>e.g. Jim sent Monica his dog.</p> <pre><code>Sj,m,d\n</code></pre> <p>e.g. William did not help or hinder Mike.</p> <pre><code>~ (H1w,m or H2w,m) \n</code></pre> <p>e.g. Jennifer promise to help.</p> <pre><code>P(j, Hj)\n</code></pre> <p>e.g. Jennifer did not promise to help.</p> <pre><code>~P(j,Hj)\n</code></pre> <p>e.g. Jennifer promise to not laugh.</p> <pre><code>P(j,~Lj)\n</code></pre> <p>e.g. Mike claimed he wanted to help.</p> <pre><code>C(m, W(m/x, Hm/x))\n\nm: Mike\nx: maybe some other\n</code></pre> <p>e.g. John asked Mandy to stop laughing.</p> <pre><code>A(j, m, S(m, Lm))\n</code></pre> <p>e.g. John and Larry called Molly.</p> <pre><code>Cj,m and Cl,m\nC(j and l, m)\n</code></pre> <p>e.g. Molly did not call John and Larry.</p> <pre><code>~C(m, j) and ~C(m, l)\n~C(m, j and l)\n~C(m, j) or ~C(m, l)\n</code></pre> <p>entailment: (universal instantiation) </p> <p>every dog barks \u2192 if something is a dog, then it is a dog.</p> <p>Universal quantification</p> <p>\\(\\forall\\)x (Dx \u2192 Bx)</p> <p>D = (d1, d2, d3,\u2026)</p> <p>\\(\\forall\\)x (Dx \u2192 Bx)= (Bd1 and Bd2 and Bd3, \u2026.)</p> <p>Existential quantification</p> <p>\\(\\exist\\)x (Dx and Bx)</p> <p>D = (d1, d2, d3,\u2026)</p> <p>\\(\\exist\\)x (Dx and Bx) = (Bd1 or Bd2 or Bd3, \u2026.)</p> <p>e.g. Every cat barfed.</p> <pre><code>\\forall x (Cx -&gt; Bx)\n</code></pre> <p>e.g. The cat barfed.</p> <pre><code>Bc\n</code></pre> <p>e.g. Bill fed cat.</p> <pre><code>\\forall x (Cx -&gt; Fb,x)\n</code></pre> <p>e.g. Some dog barked at Fred.</p> <pre><code>\\exist x (Dx and Bx,f)\n</code></pre> <p>e.g. Fred scolded some dog.</p> <pre><code>\\exist x (Dx and Sf,x)\n</code></pre> <p>e.g. Fred and Susan avoid some dog.</p> <pre><code>\\exist x (Dx and Af,x and As,x)\n\\exits x (Dx and Af,x) and \\exist y (Dy and Af,s)\n</code></pre> <p>e.g. No dog barks.</p> <pre><code>\\forall x (Dx -&gt; ~Bx)\n~\\exist x (Dx and Bx)\n</code></pre> <p>e.g. Bill fed no dog.</p> <pre><code>~\\exist x (Dx and Fb,x)\n\\forall x (Dx -&gt; ~Fb,x)\n</code></pre> <p>e.g. No dog barked at Susan or chased Fred.</p> <pre><code>~\\exist x ((Dx and (Bx,s or Cx,f))\n\\forall x ((Dx -&gt; (~Bx,s and ~Cx,f))\n\\forall x ((Dx -&gt; ~(Bx,s or Cx,f))\n</code></pre> <p>Scope ambiguity</p> <p>e.g. Some boy kissed every girl.</p> <pre><code>\\exist x \\forall y (Bx and (Gy -&gt; Kx,y)) = \\exist x(Bx and \\forall y (Gy -&gt; Kx,y))\n\\forall y \\exist x (Gy -&gt; (Bx and Kx,y)) = \\forall y (Gy -&gt; \\exist x (Bx and Kx,y))\n</code></pre> <p>Every boy kissed some girl.</p> <pre><code>\\forall x (Bx -&gt; \\exist (Gy and Kxy)) &lt;=&gt; \\forall x \\exist y (Gy and Kxy)\n</code></pre> <p>Every students did not laugh.</p> <pre><code>\\forall x (Sx -&gt; ~Lx) &lt;=&gt; ! \\exist x (Sx and Lx)\n~\\forall x (Sx -&gt; Lx) &lt;=&gt; \\exist (Sx and ~Lx)\n</code></pre> <p>Not every student laughs.</p> <pre><code>~\\forall x (Sx -&gt; Lx) &lt;=&gt; \\exist (Sx and ~Lx)\n</code></pre> <pre><code>graph TD\n  laughed --&gt; student\n    student --&gt; /every\n    /every --&gt; not\n</code></pre> <p>each studnet did not laugh.</p> <pre><code>\\forall x (Sx -&gt; ~Lx) \n~\\forall x (Sx -&gt; Lx)\n</code></pre>"},{"location":"Ling/Semantics/formal_semantics/#polarity-item","title":"Polarity item","text":"<p>any: negative polarity item</p> <p>John did not pass every exam.</p> <pre><code>~\\forall x (Ex -&gt; Pj,x) &lt;=&gt; \\exist x (Ex and Pj,x)\n\\forall x (Ex -&gt; ~Pj,x)\n</code></pre> <p>John did not pass any exam.</p> <pre><code>\\forall x (Ex -&gt; ~Pj,x)\n</code></pre> <ul> <li>universal quantifier: all, every, each, any</li> <li>existential: some, a/an, one, there is</li> </ul> <p>e.g. </p> <p>Jack saw a rat.</p> <pre><code>\\exist x (Rx and Sj,x) \n</code></pre> <p>Jack is a rat.</p> <p>the quantifier is in the predicate but not the argument. here rat is a constant.</p> <pre><code>Rj\n</code></pre> <p>Jack knows no genius.</p> <p>use not exist to render \u201cno\u201d</p> <pre><code>~\\exist x (Gx and Kj,x)  &lt;=&gt; \\forall x (Gx -&gt; ~Kj,x)\n</code></pre> <p>Jack is no genius. &lt;=&gt; Jack is not a genius.</p> <pre><code>~Gj\n</code></pre> <p>These problems are difficult.</p> <pre><code>Dp\n</code></pre> <p>These problems are difficult ones.</p> <pre><code>Dp\n</code></pre> <p>All the problems are difficult.</p> <pre><code>\\forall x (Px -&gt; Dx)\n</code></pre> <p>These problems are all the problems.</p> <pre><code>Ap\n</code></pre> <p>These problems are not all the problems.</p> <pre><code>~Ap\n</code></pre> <p>Jack is our plumber.</p> <pre><code>Pj\n</code></pre> <p>Our plumer is Jack. (has presupposition)</p> <pre><code>Pj\n</code></pre> <p>Everything counts.</p> <p>whether thing includes animate and inanimate.</p> <pre><code>\\forall x (Cx)\n\\forall x (Tx -&gt; Cx)\n</code></pre> <p>Everybody counts.</p> <pre><code>*\\forall x (Cx)\n\\forall x (Px -&gt; Cx)\n</code></pre> <p>predicates</p> <ul> <li>content words</li> <li>adjectives</li> <li>predicative expressions (common nouns, adjectives, preposition, subordinators)</li> <li> <p>some prepositions.</p> <p>The present under the tree is big. (prepositions that gives location)</p> </li> <li> <p>argument nouns.</p> </li> </ul> <p>common nouns</p> <ul> <li>John is a teacher. Tj</li> <li>Every teacher was present. \\forall x (Tx \u2192 Px)</li> <li>The teacher was present. Pt</li> </ul> <p>content verbs are the core of syntactic predicates</p> <p>adjectives are most always the core of syntactic predicates.</p> <p>e.g. Mike\u2019s wife thinks Mikes if lazy.</p> <ul> <li>thinks (Mike\u2019s wife, Mike is Lazy) - propositional</li> <li>\u2018s (Mike, wife) \u2018Mike has a wife\u2019 - presuppositional: does not affect the truth value</li> <li>is lazy (Mike) - intensional: does not affect the truth value</li> </ul> <p>predicates inside individual constants are presuppositional</p> <p>A thin man was present.</p> <ul> <li>was present (a thin man)</li> <li>thin (a man)</li> <li>\\exist x (Mx and Tx and Px)</li> </ul> <p>predicates inside \u2026 .are propositional</p> <p>e.g. Every barking is harmless</p> <p>has true or false impact on the truth</p> <pre><code>\\forall x ((Dx and Bx) -&gt; Hx)\n</code></pre> <p>this proposition has to show up in the predicate</p> <p>The barking dog is harmless.</p> <pre><code>Hd\n</code></pre> <p>the presupposition does not show in the predicate</p> <p>John avoids every dog he sees.</p> <pre><code>\\forall x ((Dx and Sj,x) -&gt; Aj,x)\n</code></pre> <p>John said every dog barks.</p> <p>intensional</p> <pre><code>Sj\nS(j,\\forall x (Dx -&gt; Bx)) \nSj,I  ; I for intensional argument predicate\n</code></pre>"},{"location":"Ling/Semantics/formal_semantics/#adjunct-predicates","title":"Adjunct predicates","text":"<p>Jane probably teased Sam last night</p> <ul> <li>teased (Jane, Sam)</li> <li>probably (Jane, teased Sam last night) - model adverbs</li> <li>last night (Jane teased Sam) - temporal adjuncts</li> </ul> <p>John arrived drunk.</p> <ul> <li>arrived (John)</li> <li>drunk (John)</li> </ul> <p>Jim burped twice.</p> <p>twice: propositional or presuppositional</p> <p>Susan did not cheat yesterday.</p> <p>Mary stayed because John stayed.</p> <ul> <li>stayed (Mary)</li> <li>stayed (John)</li> <li>because (Mary stayed, John stayed)</li> </ul> <p>Mary did not stay because John stayed</p> <ul> <li>~stay (Mary)</li> <li>~because ()</li> </ul>"},{"location":"Ling/Semantics/formal_semantics/#restricted-quantification","title":"restricted quantification","text":"<p>Every boy was hungry</p> <pre><code>\\forall x: Bx(Hx)\n</code></pre> <p>Some boy was hungry.</p> <pre><code>\\exist x: Bx(Hx)\n</code></pre> <p>Every cat barfed.</p> <pre><code>\\forall x: Cx(Bx)\n</code></pre> <p>Bill fed every cat.</p> <pre><code>\\forall x (Cx, Fb,x)\n\\forall x: Cx(Fb,x)\n</code></pre> <p>Some dog barked at Fred.</p> <pre><code>\\exist x (Dx, Bx,f)\n\\exist x: Dx(Bx,f)\n</code></pre> <p>Fred and Susan avoid some dog.</p> <pre><code>\\exist x(Dx and (Af,x and As,x))\n\\exist x: Dx (Af,x and Af,x)\n</code></pre> <p>No dog barks.</p> <pre><code>~\\exist x (Dx and Bx) &lt;=&gt; ~\\exist x: Dx (Bx)\n</code></pre>"},{"location":"Ling/Semantics/formal_semantics/#formal-predicate-semantics","title":"Formal Predicate Semantics","text":"<pre><code>graph TD\n  Semantic_Rules --&gt; Model\n  Semantic_Rules --&gt; Valuation_Function\n    Model --&gt; Universe_of_Discourse\n    Model --&gt; Interpretation_Function\n    Universe_of_Discourse --&gt; entities\n</code></pre> <ul> <li>model M:<ul> <li>Universe of discourse in which all constants have clearly assigned values</li> <li>A limited part of a world (real or imagined), a discourse context</li> <li>Clearly defined</li> <li>Values of linguistics expressions known</li> </ul> </li> <li>universe/domain of discourse U/D<ul> <li>Constants all the constants in M (set members)</li> </ul> </li> <li> <p>interpretation function I</p> <ul> <li>Assign a value to an individual constant</li> </ul> <pre><code>I(name) \u2192 meaning\n</code></pre> </li> <li> <p>assignment function g[x/e]</p> <ul> <li>Assign a value to an individual variable</li> <li>g iterates all the variables and assigns the value</li> <li>g() := for x in domain of e</li> </ul> <pre><code>g(type of object) -&gt; meaning\n</code></pre> </li> <li> <p>valuation function V</p> <ul> <li>Assigns a value 1 or 0 to a wffs. (propositions)</li> </ul> <pre><code>V(p) = 1/0\nV(Bs) = 1/0\n</code></pre> </li> <li> <p>[[\\alpha]]^M the denotation of \\alpha wrt M (same as interpretation function I)</p> <pre><code>[[name]]^M -&gt; meaning\n</code></pre> </li> </ul>"},{"location":"Ling/Semantics/formal_semantics/#relation","title":"Relation","text":"<ul> <li>if t is a constant, [[]]^{M,g} = I(t)</li> <li>if t is a variable, [[]]^{M,g} = g(t)</li> </ul>"},{"location":"Ling/Syntax/","title":"Syntax","text":"<p>\u4e0d\u597d\u8bf4 \u65bd\u5de5\u4e2d</p> <p>\u76ee\u5f55</p> <ul> <li>\u8f6c\u6362\u751f\u6210\u8bed\u6cd5</li> <li>\u666e\u904d\u8bed\u6cd5</li> <li>\u4f9d\u5b58\u53e5\u6cd5</li> </ul>"},{"location":"Ling/Syntax/conv_gen/","title":"\u8f6c\u6362\u751f\u6210\u53e5\u6cd5","text":""},{"location":"Ling/Syntax/conv_gen/#x-bar-theory","title":"X-bar theory","text":"<p>\u751f\u6210\u53e5\u6cd5\u548c\u6210\u5206\u53e5\u6cd5\u4e4b\u95f4\u7684\u533a\u522b</p> <pre><code>[The big book of poems with the blue cover] is on the table.\n</code></pre> <p>\u6210\u5206\u53e5\u6cd5\u505a\u51fa\u6765\uff0csubject\u662f\u4e00\u4e2a\u9ad8\u5ea6\u4e3a1\u7684\u6811</p> <p>\u53e5\u5b50\u4e4b\u95f4\u7684\u6210\u5206\u901a\u8fc7\u4e24\u4e24\u7ec4\u5408\u8fd8\u80fd\u505a\u51fa\u65b0\u7684\u9ad8\u5ea6</p> <p>one-replacement</p> <ul> <li>The big one with the blue cover is on the table</li> <li>The big one of poems with the blue cover is on the table</li> <li>The big book of poems with the blue one is on the table</li> <li>I bought the big book of poems with the blue cover but not that one</li> <li>I bought the book of poems with the blue cover but not that one with the red cover</li> </ul> <p>\u7528one-replacement\u63a2\u6d4b\u9650\u5b9a\u8bcd\u4e4b\u95f4\u7684\u8ddd\u79bb\u5173\u7cfb\uff08\u52a8\u8bcd\u7528did so/did too\uff09</p> <ul> <li>\u5982\u679c\u4e24\u4e2a\u6210\u5206\u4e4b\u95f4\u4e0d\u80fd\u63d2\u5165one\u8bf4\u660e\u5173\u7cfb\u66f4\u8fd1</li> <li>\u5982\u679c\u4e24\u4e2a\u6210\u5206\u53ef\u4ee5\u88ab\u4e00\u4e2aone\u66ff\u4ee3\u8bf4\u660e\u5173\u7cfb\u66f4\u8fd1</li> </ul> <pre><code>Mika loved the policeman intensively.\nSusan did so half-heartedly.\n*Susan did so the baker.\n</code></pre> <pre><code>graph TD\n  NP --&gt; D\n    D --&gt; the\n    NP --&gt; N1\n    N1 --&gt; AdjP\n    AdjP --&gt; big\n    N1 --&gt; N2\n    N2 --&gt; N3\n    N2 --&gt; PP1\n    N3 --&gt; N\n    N --&gt; book\n    N3 --&gt; PP2\n    PP2 --&gt; of_poems\n    PP1 --&gt; with_the_blue_cover\n</code></pre> <p>\u52a0\u5165\u4e86bar level\uff0cbook\u4e0eof poems\u6784\u6210\u4e00\u4e2a\u4e2d\u95f4\u6295\u5c04X-bar\uff0c\u6784\u6210\u4e00\u4e2aconstituent\u3002\u4f7f\u5f97\u6bcf\u4e2a\u53e5\u5b50\u90fd\u80fd\u88ab\u753b\u6210\u4e00\u4e2a\u4e8c\u53c9\u6811\u5f62\u5f0f</p> <p>\u751f\u6210\u53e5\u6cd5\u5b66\u6d3e\uff1a\u4e0a\u4e16\u7eaa\u4e94\u5341\u5e74\u4ee3\u3002classical theory and standard theory\u30021988\u5e74\u63d0\u51fa\u4e86government and binding theory\u3002lexicon, D-S, S-S, PF, LF</p>"},{"location":"Ling/Syntax/conv_gen/#n-bar","title":"N-bar","text":"<p>\u539f\u672cNP\u6839\u636e\u4e00\u7cfb\u5217\u89c4\u5219\u4e0d\u662f\u4e8c\u53c9\u6811\uff0c\u6bd4\u5982N\u2192</p> <p>N-bar theory\u8ba4\u4e3a\u53ef\u4ee5\u90fd\u53d8\u6210\u4e8c\u53c9\u6811</p> <p>\u89c4\u5219\u6bd4\u5982</p> <pre><code>NP -&gt; Det N'\nN' -&gt; AP N'\nN' -&gt; N PP\n</code></pre> <p>\u7b2c\u4e00\u6761\u79f0\u4e3a\u4e00\u4e2a\u6700\u5927\u6295\u5c04</p>"},{"location":"Ling/Syntax/conv_gen/#v-bar","title":"V-bar","text":"<pre><code>VP -&gt; V'   // \u9884\u7559\u4e00\u4e2a\u4f4d\u7f6e\u7ed9\u6f5c\u5728\u7684specifier\uff0c\u5373\u4f7f\u6ca1\u6709\nV' -&gt; AdvP V' | V' PP | V' AdvP\nV' -&gt; V(NP)\n</code></pre>"},{"location":"Ling/Syntax/conv_gen/#abj-bar","title":"Abj-bar","text":"<pre><code>AdjP -&gt; Adj'\nAdj' -&gt; (AdvP) Adj' | Adj' (AdvP)\nAdj' -&gt; Adj(PP)\n</code></pre>"},{"location":"Ling/Syntax/conv_gen/#p-bar","title":"P-bar","text":"<pre><code>PP -&gt; P'\nP' -&gt; P'(PP) | (AdvP)P'\nP' -&gt; P(NP)\n</code></pre> <p>\u4e2d\u5fc3\u8bcdX \u2192 \u4e2d\u95f4\u6295\u5c04X\u2019 \u2192 \u6700\u5927\u6295\u5c04XP\u3002\u4e0d\u80fd\u76f4\u63a5\u5230XP\uff0c\u4e00\u5b9a\u8981\u6709\u4e2d\u95f4\u6295\u5c04</p>"},{"location":"Ling/Syntax/conv_gen/#parameter-of-word-orders","title":"Parameter of Word Orders \u7ba1\u7ea6\u8bba\uff0c \u539f\u5219\u4e0e\u53c2\u6570\u7406\u8bba","text":"<p>\u6839\u636eX-bar\u7406\u8bba\uff0c\u53ef\u4ee5\u5bf9\u4e00\u4e9b\u8bed\u8a00\u7684\u4e0d\u540c\u8bed\u5e8f\uff08\u5982SVO\uff0cSOV\u7b49\uff09\u7ed9\u51fa\u8bed\u6cd5\u53c2\u6570\u5316\u89e3\u91ca</p> <p>specifier\u548ccomplement\u53ef\u4ee5\u51fa\u73b0\u5728\u5176sister\u7684\u4e24\u4fa7\uff0c\u8fd9\u79cd\u6295\u5c04\u7684\u5de6\u53f3\u533a\u522b\u88ab\u79f0\u4e3aparameter setting</p>"},{"location":"Ling/Syntax/conv_gen/#_2","title":"\u753b\u6811\u7684","text":"<ul> <li>\u9996\u5148\u754c\u5b9a\u6210\u5206\u5728X-bar\u6846\u67b6\u4e2d\u7684\u53e5\u6cd5\u4f4d\u7f6e\uff0c\u5373complement &amp; adjunct &amp; specifier &amp; head</li> <li>\u5148\u627e\u5230head\uff08\u4ee5\u53ca\u5176sister complement\u6210\u5206\uff09\uff0c\u6ce8\u610fcomplement &amp; adjunct\uff08&amp; specifier\uff09\u5fc5\u987b\u4e5f\u8981\u662f\u72ec\u7acb\u7684XP\u6210\u5206\uff0c\u4e0d\u80fd\u662f\u4e00\u4e2a\u5355\u72ec\u7684X</li> <li>\u6309\u7167head \u2192 complement \u2192 adjunct \u2192 specifier \u7684\u987a\u5e8f\u753b\u6811</li> <li>Even if there is no specifier, put an XP on top of the projection. This indicates that there are no more modifiers of the head X.</li> <li>Keep in mind that none of the X-bar rules are optional. This indicates that there are no more modifiers of the head X.</li> </ul>"},{"location":"Ling/Syntax/conv_gen/#head-movement","title":"Head Movement \u4e2d\u5fc3\u8bed\u79fb\u4f4d","text":"<p>head movement: movement from a head to another head position</p> <p>\u53e5\u5b50\u53ef\u4ee5\u53d1\u751fmovement\u7684\u6807\u5fd7</p>"},{"location":"Ling/Syntax/conv_gen/#-reading","title":"- \u4e00\u4e2a\u53e5\u6cd5\u7ed3\u6784\u5177\u6709\u4e24\u79cdreading","text":"<p>shortest movement</p> <p>shortest: let the path of a movement be the set of nodes that dominate the original position of the moved item, and do not dominate the leading site.</p>"},{"location":"Ling/Syntax/ud_sud/","title":"\u4f9d\u5b58\u53e5\u6cd5 UD &amp; SUD","text":"<p>In full spelling, Universal Dependency gammar and Surface Syntax Universal Dependency grammar.</p>"},{"location":"Ling/Syntax/ud_sud/#tools","title":"Tools","text":"<p>AllenNLP Demo CoreNLP Tool</p>"},{"location":"Ling/Syntax/ud_sud/#concepts","title":"Concepts","text":"<ul> <li>UD: universal dependency</li> <li>SUD: (surface) syntactic universal dependency</li> </ul>"},{"location":"Ling/Syntax/ud_sud/#ud","title":"UD","text":"<p>Dependency grammar\u00a0(DG) is an approach to the study of the syntax and grammar of natural languages that is quite distinct from\u00a0phrase structure grammar\u00a0(PSG), which is also known as\u00a0constituency grammar. The modern history of DG begins with\u00a0Lucien Tesni\u00e8re's major oeuvre (1959), whereas the modern history of PSG begins arguably with\u00a0Noam Chomsky's first prominent work (1957).</p> <p>DG views linguistic structures in terms of a\u00a0one-to-one mapping\u00a0of atomic linguistic units to the nodes in structure, whereas PSG assumes a\u00a0one-to-one-or-more mapping. The distinction is clearly visible when one compares the tree structures. The next trees are taken from the\u00a0Wikipedia article on DG:</p> <p></p>"},{"location":"Ling/Syntax/ud_sud/#sud","title":"SUD","text":"<p>[Surface Syntactic Universal Dependencies (SUD) | SUD](https://surfacesyntacticud.github.io/ SUD is an annotation scheme for syntactic dependency treebanks, and has a nearly perfect degree of two-way convertibility with the Universal Dependencies scheme (UD). Contrary to UD, it is based on syntactic criteria (favoring functional heads) and the relations are defined on distributional and functional bases.</p> <p></p>"},{"location":"Ling/Syntax/ud_sud/#general-principles-of-sud","title":"General principles of SUD","text":"<ul> <li>The definition of relations is based on syntactic positions rather than semantic positions.</li> <li>Functional heads (instead of lexical heads): The head of a unit is the distributional head, that is, the element that control the distribution of the unit.</li> <li>SUD relations are organized in taxonomic hierarchy: A relation that is the daughter of another one inherits its syntactic properties with the addition of specific properties. Indeed, sometimes, we cannot take into account all possible distinctions, either because of the conversion from different treebanks not containing enough information, or because a sentence does not allow to make a clear decision.</li> <li>It is possible to distinguish between\u00a0arguments\u00a0and\u00a0modifiers: Although this distinction involves semantic criteria (an argument of a lexical unit L is an obligatory participant in the semantic description of L), we consider that it is hard to avoid, because especially for verb dependents, most language have special functions.</li> <li>A\u00a0multiple coordination, such as\u00a0John, Mary and Peter, is analyzed as a chain instead of a bouquet: One of the main argument for the chain-analysis is that it reduces the dependency length.</li> </ul>"},{"location":"Ling/Syntax/ud_sud/#specific-sud-relations","title":"Specific SUD relations","text":"<p>SUD has 4 specific syntactic relations and a few extended relations: - subj - udep - comp     - comp:aux     - comp:cleft     - comp:obj     - comp:obl     - comp:pred - mod</p>"},{"location":"Ling/Syntax/uni_gram/","title":"\u666e\u904d\u8bed\u6cd5 Universal Grammar","text":""},{"location":"Ling/Syntax/uni_gram/#introduction","title":"Introduction","text":"<p>Syntax\u7684\u610f\u4e49\u5728\u4e8e\u627e\u5230\u4e00\u79cdgrammar\uff0c\u80fd\u591f\u751f\u6210\u67d0\u79cd\u8bed\u8a00\u4e2d\u7684\u6240\u6709\u53e5\u5b50\u3002</p> <p>Grammar\u662f\u57fa\u4e8e\u89c4\u5219\u7684\uff0c\u4e0d\u80fd\u7528high order of statistical approximation to English\u6765\u66ff\u4ee3\u3002</p>"},{"location":"Ling/Syntax/uni_gram/#basic-linguistics","title":"Basic Linguistics","text":"<p>DFA &amp; Regular language</p> <p>\u8c13\u8bcd\u903b\u8f91\u3002\u4f46\u6211\u4eec\u4e0d\u5173\u5fc3\u5176\u4e2d\u7684\u8bed\u4e49\uff0c\u53ea\u9700\u5173\u5fc3CFG\u7684\u5f62\u5f0f\u3002</p>"},{"location":"Ling/Syntax/uni_gram/#phrase-structure-limitation","title":"Phrase Structure &amp; Limitation","text":"<p>\u81ea\u7136\u8bed\u8a00\u7684CFG\uff08\u4ee5\u82f1\u8bed\u4e3a\u4f8b\uff09\u6784\u6210\u8bed\u6cd5\u7684\u57fa\u7840\u90e8\u5206\u3002</p> <p>\u4f46\u8fd9\u6837\u63cf\u8ff0\u81ea\u7136\u8bed\u8a00\u7684\u5de5\u5177\u8fd8\u662f\u4e0d\u80fd\u751f\u6210\u6240\u6709\u5408\u7406\u7684\u53e5\u5b50\uff0c\u6545\u5f15\u5165a more powerful model combining phrase structure and grammatical transformation\uff0c\u5f97\u5230\u8f6c\u6362-\u751f\u6210\u6587\u6cd5\u3002</p>"},{"location":"Ling/Syntax/uni_gram/#on-the-goals-of-linguistic-theory","title":"On the Goals of Linguistic Theory","text":"<p>\u4ece\u4e00\u822c\u8bed\u6cd5\u4e2d\u5f52\u7eb3\u51faUG\u7406\u8bba\uff0c\u5bf9UG\u7684\u671f\u671b\u7531\u5f3a\u81f3\u5f31\u4e3a\uff1a</p> <ul> <li>\u80fd\u901a\u8fc7UG\u81ea\u52a8\u5316\u5730\u4ece\u8bed\u6599\u5e93\u4e2d\u5f52\u7eb3\u8bed\u6cd5</li> <li>\u80fd\u7528UG\u81ea\u52a8\u5316\u5224\u5b9a\u4e00\u4e2a\u8bed\u6cd5\u662f\u5426\u6700\u4f18\u5730\u603b\u7ed3\u4e86\u8bed\u6599\u5e93\u4e2d\u7684\u53e5\u5b50</li> <li>\u80fd\u7528UG\u81ea\u52a8\u5316\u5224\u5b9a\u4e24\u4e2a\u8bed\u6cd5\u4e2d\u54ea\u4e2a\u66f4\u7b26\u5408\u8bed\u6599\u5e93\u4e2d\u7684\u53e5\u5b50</li> </ul>"},{"location":"Ling/Syntax/uni_gram/#the-explanatory-power-of-linguistic-theory","title":"The Explanatory Power of Linguistic Theory","text":"<p>\u5e94\u8be5\u7814\u7a76competence\uff0c\u800c\u975eperformance</p>"},{"location":"Other/","title":"\u7d22\u5f15","text":"<p>TODO\uff08\u8fd8\u6ca1\u5199\uff09</p>"},{"location":"Other/24fall/","title":"24fall \u7533\u8bf7\u8bb0\u5f55","text":"<p>\u5199\u4e8e 2024 \u5e74 3 \u6708\u5e95\uff0c\u7ed3\u679c\u5dee\u4e0d\u591a\u51fa\u4e86\uff0c\u6839\u636e\u7ed3\u679c\u53cd\u601d\u4e0b\u5728\u7533\u8bf7\u8def\u7a0b\u4e2d\u505a\u5f97\u5bf9\u4e0e\u4e0d\u5bf9\u7684\u5730\u65b9\uff0c\u5e76\u603b\u7ed3\u4e00\u4e9b\u6709\u7528\u8d44\u6e90\uff0c\u5e0c\u671b\u53ef\u4ee5\u5e2e\u5230\u548c\u6211\u4e00\u6837\u7eaf DIY \u7533\u8bf7\u7684\u540c\u5b66\u3002</p>"},{"location":"Other/24fall/#master","title":"master \u9009\u6821","text":"<p>master \u9009\u9879\u76ee\u4e3b\u8981\u7ecf\u5386\u4e86\u201c\u6dfb\u52a0\u5fc3\u613f\u5355\u201d+\u201c\u7b5b\u9009\u201d\u4e24\u4e2a\u6d41\u7a0b\u3002</p> <p>\u201c\u6dfb\u52a0\u5fc3\u613f\u5355\u201d\u4e00\u6b65\u4e3b\u8981\u53c2\u7167 zju \u5185\u90e8\u7684\u98de\u8dc3\u624b\u518c + OpenCSApp + GlobalCS + \u5370\u8c61\uff08e.g. \u5b66\u957f\u5b66\u59d0\uff0c1p3a\uff09\u7b49\uff0c\u5148\u5217\u51fa\u5927\u7ea6\u4e09\u4e94\u5341\u4e2a\u5408\u9002\u7684\u9879\u76ee\u3002</p> <p>\u201c\u7b5b\u9009\u201d\u4e00\u6b65\u4e2d\u518d\u8003\u8651\u5404\u79cd\u9650\u5236\u6761\u4ef6\uff08\u6bd4\u5982\u6211\u7684\uff1a\u5b66\u8d39\u9ad8/\u5c31\u4e1a\u5bfc\u5411\u7684/\u4e0d\u5b89\u5168\u7684/\u5f3a\u5236\u8bed\u8a00\u7684\u4e0d\u7533\uff09\uff0c\u4ee5\u53ca\u6240\u6709\u7533\u5230\u4e5f\u4e0d\u60f3\u53bb\u7684\u90a3\u79cd\u4fdd\u5e95\u9879\u76ee\u4e5f\u65e0\u9700\u7533\u8bf7\u3002 \u5b66\u8d39\u53ef\u4ee5\u53c2\u7167\u7684\u8d44\u6599\u6bd4\u5982 Compare cost of living between cities \u548c\u5404\u4e2a\u9879\u76ee\u5b98\u65b9\u62a5\u7684\u6570\u76ee\u3002</p> <p>\u53e6\u5916\u5728 UCSD CS37 \u7684\u9879\u76ee\u9875\u9762\u770b\u8fc7\u201c\u5982\u679c\u786e\u5b9a\u7533\u8bf7 PhD\uff0c\u5c31\u4e0d\u8981\u7533\u8bf7 master \u4e86\u201d\uff0c\u53ef\u80fd\u80fd\u4ee3\u8868\u4e00\u90e8\u5206\u5b66\u6821\u8fd9\u4e24\u79cd\u9879\u76ee\u7684\u5b9a\u4f4d\u3002</p>"},{"location":"Other/24fall/#phd","title":"PhD \u9009\u5bfc","text":"<p>\u6211\u9996\u5148\u9760\u8ddf\u7ec4\u91cc\u540c\u884c\u8ba4\u8bc6\u7684\u5b66\u957f\u5b66\u59d0\u4ea4\u6d41\uff0c\u88ab\u63a8\u8350\u4e86\u4e00\u4e9b\u5f53\u5e74\u6b63\u5728\u62db\u751f\u7684\u4f18\u79c0 prof\u3002\u6b64\u5916\u81ea\u5df1\u4e3b\u8981\u53c2\u8003\u4e86 CSrankings\uff0c\u6328\u4e2a\u6253\u5f00 Google Scholar \u53bb\u8bfb\u6587\u7ae0\u3002\u4e5f\u6709\u53d1\u6325\u6211\u7684\u793e\u725b\u5c5e\u6027\u53bb X(twitter) \u4e0a\u628a\u5927\u5bb6\u90fd\u5173\u6ce8\u7136\u540e\u5237\u6587\u7ae0\u8fd9\u6837\u505a\u3002\u7ecf\u5e38\u5237 Arxiv \u4e5f\u662f\u597d\u4e60\u60ef\uff0c\u53ef\u60dc\u6211\u8fd8\u6ca1\u517b\u6210\u3002\u8fd9\u4e9b\u90fd\u6709\u5229\u4e8e\u773c\u719f\u6559\u6388\uff0c\u4e00\u6bb5\u65f6\u95f4\u540e\u5c31\u53ef\u5f62\u6210\u81ea\u5df1\u7684\u9009\u62e9\u3002</p> <p>\u53e6\u5916\u9009\u5b66\u6821\u65f6\u5982\u9700\u53c2\u8003 Stipend\uff1aCSStipendRankings\u3002</p> <p>\u6700\u7ec8 master + PhD \u6211\u4e00\u5171\u7533\u8bf7\u4e86\u4f3c\u4e4e\u662f 14 \u4e2a\uff08\u542b 3 \u4e2a\u514d\u8d39\uff09\u3002\u8fd9\u4e2a\u6570\u76ee\u56e0\u4eba\u800c\u5f02\uff0c\u4e3b\u8981\u770b\u4e0e\u63a8\u8350\u4eba\u6c9f\u901a\u3002\u8eab\u8fb9\u4e5f\u6709\u670b\u53cb\u7533\u5230 50 \u4e2a\u7684\uff0c\u60ca\u4eba\u4f46\u662f\u5c0a\u91cd\u7406\u89e3\u3002</p> <p>\u6700\u65b0\u5728 24fall \u7fa4\u91cc\u770b\u5230\u7684\u9009\u5bfc\u5e08\u7684\u5176\u5b83\u5de5\u5177</p> <ul> <li>Computer Science Professor Profile - Drafty</li> <li>Computer Science Open Data</li> <li>Computer Science Open Rankings</li> </ul>"},{"location":"Other/24fall/#_1","title":"\u8bed\u8a00\u6210\u7ee9","text":"<p>\u5982\u679c\u7533\u8bf7 PhD\uff0c\u90a3\u4e48\u5927\u5bb6\u7684\u7ecf\u9a8c\u6765\u770b\u8fc7\u7ebf\u5c31\u591f\uff0c\u4e0d\u592a\u4f1a\u4e25\u5361\uff0c\u91cd\u70b9\u65e0\u9700\u5728\u8bed\u8a00\u6210\u7ee9\u3002</p> <p>master \u5219\u5e94\u8be5\u662f\u8bed\u8a00\u6210\u7ee9\u8d8a\u9ad8\u8d8a\u597d\u4e86\uff0c\u5c24\u5176\u5982\u679c\u7ee9\u70b9 below average\uff0c\u90a3\u4e48\u8bed\u8a00\u786e\u5b9e\u9700\u8981\u8003\u9ad8\u4e00\u4e9b\u3002</p> <p>\u4ee5\u53ca\u6211\u5728\u7533\u8bf7\u5b63\u7684\u51e0\u4e2a\u6708\u91cc\u4e00\u76f4\u6ca1\u80fd\u6253\u5f00 GRE \u7684\u5b98\u7f51\uff08\u4e0d\u662f\u5bc6\u7801\u4e0d\u6b63\u786e\uff0c\u5bc6\u7801\u901a\u8fc7\u53d1\u90ae\u4ef6\u5c31\u80fd\u627e\u56de\u6765\u4e86\uff0c\u662f\u767b\u5f55\u540e\u8df3\u8f6c\u53ea\u80fd\u5230 error \u9875\u9762\uff09\uff0c\u6362\u7f51\u6362\u8bbe\u5907\u6362\ud83e\ude9c\u90fd\u8fd8\u662f\u4e00\u76f4\u5237\u65b0\u4e0d\u51fa\u6765\uff0c\u5bfc\u81f4\u8003\u4e86\u4e5f\u6ca1\u6cd5\u67e5\u5206\uff0c\u6ca1\u6cd5\u591a\u6dfb\u52a0\u9001\u5206\u3002\u56e0\u4e3a\u4e3b\u8981\u76ee\u6807\u8fd8\u662f\u7533 PhD \u4e8e\u662f\u6700\u540e\u5c31\u4e0d\u518d\u6323\u624e\u4e86\u3002GRE \u5b98\u7f51\u662f\u7ecf\u5e38\u62bd\u98ce\u7684\uff0c\u770b\u5230\u8eab\u8fb9\u4e00\u4e9b master \u7533\u8bf7\u8005\u4f1a\u9009\u62e9\u5728\u5927\u4e09\u5c31\u628a GRE \u8003\u51fa\u6765\uff0c\u5efa\u8bae\u4e5f\u50cf\u4ed6\u4eec\u4e00\u6837\u63d0\u524d\u51c6\u5907\uff0c\u5982\u679c\u4e5f\u767b\u9646\u4e0d\u8fdb\u53bb\uff0c\u591a\u6c42\u52a9\u6c42\u52a9\u8eab\u8fb9\u7684\u4eba\u501f\u8bbe\u5907\u8bd5\u8bd5\uff0c\u6700\u597d\u63d0\u524d\u51c6\u5907\uff0c\u907f\u514d\u5230\u7533\u8bf7\u5b63\u53d1\u73b0\u5f71\u54cd\u9001\u5206\u3002</p> <p>\u9001\u5206 Code \u8fd8\u6709\u4e00\u4e9b\u5e16\u5b50\u603b\u7ed3\u8fc7\u7684\uff08\u53ef\u81ea\u884c\u641c\u7d22\uff09\uff0cTG \u90fd\u662f\u7528\u7684\u662f\u540c\u4e00\u4e2a\u9001\u5206 Code\uff0c\u4ee5\u53ca GRE \u5728\u8003\u573a\u91cc\u90a3\u6b21\u514d\u8d39\u9001\u5206\u673a\u4f1a\u4e0d\u7528\u80cc\u9001\u5206 Code\uff0c\u5728\u8003\u573a\u91cc\u4e5f\u53ef\u4ee5\u6309\u6821\u540d\u641c\u7d22\u6dfb\u52a0\u7684\u3002</p>"},{"location":"Other/24fall/#_2","title":"\u63a8\u8350\u4fe1","text":"<p>\u63a8\u8350\u4fe1\u5982\u4f55\u88ab\u5ba1\u6838\uff1a\u636e\u8bf4\u4e00\u822c\u5728\u62db\u751f\u5b98\u624b\u91cc\uff0c\u63a8\u8350\u4fe1\u662f\u4e0e\u7533\u8bf7\u8005\u7684\u5176\u5b83\u6750\u6599\u4e00\u8d77\u62fc\u6210\u4e00\u957f\u4efd\u591a\u9875 PDF \u4e00\u8d77\u88ab\u5ba1\u6838\u7684\uff0c\u51e0\u4efd\u63a8\u8350\u4fe1\u524d\u540e\u5e76\u5217\u3002\u6240\u4ee5\u5173\u4e8e\u201c\u98ce\u683c\u660e\u663e\u4e0d\u660e\u663e\u201d\u201c\u5f3a\u5ea6\u660e\u663e\u4e0d\u660e\u663e\u201d\u201c\u4f1a\u5ba1\u6587\u4ef6\u4fe1\u606f\u201d\u7b49\u95ee\u9898\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b\u5ba1\u6750\u6599\u7684\u8fd9\u4e2a\u573a\u666f\uff0c\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u6765\u8003\u8651\u3002</p> <p>\u5173\u4e8e\u627e\u591a\u4f4d\u63a8\u8350\u4eba\uff1a\u5927\u7ea6 12.2 \u53f7\u770b\u5230 PhD \u7533\u8bf7\u7fa4\u91cc\u6709\u4eba\u8bf4\uff0c\u5176\u5b9e\u4e0d\u8981\u627e 3 \u4e2a\u63a8\u8350\u4eba\u5c31\u7ed3\u675f\uff0c\u6700\u597d\u63d0\u524d\u627e 4 \u5230 5 \u4e2a\uff0c\u56e0\u4e3a\u591a\u4ea4\u6ca1\u6709\u5173\u7cfb\uff0c\u5927\u90e8\u5206\u5b66\u6821\u90fd\u6709\u6dfb\u52a0\u591a\u4e2a\u63a8\u8350\u4eba\u7684\u9009\u9879\uff08\u6211\u7684\u9009\u6821\u91cc\u53ea\u6709loo\u548cumich\u4e0a\u9650\u4e09\u4e2a\uff09\uff0c\u4f46\u662f\u7ecf\u5e38\u6709\u63a8\u8350\u4eba\u5fd9\u5fd8\u4e86\u6700\u540e\u6ca1\u4ea4\u7684\u60c5\u51b5\u3002\u518d\u95ee\u53e6\u4e00\u4e2a\u7fa4\uff0c\u5f97\u77e5\u5982\u679c\u662f US PhD\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u6709\u4e00\u4e2a\u63a8\u8350\u4eba\u5fd8\u4e86\u4ea4\u62d2\u4f60\uff0c\u4f46\u662f\u5927\u591a master 3 \u5c01\u4ea4\u4e0d\u9f50\u5c31\u65e0\u6cd5\u5f00\u59cb\u5ba1\u6750\u6599\uff0c\u53ef\u80fd\u56e0\u6b64\u4e00\u76f4\u7559\u5728\u6c60\u5b50\u91cc\uff0c\u6216\u8005\u53ef\u80fd\u56e0\u6b64\u9ed8\u62d2\u3002\u4e5f\u6709\u542c\u8bf4\u5982\u679c\u672c\u8be5\u4ea4 3 \u5c01\u4ea4\u4e86 4 \u5c01\uff0c\u53ef\u80fd\u56e0\u6b64\u964d\u4f4e\u5176\u4e2d\u6700\u91cd\u8981\u7684\u90a3\u5c01\u7684\u6548\u529b\uff0c\u8fd9\u70b9\u5982\u679c\u6536\u5230 &gt;3 \u5c01\u63a8\u8350\u4fe1\u5176\u5b9e\u53ef\u4ee5\u901a\u8fc7 exclude \u4e00\u4efd\u6765\u89e3\u51b3\uff0c\u7ecf\u9a8c\u6765\u770b\u70b9 exclude \u65f6\u63a8\u8350\u4eba\u5e94\u8be5\u4e0d\u4f1a\u6536\u5230\u901a\u77e5\u3002</p> <p>\u540c\u4e00\u5b66\u6821\u53ef\u4ee5\u5171\u7528\u63a8\u8350\u4fe1\u5417: \u4e00\u822c\u4e0d\u80fd\u3002\u6211\u7533\u8bf7\u7684\u5b66\u6821\u4e2d\u53ef\u4ee5\u7684\u6709</p> <ul> <li>Uchi \u7684 master \u548c PhD</li> <li>Rice \u7684 master \u548c PhD</li> <li>CMU \u540c\u7533\u8bf7\u7cfb\u7edf\u4e4b\u95f4\u7684\u4e0d\u540c\u9879\u76ee\u3002\u6bd4\u5982 MSCS \u548c CS PhD \u5185\u90e8\u5171\u4eab\uff0cMLT \u6240\u5728\u7684\u90a3\u4e00\u5927\u4e32\u7684 AI \u9879\u76ee\u5185\u90e8\u5171\u4eab\uff0c\u4e24\u4e2a\u7cfb\u7edf\u4e4b\u95f4\u4e0d\u5171\u4eab\u3002</li> <li>UCSD \u540c\u5b66\u9662\u7684 ms \u548c PhD \u4e4b\u95f4\u4e0d\u80fd\u5171\u4eab\u63a8\u8350\u4fe1\uff0c\u636e\u8bf4 CS \u548c CE \u7684 master \u4e4b\u95f4\u662f\u4e92\u901a\u7684\uff0cCS/CE \u548c GIS master \u4e4b\u95f4\u5219\u4e0d\u4e92\u901a\u3002</li> <li>Umich \u76ee\u524d\u53ea\u77e5\u9053\u81f3\u5c11 ms \u548c meng \u4e4b\u95f4\u4e0d\u80fd\u5171\u4eab\u63a8\u8350\u4fe1\u3002</li> <li>\u54e5\u5927\u636e\u7fa4\u53cb\u8bf4 cs ce ee \u7684 master \u4e5f\u662f\u5171\u7528\u7684\u3002</li> <li>NEU \u7533\u8bf7\u7b2c\u4e00\u4e2a\u540e\uff0c\u9644\u5e26\u7684\u4e24\u4e2a\u514d\u8d39\u9879\u76ee\u63a8\u8350\u4fe1\u4e0e\u7b2c\u4e00\u4e2a\u5171\u4eab\u3002</li> </ul> <p>\u63a8\u8350\u4fe1\u7cfb\u7edf\u4e0d\u5927\u667a\u80fd\u7684\u5730\u65b9:</p> <ul> <li>Umich \u63a8\u8350\u4eba\u4e00\u5171\u7ed9\u5b9a\u4e86 3 \u4e2a\u7a7a\uff0c\u5982\u679c\u63a8\u8350\u4eba\u586b\u9519\u4e86\u53ef\u4ee5\u66f4\u6539\u63a8\u8350\u4eba\uff0c\u66f4\u6539\u540e\u65b0\u7684\u63a8\u8350\u4eba\u4f1a\u6536\u5230\u90ae\u4ef6\uff0c\u4f46\u5728\u4f60\u7684\u7533\u8bf7\u91cc\u8fd8\u662f\u663e\u793a\u539f\u6765\u63a8\u8350\u4eba\u3002</li> <li>Waterloo \u7684\u63a8\u8350\u4fe1\u5728\u7b2c\u4e00\u6b65\u63d0\u4ea4\u540e 1-3 \u5929\u5185\u5411\u63a8\u8350\u4eba\u53d1\u51fa\uff0c\u7533\u8bf7\u4eba\u4e0d\u53ef\u51b3\u5b9a\uff0c\u4e5f\u4e0d\u53ef\u4ee5\u51b3\u5b9a\u8865\u53d1\u7684\u65f6\u673a\u3002\u6211\u7684\u63a8\u8350\u4eba\u6700\u5feb\u6536\u5230\u7684\u662f\u63d0\u4ea4\u540e 1 \u5929\u5de6\u53f3\uff0c\u6bd4\u6211\u6536\u5230 Quest \u8d26\u53f7\u7684\u90a3\u5c01\u90ae\u4ef6\u8fd8\u7a0d\u5feb\u534a\u5929\u5de6\u53f3\u3002\u62db\u751f\u5b98\u544a\u8bc9\u6211\u4e4b\u540e\u5728 ddl \u524d 14 \u5929\u548c 7 \u5929\u8fd8\u4f1a\u5404\u81ea\u52a8\u53d1\u4e00\u6b21\u50ac\u4fe1\u3002\u90ae\u4ef6\u95ee\u62db\u751f\u5b98\u8865\u53d1\u989d\u5916\u7684\u50ac\u4fe1\u597d\u50cf\u4e00\u822c\u4f1a\u88ab\u62d2\u7edd\u3002</li> </ul> <p>\u542c\u8bf4\u8fc7\u67e5 IP/MAC \u5730\u5740\u7684: \u76ee\u524d\u5927\u8305\u548c\u54e5\u5927\u6709\u89c1\u8fc7 DP \u6536\u5230\u5b66\u6821\u90ae\u4ef6\u8bf4\u67e5\u5230\u4fe1\u662f\u81ea\u5df1\u53d1\u7684\u3002\u636e\u6b64\u770b\u6765\u662f\u4e0d\u662f\u85e4\u6821\u4e25\u4e00\u4e9b\u3002IP/MAC addr \u5982\u679c\u67e5\u5e94\u8be5\u662f\u989d\u5916\u67e5\u7684\uff0c\u4e0d\u662f\u5ba1\u6750\u6599\u7684\u62db\u751f\u5b98\u8d1f\u8d23\u67e5\u3002</p>"},{"location":"Other/24fall/#_3","title":"\u5957\u74f7","text":"<p>\u4e00\u5f00\u59cb\u770b\u5230\u7684\u6d88\u606f\u662f\u5957\u5230\u74f7\u624d\u80fd\u7533\u8bf7\uff0c\u540e\u6765\u770b\u5230 n+e's blog \u77e5\u9053\u4e5f\u4e0d\u4e00\u5b9a\uff0c\u5148\u6295\u4e86\u518d\u5957\u4e5f\u53ef\u4ee5\uff0c\u6709\u4e9b\u6559\u6388\u7279\u522b\u5fd9\uff0c\u53ef\u80fd\u62c5\u5fc3\u6709\u4e9b\u5b66\u751f\u804a\u4e86\u4e5f\u6ca1\u6295\uff0c\u53ef\u80fd\u503e\u5411\u5b66\u751f\u786e\u5b9e\u6295\u4e86\u518d\u804a\uff0c\u6216\u8005\u7b49\u5230\u4ed6\u4eec\u81ea\u5df1\u4ece\u6c60\u5b50\u91cc\u635e\u4eba\u7684\u65f6\u95f4\u7ebf\u518d\u804a\u3002\u4e5f\u53ef\u4ee5\u53c2\u8003\u5f3a prof \u548c\u5f3a committee \u5b66\u6821\u7684\u4e00\u4e9b\u540d\u5355\uff08\u76ee\u524d\u770b\u5230\u4e00\u4e2a CS PhD\u5f3acommittee&amp;\u5f3aprofessor List(\u4ec5\u4f9b\u53c2\u8003) \u4e0d\u8fc7\u4e0d\u4e00\u5b9a\u5f88\u51c6\uff0c\u5370\u8c61\u4e2d\u91cc\u9762\u8bf4\u662f\u5f3a committee \u7684\u4e00\u4e9b\u4e5f\u6709\u4e0e prof \u804a\u597d\u5c31\u5f55\u4e86\u7684 DP\uff09\u3002</p> <p>double \u7684\u7fa4\u91cc\u8fd8\u6709\u4e2a\u670b\u53cb\u505a\u4e86\u4e2a\u533f\u540d google docs \u4f9b\u7fa4\u53cb\u5206\u4eab\u62ff\u5230\u9762\u8bd5\u7684\u5927\u81f4\u65f6\u95f4\u6bb5\uff0c\u5171\u4eab\u5404\u5b66\u6821\u9762\u8bd5\u53d1\u5230\u4ec0\u4e48\u8fdb\u5ea6\u4e86\uff0c\u53ef\u60dc\u8be5\u8868\u683c\u4e0d\u5e0c\u671b\u88ab\u5916\u4f20\u3002\u4ee5\u540e\u7684\u7533\u8bf7\u7fa4\u91cc\u5927\u5bb6\u4e5f\u53ef\u4ee5\u81ea\u53d1\u521b\u5efa\u4e00\u4e2a\u3002</p>"},{"location":"Other/24fall/#_4","title":"\u7f51\u7533","text":"<p>\u5bfb\u627e\u7f51\u7533\u9875\u9762\u7684\u901a\u7528\u505a\u6cd5\u4e00\u822c\u662f\u641c\u7d22\u5f15\u64ce\u641c\u7d22 <code>\u5b66\u6821\u548c program \u540d\u5b57</code> + <code>application</code>\uff0c\u7ed3\u679c\u524d\u51e0\u6761\u4e2d\u4e00\u822c\u5c31\u542b\u6b63\u786e\u7684\u7533\u8bf7\u754c\u9762\u3002\u7f51\u7533\u5185\u5bb9\u611f\u89c9\u8fd8\u662f\u9700\u8981\u81ea\u5df1\u586b\uff0c\u4e0d\u8981\u627e\u4ee3\u586b\uff0c\u4fe1\u606f\u5f88\u591a\uff0c\u975e\u672c\u4eba\u4e0d\u719f\u6089\u592a\u5bb9\u6613\u586b\u9519\u4e86\u3002</p> <p>\u4e0b\u9762\u8bb0\u5f55\u4e00\u4e9b program-specific \u7684\u5751\u70b9\u3002</p> <p>CMU: \u5982\u679c\u76f4\u63a5\u641c\u7d22 MLT application \u51fa\u73b0\u7684\u4ee5\u4e0b\u9875\u9762\u53ca\u7533\u8bf7\u94fe\u63a5\u662f\u627e\u4e0d\u5230MLT\u9879\u76ee\u7684</p> <p></p> <p>Application Management (cmu.edu) \u8fd9\u4e2a\u9875\u9762\u548c\u4ee5\u4e0b\u622a\u56fe\u662f\u6b63\u786e\u7684\uff0c\u540c\u7406mscv\u548cmsaii\u4ec0\u4e48\u7684\u9879\u76ee\u4e5f\u5728\u8fd9\u91cc\u7533\u8bf7\u3002</p> <p></p> <p>mscs \u7684 video essay \u662f\u63d0\u524d\u5f55\u597d\u4e86\u4e0a\u4f20\u5230 youtube \u8fd9\u79cd\u7684\uff0c\u53ef\u4ee5\u81ea\u5df1\u968f\u610f\u5f55\u591a\u6b21\uff0c\u4f46\u6211\u4f30\u8ba1\u4e0d\u8981\u62fc\u63a5\u75d5\u8ff9\u592a\u91cd\uff0c\u4e00\u53e3\u6c14\u8bf4\u4e0b\u6765\u6700\u597d\u3002\u5185\u5bb9\u6211\u8bb0\u5f97\u6ca1\u6709\u9650\u5236\uff0c\u968f\u610f\u8bbe\u8ba1\u81ea\u6211\u4ecb\u7ecd\uff0c\u636e\u8bf4\u4e3b\u8981\u662f\u4e3a\u4e86\u770b\u7533\u8bf7\u4eba\u6027\u683c\u3001\u53e3\u8bed\u3001\u8868\u8fbe\u80fd\u529b\u4e4b\u7c7b\u7684\u6f5c\u5728\u7279\u70b9\u3002</p> <p>\u5728\u7ec6\u5206\u7684\u90a3\u51e0\u4e2a ai \u9879\u76ee\u7684 video earry \u662f\u9650 3 \u6b21\u673a\u4f1a\uff0c\u6bcf\u6b21\u968f\u673a\u95ee\u9898\uff0c\u9650\u65f6\u51c6\u5907\uff0c\u9650\u65f6\u8bf4\u3002\u6211\u770b\u5230\u7684\u7f51\u4e0a\u7684\u5e16\u5b50\u8bf4\u597d\u50cf miis ini ece\uff08\u8bb0\u4e0d\u4f4f\u8fd9\u51e0\u4e2a\u9879\u76ee\u540d\u5b57\uff0c\u603b\u4e4b\u7c7b\u4f3c\uff09\u662f 30s \u51c6\u5907\uff0c180s \u8bf4\uff0c\u95ee\u7684\u95ee\u9898\u5927\u7c7b\u6709\uff1a\u4f60\u961f\u53cb\u600e\u4e48\u8bc4\u4ef7\u4f60\uff0c\u4f60\u6536\u5230\u7684\u961f\u53cb\u7684\u4e00\u6761\u8d1f\u9762\u8bc4\u4ef7\u662f\uff0c\u4f60\u600e\u4e48\u9886\u5bfc project\uff0c\u4e00\u4e2a\u6210\u529f\u7684 project \u5bf9\u4f60\u6765\u8bf4\u662f\u600e\u6837\u7684\uff0c\u4f60\u559c\u6b22\u4ec0\u4e48\u6c9f\u901a\u6a21\u5f0f\uff0c\u5bf9\u4f60\u6765\u8bf4\u4ec0\u4e48\u662f\u5f88\u96be\u505a\u7684\u51b3\u5b9a\uff0c\u4f60\u9047\u5230\u632b\u6298\u4e86\u4f1a\u600e\u4e48\u6837...\u8fd9\u79cd\u5f88\u8ddf course project \u548c\u5408\u4f5c\u6709\u5173\u7684\u3002</p> <p>\u4f46\u662f\u6211\u5728 mlt \u91cc\u6253\u5f00\u9047\u5230\u7684\u662f 10s \u51c6\u5907\uff0c210s \u8bf4\uff0c\u9047\u5230\u7684\u4e24\u4e2a\u95ee\u9898\u4f9b\u53c2\u8003:</p> <ul> <li>\u8bb2\u8bb2\u4e3a\u4ec0\u4e48\u9009\u6211\u4eec\u9879\u76ee</li> <li>\u4f60\u7684\u7814\u7a76\u5174\u8da3\u90fd\u6709\u4ec0\u4e48</li> </ul> <p>\u8fd9\u6837\u5f88\u7814\u7a76\u5bfc\u5411\u7684\u95ee\u9898\uff0c\u4e00\u822c\u90fd\u6765\u81ea SoP\u3002</p> <p>UWaterloo: \u7533\u8bf7\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff0c\u7b2c\u4e00\u4e2a\u9636\u6bb5\u91cc\u4ea4\u6389\u624d\u80fd\u5728\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u4e0a\u4f20 cv \u6587\u4e66 \u8bed\u8a00\u6210\u7ee9\u7b49\u4e1c\u897f\uff0c\u7b2c\u4e8c\u9636\u6bb5\u7684\u94fe\u63a5\u4f1a\u5728\u7b2c\u4e00\u9636\u6bb5\u540e 2-4 \u5929\u6536\u5230\u3002\u7533\u8bf7\u8d39\u5728\u7b2c\u4e00\u9636\u6bb5\u4ea4\u3002\u63a8\u8350\u4eba\u5728\u7b2c\u4e00\u9636\u6bb5\u6dfb\u52a0\uff0c\u90ae\u4ef6\u968f\u7740\u7b2c\u4e00\u9636\u6bb5\u63d0\u4ea4\u88ab\u53d1\u51fa\u3002\u7b2c\u4e00\u4e2a\u9636\u6bb5\u4e00\u5b9a\u8981\u6bd4 ddl \u63d0\u524d\u4e24\u4e09\u5929\u4ea4\u3002\u4e14 loo \u7684\u7cfb\u7edf\u597d\u50cf\u7ef4\u62a4\u6bd4\u8f83\u9891\u7e41\uff0c\u53ef\u4ee5\u591a\u9884\u7559\u4e00\u4e9b\u65f6\u95f4\u3002</p> <p>UT-Austin: \u540c\u7533\u8bf7\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff0c\u7b2c\u4e00\u4e2a\u9636\u6bb5\u4ed8\u6b3e\uff0c\u5ba1\u6838 1-3 \u5929\u540e\u624d\u80fd\u5f00\u59cb\u7b2c\u4e8c\u4e2a\u9636\u6bb5\uff08\u542b\u6dfb\u52a0\u63a8\u8350\u4eba\u7b49\uff09\u3002\u7b2c\u4e00\u9636\u6bb5\u63d0\u4ea4\u4e00\u5b9a\u8981\u6bd4 ddl \u65e9\u4e24\u4e09\u5929\u3002</p> <p>Umich\uff1a\u7f51\u7533\u7cfb\u7edf\u4e00\u5f00\u59cb\u56db\u4e94\u4e2a\u9875\u9762\u8981\u987a\u5e8f\u586b\u5b8c\uff08\u5305\u62ec\u6dfb\u52a0\u63a8\u8350\u4eba\u7684\u90e8\u5206\uff09\uff0c\u540e\u9762\u7684\u9875\u9762\u624d\u80fd\u8df3\u7740\u586b\u3002</p>"},{"location":"Other/24fall/#_5","title":"\u6587\u4e66","text":"<p>\u6211\u5199\u6587\u4e66\u4e3b\u8981\u53c2\u7167\u7684\u8d44\u6599\u6709 CS-SOP, CMU sop guideline, \u548c\u4e24\u4e09\u4f4d\u5b66\u957f\u5b66\u59d0\u548c peer \u7684\u4fee\u6539\u610f\u89c1\u3002</p> <p>CV \u6211\u8ba4\u4e3a\u4e00\u822c\u5927\u5bb6\u505a\u51fa\u6765\u7684\u90fd\u6ca1\u95ee\u9898\uff0c\u5c11\u91cf\u503c\u5f97 comment \u7684\u4e00\u4e9b\u70b9\u6709\uff1a</p> <ul> <li>\u4e00\u822c\u4e0d\u7528\u653e\u7167\u7247\uff0c\u7167\u7247\u5728\u4e2a\u4eba\u4e3b\u9875\u5373\u53ef\u3002</li> <li>\u9009\u62e9\u7684\u76f8\u5173\u8bfe\u7a0b\u7684\u4f18\u5148\u7ea7\uff1a\u5206\u6570\u597d &gt; \u76f8\u5173\u6027\u9ad8</li> <li>\u7ecf\u5386/pub/project \u4e09\u9879\u91cc\uff0c\u9009\u62e9\u81ea\u5df1\u6700\u4e30\u5bcc\u6700\u60f3\u5c55\u73b0\u7684\u653e\u5728\u524d\u9762\uff0c\u4e0d\u592a\u4e30\u5bcc\u7684\u653e\u5728\u540e\u9762\u3002</li> <li>\u6bcf\u6761\u7ecf\u5386\uff0c\u53ef\u6309\u7167 <code>(1) \u8d1f\u8d23\u4ec0\u4e48 (2) \u9047\u5230\u4e86\u4ec0\u4e48\u95ee\u9898 (3) \u81ea\u5df1\u63d0\u51fa\u4e86\u4ec0\u4e48\u65b9\u6cd5\u6765\u89e3\u51b3 (4) \u8fbe\u5230\u4e86\u600e\u6837\u7684\u91cf\u5316\u7684\u7ed3\u679c</code> \u7684\u516c\u5f0f\u6765\u5206\u4e3a\u4e09\u56db\u4e2a\u5c0f\u70b9\u5199\u3002\u8fd9\u6837\u5927\u81f4\u4fdd\u8bc1\u4e86\u591a\u6761\u7ecf\u5386\u7684\u683c\u5f0f\u6574\u9f50\uff0c\u4e14\u6bd4\u8f83\u660e\u786e\u81ea\u5df1\u7684\u8d21\u732e\uff0c\u89c2\u611f\u4e0a\u4f1a\u6e05\u6670\u4e9b\u3002</li> <li>\u5b66\u672f CV \uff08PhD\uff0c\u7814\u7a76 master\uff09\u53ef\u4e0d\u52a0\u7231\u597d/\u793e\u56e2\u6d3b\u52a8\u7b49\u3002</li> <li>\u6709\u90e8\u5206\u9879\u76ee\u8981\u6c42 CV \u6709\u56fa\u5b9a\u683c\u5f0f\uff0c\u6bd4\u5982\u8bb0\u5f97 Umich \u8981\u6c42\u5e26\u6709 Umich \u5b57\u6837\uff0c\u90e8\u5206\u9879\u76ee\u8981\u6c42\u628a\u7533\u8bf7 ID \u5199\u8fdb CV \u7b49\uff0c\u6ce8\u610f\u9605\u8bfb\u7f51\u7533\u9875\u9762\u7684\u8981\u6c42\u3002</li> </ul> <p>SOP</p> <p>SOP \u53ef\u4ee5\u7406\u89e3\u4e3a\u5173\u4e8e\u81ea\u5df1\u5b66\u672f\u7ecf\u5386\u548c\u8ba1\u5212\u7684\u4e00\u4efd\u6587\u4e66\u3002\u7ecf\u9a8c\u6765\u770b\u5982\u679c\u4e00\u4e9b\u5b66\u6821\u53ea\u8981\u6c42 PS \u4e0d\u8981\u6c42 SOP\uff0c\u90a3\u4e48 PS \u5e94\u5f53\u5f53\u4f5c\u4e00\u4e2a\u683c\u5f0f\u4e0d\u90a3\u4e48\u4e25\u683c\u7684 SOP \u6765\u5199\u3002</p> <p>\u6240\u6709\u9879\u76ee\u7684\u6587\u4e66\u52a0\u8d77\u6765\u5927\u7ea6\u751f\u4ea7\u4e86\u8fd1 20 \u4efd\uff0c\u5176\u4e2d\u5982\u679c\u5185\u5bb9\u76f8\u4f3c\u7684\u5408\u5e76\u4e3a\u540c\u4e00\u4efd\uff0c\u90a3\u5927\u6982\u4e5f\u6709\u516d\u4e03\u4efd\u5b8c\u5168\u4e0d\u540c\u7684\u3002\u4e00\u4e2a\u6709\u70b9\u7384\u5b66\u7684\u611f\u89c9\u662f\u6211\u4e13\u95e8\u4e3a\u5176\u5199\u4e86\u4e00\u4efd\u65b0\u6587\u4e66\u7684\u9879\u76ee\uff0cPhD \u5bfc\u5e08\u5c31\u53d1\u4e86\u9762\u8bd5\uff0cmaster \u5c31\u53d1\u4e86 offer\uff0c\u800c\u4ece\u522b\u7684\u9879\u76ee\u6539\u6539\u800c\u6765\u7684\u90a3\u4e9b\u4e00\u5b9a\u6ca1\u6709\u53d1\u9762\u8bd5/\u62ff offer\u3002\u6709\u53ef\u80fd\u56e0\u679c\u5173\u7cfb\u6709\u201c\u6211\u611f\u89c9\u4e0d\u4f1a\u4e2d/\u4e0d\u662f\u7279\u522b\u5408\u9002\u201d -&gt; \u201c\u56e0\u6b64\u66f4\u52a0\u6ca1\u6709\u8ba4\u771f\u51c6\u5907\u6587\u4e66\u201d -&gt; \u201c\u56e0\u6b64\u5f53\u7136\u62ff\u4e0d\u5230\u201d\u8fd9\u4e00\u5c42\u3002</p> <p>\u4e00\u822c\u662f\u81ea\u5df1\u62df\u597d\u8349\u7a3f\u540e\u4ea4\u7ed9\u5b66\u957f\u5b66\u59d0\u6216 peer \u6765\u6539\uff0c\u540e\u6765\u8d76 ddl \u5927\u5bb6\u90fd\u6bd4\u8f83\u5fd9\uff0c\u6709\u4e9b\u5c31\u81ea\u5df1\u5199\u597d\u76f4\u63a5\u4ea4\u4e86\u3002\u5012\u662f\u89c9\u5f97\u81ea\u5df1\u5199\u5b8c\u6709\u6ca1\u6709\u627e\u4eba review \u8fd9\u70b9\u5bf9\u7ed3\u679c\u7684\u5f71\u54cd\u6ca1\u6709\u5f88\u5927\uff0cPhD \u5bfc\u5e08\u4eec\u4e5f\u8868\u793a\u770b\u91cd\u7684\u66f4\u591a\u662f\u65b9\u5411 match \u4e0d match\uff0c\u4fe1\u606f\u8868\u8fbe\u6b63\u786e\u5230\u4f4d\u662f\u6700\u91cd\u8981\u7684\uff0c\u8bed\u8a00\u7f8e\u5316\u5012\u5728\u5176\u6b21\u3002\u4e14\u4e00\u4e9b\u5b66\u6821\uff08Waterloo, UW, Uchi\uff09\u6587\u4e66\u4e5f\u4f1a\u9650\u5236 500/1000 words\uff0c\u8fd9\u6837\u77ed\u7684\u9650\u5236\u91cc\u786e\u5b9e\u8868\u8fbe\u4e0d\u4e86\u591a\u5c11\uff0c\u4e5f\u8bf4\u660e\u4f20\u8fbe\u4fe1\u606f\u662f\u7b2c\u4e00\u4f4d\u7684\u3002\u81ea\u5df1\u5199\u4e5f\u6709\u4e00\u5957\u6bd4\u8f83\u9ad8\u6548\u7684\u6d41\u7a0b\uff0c\u7075\u611f\u6765\u6e90\u4e8e\u5927\u4e00\u4e0a EW1 \u7684\u9b54\u9b3c\u5916\u6559\u8001\u5e08\u8bb2\u7684 shitty first draft \u6982\u5ff5\uff1a\u7b2c\u4e00\u7a3f\u96be\u4e0b\u624b\u5e38\u5e38\u662f\u56e0\u4e3a\u60f3\u8981\u540c\u65f6\u517c\u987e\u4fe1\u606f\u548c\u8868\u8fbe\uff0c\u90a3\u4e48\u628a\u4e24\u4ef6\u4e8b\u62c6\u5f00\uff0c\u7b2c\u4e00\u7a3f\u5148\u4e00\u53e3\u6c14\u5199\u51fa\u4e2a\u8868\u8fbe\u4fe1\u606f\u5168\u9762\u6b63\u786e\u4f46\u7528\u8bed\u975e\u5e38 shitty \u7684\u6587\u7ae0\uff0c\u7b2c\u4e8c\u7a3f\u53ea\u987e\u4f18\u5316\u8868\u8fbe\uff0c\u90a3\u5c31\u4e0d\u4f1a\u5361\u58f3\u3002\u6211\u5199\u7684\u6d41\u7a0b\u4e5f\u5927\u81f4\u662f\u8fd9\u6837\uff0c\u5148\u628a\u6240\u6709\u60f3\u8868\u8fbe\u7684\u4fe1\u606f\u5410\u51fa\u6765\uff0c\u5f62\u6210\u4e00\u7bc7\u81f3\u5c11\u957f\u5f97\u50cf\u6587\u7ae0\u7684\u6587\u7ae0\uff08\u4f46\u751a\u81f3\u4e0d\u4f1a\u987e\u53ca\u7528\u4ec0\u4e48\u8bed\uff0c\u7ecf\u5e38\u4e00\u534a\u82f1\u8bed\u4e00\u534a\u4e2d\u6587\uff09\uff0c\u7136\u540e\u4e00\u6bb5\u4e00\u6bb5\u8f93\u5165 ChatGPT \u8bf7\u5b83 \"please refine this paragraph from a {\u6587\u4f53} for me: {paragraph}\"\uff0c\u518d\u4e00\u53e5\u4e00\u53e5\u6bd4\u5bf9 ChatGPT \u8f93\u51fa\u7ed3\u679c\u4e0e\u81ea\u5df1\u7684\u5199\u4f5c\uff0c\u624b\u52a8\u628a\u4e00\u4e2a\u89c9\u5f97\u66f4\u597d\u7684\u7ed3\u679c\u6572\u56de\u5230\u6587\u7ae0\u4e2d\uff08\u8fd9\u91cc\u6211\u4e2a\u4eba\u8ba4\u4e3a\u8fc7\u4e00\u904d\u8111\u5b50\u540e\u4eb2\u81ea\u51b3\u5b9a\u600e\u4e48\u6539\u662f\u6bd4\u76f4\u63a5\u590d\u5236\u66f4\u9ad8\u6548\u66f4\u660e\u667a\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a ChatGPT \u5bf9\u4e8e\u7533\u8bf7\u6587\u4e66\u7c7b\u7684\u6587\u4f53\u5e38\u5e38\u6709\u4e00\u5957\u7279\u522b\u56fa\u5b9a\u4e14\u5b98\u65b9\u7684\u7528\u8bcd\uff0c\u4f7f\u5176\u4e0d\u592a\u5408\u9002\u4e14\u592a\u5bb9\u6613\u8bc6\u522b\u51fa\u662f\u673a\u5668\u5199\u7684\uff09\u3002\u6700\u540e\u628a\u8fd9\u904d\u81ea\u5df1\u6539\u8fc7\u7684\u5199\u4f5c\u8fc7\u4e00\u904d grammarly \u68c0\u67e5\u8bed\u6cd5\uff0c\u7b80\u5355\u68c0\u67e5\u540e\u5c31\u57fa\u672c\u53ef\u4ee5\u5b9a\u7a3f\u4e86\u3002</p> <p>\u6b64\u5916\u8fd8\u6709\u4e00\u70b9\u662f\uff0c\u6211\u4e2a\u4eba\u8ba4\u4e3a\u5728\u5ba1\u6587\u4e66\u65f6\u6bcf\u4efd\u6587\u4e66 5-10 \u5206\u949f\uff0c\u53ef\u80fd\u6240\u6709\u4eba\u80fd\u4e00\u773c\u770b\u5230\u7684\u662f (1) \u5c0f\u6807\u9898 (2) \u52a0\u7c97\u7684\u5173\u952e\u8bcd\uff0c\u6700\u540e\u624d\u4f1a\u7ec6\u770b\u5927\u91cf\u666e\u901a\u6587\u5b57\u3002\u4e00\u4e2a\u4f8b\u5b50\u662f\u6211\u4e0a\u6b21\u53c2\u52a0\u4e00\u95e8\u8bfe\u7684 group tutorial \u65f6\uff0c\u5f53\u65f6\u5c0f\u7ec4\u6210\u5458\u5408\u5199\u4e86\u4e00\u4efd rp\uff0c\u5176\u4e2d\u6211\u5199\u7684\u662f\u6700\u6666\u6da9\u7684 lit review\uff0c\u5373\u4e13\u4e1a\u672f\u8bed\u5bc6\u5ea6\u6700\u9ad8\u8fd8\u53e5\u5b50\u6700\u957f\uff0c\u4f46\u662f\u6211\u7ed9\u6bcf\u4e2a\u5206\u4e3b\u9898\u52a0\u4e86\u5c0f\u6807\u9898\uff0c\u5176\u5b83\u540c\u5b66\u5199\u7684\u90e8\u5206\u6ca1\u6709\u52a0\u3002\u8001\u5e08\u5728\u4e0e\u6211\u4eec\u8c08\u8bdd\u7684\u95f4\u9699\u7784\u4e86\u51e0\u773c\u6211\u4eec\u7684\u6587\u4ef6\uff0c\u77ed\u77ed\u7684\u65f6\u95f4\u91cc\u5c31\u53ea\u770b\u8fdb\u53bb\u4e86 lit review \u7684\u5c0f\u6807\u9898\uff0c\u70b9\u8bc4\u4e86\u4e00\u4e0b\u8fd9\u90e8\u5206\u3002\u56e0\u6b64\u505a\u6e05\u6670\u7684\u5206\u6bb5\u548c\u5c0f\u6807\u9898\u5f88\u91cd\u8981\uff08\u8fd9\u91cc\u771f\u7684\u6709\u70b9\u50cf\u8bbe\u8ba1\u56db\u539f\u5219\uff0c\u5bf9\u6bd4/\u805a\u5408\uff09\uff0c\u5c24\u5176\u662f\u65f6\u95f4\u7cbe\u529b\u4e0d\u591f\u65f6\uff0c\u5176\u4e2d\u7684\u7ec6\u8282\u5185\u5bb9\u8bf4\u4e0d\u5b9a\u4e0d\u7528\u62a0\u592a\u7ec6\uff0c\u53ef\u80fd\u62db\u751f\u5b98\u548c prof \u5728\u77ed\u6682 review \u7684\u65f6\u95f4\u91cc\u6355\u6349\u5230\u7684\u4fe1\u606f\u4e5f\u53ea\u6709\u5c11\u91cf\u6700\u663e\u773c\u7684\u3002\u56e0\u6b64\u6211\u7684\u6bcf\u4efd\u6587\u4e66\u90fd\u505a\u4e86\u52a0\u7c97 \\noindent \u8fd9\u6837\u7684\u5c0f\u6807\u9898\u6765\u5f15\u5bfc\u62db\u751f\u5b98\uff0c\u4e0d\u77e5\u9053\u5408\u4e0d\u5408\u89c4\uff0c\u4f46\u662f\u5e94\u8be5\u4e5f\u6ca1\u6709\u89c4\u77e9\uff0c\u4e14 CS-SOP \u4e0a\u4e0d\u5c11\u6587\u4e66\u4e5f\u662f\u8fd9\u6837\u52a0\u5c0f\u6807\u9898\u5199\u7684\uff0c\u6211\u8ba4\u4e3a\u8fd9\u6837\u6bd4\u8f83\u6709\u5229\u6240\u4ee5\u5c31\u8fd9\u6837\u505a\u597d\u4e86\u3002</p> <p>\u9644\u81ea\u5df1\u9605\u8bfb CS-SOP \u540e\u5199\u81ea\u5df1\u7684 SOP \u524d\uff0c\u7ed9\u81ea\u5df1\u5199\u7684\u7ed3\u6784\u6307\u5bfc</p> <ul> <li> <p>\u7b2c\u4e00\u6bb5\uff1axxx \u662f\u5f88\u91cd\u8981\u7684\uff0c\u6211\u4e00\u76f4\u5bf9 xxx \u611f\u5174\u8da3\uff0c\u6211\u9009\u62e9\u5728 x \u6821\u8bfb phd is naturally a continuation of my previous interests and experiences\u3002\u5177\u4f53\u800c\u8a00\uff0c\u6211\u7684\u7814\u7a76\u5174\u8da3\u4e3a\uff1a          ( \u6b64\u5904\u53ef\u4ee5\u6709\u5c0f\u6807\u9898\u548c\u4e00\u53e5\u8bdd\u4ecb\u7ecd          \\1. AAA aaaa          \\2. BBB bbbb          \\3. CCC cccc             )</p> </li> <li> <p>\u7b2c\u4e8c\u6bb5\uff1aAAA \uff08\u5c0f\u6807\u9898\u53ef\u4ee5\u5199\u5b8c\u4e00\u6574\u6bb5\u540e\u6700\u540e\u518d\u8d77\uff09</p> <ul> <li>\u4e00\u4e2a\u65b9\u5411\u6709\u591a\u91cd\u8981\u7b80\u4ecb * 1 \u53e5</li> <li>\uff08\u81ea\u5df1\u8fc7\u53bb\u8bfe\u7a0b\u9879\u76ee\uff0c\u5982\u679c\u771f\u7684\u5f88\u91cd\u8981\u7684\u8bdd\u5427\uff09* 1 \u53e5</li> <li>\u81ea\u5df1\u8fc7\u53bb\u7814\u7a76 * 1-3 \u9879</li> <li>\u672a\u6765\u7814\u7a76 * 1-2 \u9879</li> <li>\u5728\u8fd9\u65b9\u9762\u5e0c\u671b\u8fbe\u5230\u7684\u76ee\u6807 * 1 \u53e5</li> </ul> </li> <li> <p>\u7b2c\u4e09\u6bb5\uff1aBBB \u540c\u4e0a</p> </li> <li>\u7b2c\u56db\u6bb5\uff1aCCC \u540c\u4e0a\u4e0a</li> <li>\u7b2c\u4e94\u6bb5\uff1aMoving forward\uff0c\u6211\u6bd5\u4e1a\u540e\u7684\u804c\u4e1a\u76ee\u6807\u662f\u4ec0\u4e48\uff0c\u5b66\u672f\u76ee\u6807\u662f\u4ec0\u4e48</li> <li>\u7b2c\u516d\u6bb5\uff1awhy [program name] and why [school name]\uff0c\u5982\u679c\u662f\u5b66\u672f\u9879\u76ee\u5c31\u591a\u8bb2\u4e9b\u8001\u5e08\u7684\u7814\u7a76\u6709\u591a match\uff0c\u5982\u679c\u662f master \u53ef\u4ee5\u8bf4\u8bf4\u5b66\u6821\u8d44\u6e90\u597d\uff0c\u8bbe\u7f6e\u7684\u8bfe\u7a0b\u5bf9\u81ea\u5df1\u6709\u5e2e\u52a9\u7684\u6709\u54ea\u4e9b\uff0c\u5982\u4f55\u6709\u5229\u4e8e\u81ea\u5df1\u7684\u8ba1\u5212\u3002\u5982\u679c\u662f\u5f3a prof \u5236\u7684\u9879\u76ee\uff0c\u636e\u8bf4\u8fd9\u91cc\u63d0\u5230\u7684\u5bfc\u5e08\u591a\u4e00\u4e9b\u597d\uff0c\u56e0\u4e3a\u53ef\u80fd\u6709\u7684\u8001\u5e08\u641c\u5230\u6587\u4e66\u4e2d\u63d0\u5230\u81ea\u5df1\u624d\u4f1a\u53bb\u9605\u8bfb\u6587\u4e66\u3002\u6ce8\u610f\u90e8\u5206\u660e\u786e\u5199\u7740\u4e0d\u505a\u79d1\u7814\u3001\u4e0d\u8ba9\u5b66\u751f\u627e\u5bfc\u5e08\u7684\u9879\u76ee\u4e0d\u8981\u63d0\u5230\u5b66\u672f\u7406\u60f3\u548c match \u7684\u5bfc\u5e08\uff0c\u6ce8\u610f\u9605\u8bfb\u5177\u4f53\u9879\u76ee\u4ecb\u7ecd\u3002</li> <li>References\uff1a\u81ea\u5df1\u7684\u6587\u7ae0\u4f18\u5148\uff0c\u522b\u4eba\u6587\u7ae0\u4e5f\u53ef</li> </ul> <p>\u6211\u5728\u5199\u6587\u4e66\u4e4b\u524d\uff0c\u4e00\u76f4\u8ba4\u4e3a\u6211\u7684\u8fc7\u53bb\u7814\u7a76\u7ecf\u5386\u4e0e\u6211\u672a\u6765\u7684\u76ee\u6807\u65b9\u5411\u4e0d\u76f8\u4f3c\uff0c\u4f46\u662f\u6700\u540e push \u81ea\u5df1\u5fc5\u987b\u53bb\u5bfb\u627e\u4e00\u4e2a\u5e73\u8861\u70b9\uff0c\u5bfb\u627e\u80fd\u628a\u5b83\u4eec\u90fd\u6982\u62ec\u4f4f\u7684\u4e24\u4e09\u4e2a\u5c0f\u6807\u9898\u3002\u8fd9\u4e24\u4e09\u4e2a\u5c0f\u6807\u9898\u7684\u9009\u62e9\u9996\u5148\u8981\u670d\u52a1\u4e8e\u672a\u6765\u65b9\u5411\uff0c\u7136\u540e\u56e0\u4e3a\u8fc7\u53bb\u7684\u6bcf\u4e2a\u9879\u76ee\u4e0d\u53ef\u80fd\u53ea\u6709\u4e00\u4e2a\u5c5e\u6027/\u9886\u57df\uff0c\u53ef\u4ee5\u9009\u62e9\u80fd\u591f\u670d\u52a1\u4e8e\u672a\u6765\u65b9\u5411\u7684\u65b9\u9762\u6765\u652f\u6491\u8fd9\u4e9b\u5c0f\u6807\u9898\uff0c\u7528\u201c\u6211\u53d7\u5230\u4e86 xx \u65b9\u9762\u7684\u542f\u53d1\u201d\u201c\u5728\u505a\u8be5\u9879\u76ee\u7684\u65f6\u5019\u4e00\u76f4\u5728\u601d\u8003\u67d0\u65b9\u9762\u4e0d\u8db3\u201d\u4e4b\u7c7b\u7684\u8bdd\u8fde\u63a5\u8d77\u6765\u3002\u6700\u540e\u7684\u611f\u609f\u662f\u5199\u4f5c\u6587\u4e66\u7684\u8fc7\u7a0b\uff08\u63cf\u8ff0\u81ea\u5df1\u7684\u8fc7\u7a0b\uff09\u5373\u8ba4\u8bc6\u548c\u5b9a\u4e49\u81ea\u5df1\u8fc7\u53bb\u7684\u7814\u7a76\u7684\u8fc7\u7a0b\uff0c\u611f\u89c9\u5199\u5b8c\u540e\u6211\u5bf9\u4e4b\u524d\u7814\u7a76\u7684\u8ba4\u8bc6\u4e5f\u786e\u5b9e\u53d8\u6210\u4e86\u8fde\u8d2f\u7684\u4e00\u4e2a\u6574\u4f53\uff0c\u4e14\u4ea7\u751f\u4e86\u4e00\u4e9b\u5bf9\u672a\u6765\u7814\u7a76\u7684\u542f\u53d1\u3002</p> <p>\u4ee5\u53ca\u90e8\u5206\u9879\u76ee\u4e5f\u4f1a\u5728\u7f51\u7533\u9875\u9762\u7ed9\u51fa\u6587\u4e66\u5199\u4f5c\u6307\u5bfc\uff08e.g. UCSD, CMU\uff09\uff0c\u53ef\u7559\u610f\u9605\u8bfb\u8fd9\u4e9b\u6307\u5bfc\uff0c\u6309\u5177\u4f53\u9879\u76ee\u7684\u6765\u589e\u5220\u6539\u3002</p> <p>PS </p> <p>\u5982\u4e0a\u6587\u63d0\u5230\uff0c\u5982\u679c\u90e8\u5206\u5b66\u6821\u53ea\u8981\u6c42\u4e00\u4efd PS\uff0c\u90a3\u4e48\u5e94\u5f53\u662f\u9700\u8981\u5f53\u4f5c SOP \u6765\u5199\u5b66\u672f\u548c\u804c\u4e1a\u5185\u5bb9\u7684\u3002\u6211\u662f\u8fd9\u6837\u89c4\u5212\u7ed3\u6784\u7684\uff1a</p> <ul> <li>\u7b2c\u4e00\u6bb5\uff1a\u4e00\u4e9b hook\uff0c\u8bb2\u4e00\u70b9\u5bf9\u81ea\u5df1\u603b\u7ed3\u6027\u7684\u8bdd/tattoo\uff0c\u6216\u8005\u5e72\u8106\u76f4\u63a5\u4ece\u201c\u6211\u672c\u79d1\u5f00\u59cb\u5bf9 xxx \u611f\u5174\u8da3\uff0c\u4e8e\u662f\u4e0a\u4e86\u5f88\u591a\u8bfe\u505a\u4e86\u5f88\u591a\u7814\u7a76\u201d\u5e73\u5b9e\u5730\u5f00\u59cb</li> <li>\u7b2c\u4e8c\u6bb5\uff1a\u4e00\u822c\u4e00\u4e24\u53e5\u8bdd\u5e26\u8fc7\u8bfe\u7a0b\uff0c\u6709\u7279\u522b\u51fa\u8272\u7684 score \u6216 coursework \u53ef\u4ee5\u5728\u8fd9\u91cc\u8bf4</li> <li>\u7b2c\u4e09\u5230\u4e94\uff08\u6216\u56db\uff09\u6bb5\uff1a\u6bcf\u6bb5\u4e00\u4e2a\u7ecf\u5386\uff0c\u53ef\u4ee5\u603b\u5206\u603b\u5199\uff0c\u627e\u5230\u4e00\u4e2a\u8fd9\u6bb5\u7ecf\u5386\u6700\u60f3\u7a81\u51fa\u7684\u7279\u70b9/\u54c1\u8d28\uff0c\u7136\u540e\u56f4\u7ed5\u7740\u8bf4</li> <li>\u7b2c\u516d\u6bb5\uff1amoving forward \u8bb2\u4ee5\u540e\u7684\u89c4\u5212</li> <li>\u7b2c\u4e03\u6bb5\uff1awhy [program name] and why [school name]</li> <li>\u7b2c\u516b\u4e5d\u6bb5\uff1a\u5982\u679c\u5b66\u6821\u6709\u7279\u6b8a\u7684 diversity, \u5956\u5b66\u91d1, gre clarification \u4e4b\u7c7b\u7684\u53ef\u4ee5\u5728\u8fd9\u91cc\u5199</li> <li>References</li> </ul> <p>\u5982\u679c PS \u548c SOP \u540c\u65f6\u9700\u8981\uff0c\u90a3\u4e48 PS \u7528\u6765\u8bb2\u6545\u4e8b\u6bd4\u8f83\u597d\u3002\u6211\u6ca1\u6709\u8bbe\u8ba1\u4e00\u4efd\u901a\u7528\u7684\u6545\u4e8b\uff0c\u57fa\u672c\u662f\u770b\u9879\u76ee\u8981\u6c42\u3001\u5f55\u53d6\u504f\u597d\u7136\u540e\u5199\u5bf9\u5e94\u7684\u6545\u4e8b\uff0c\u6bd4\u5982 NEU MSCS \u6211\u5199\u4e86\u4e00\u7bc7\u201c\u81ea\u5df1\u5982\u4f55\u4e00\u76f4\u559c\u6b22 cs \u5e76\u4e00\u70b9\u4e00\u70b9\u505a\u5f00\u6e90\u9879\u76ee\u201d\u7684\u6545\u4e8b\uff0cRice \u8ba9\u5199\u4e00\u4e2a\u514b\u670d\u56f0\u96be\u7684\u6545\u4e8b\uff0c\u6211\u5c31\u5199\u6211\u53d7\u5230\u4e86\u4e00\u4e9b\u4e13\u4e1a\u6b67\u89c6\u4f46\u8fd8\u662f\u52aa\u529b\u53bb\u53c2\u4e0e CS \u8bfe\u7a0b\u548c\u793e\u7fa4\u7684\u7ecf\u5386\u3002\u8fd9\u4e24\u6bb5\u90fd\u662f\u6bd4\u8f83\u4e2a\u4eba\u5316\uff0c\u6709\u70b9 emotional\uff0c\u4f46\u662f\u4e3b\u9898\u53c8\u8ddf\u4e2a\u4eba\u54c1\u8d28\u548c\u5b66\u4e1a\u6709\u5173\u7684\uff0c\u6839\u636e\u9762\u8bd5\u6216 offer \u7b49\u9014\u5f84\u7684\u53cd\u9988\u6765\u770b\u611f\u89c9\u62db\u751f\u5b98\u8fd8\u6bd4\u8f83\u770b\u597d\u3002</p> <p>\u6210\u7ee9\u5355</p> <p>\u628a\u6210\u7ee9\u5355\u5217\u4e3a\u6587\u4e66\u662f\u56e0\u4e3a\u6211\u4ea4\u4e86\u4e00\u4efd\u975e\u5e38\u4e0d\u5bfb\u5e38\u7684\u6210\u7ee9\u5355\uff0c\u5728\u6210\u7ee9\u5355\u524d\u9762\u9644\u4e86 4 \u9875 cover letter \u8bba\u8ff0\u6211\u8fd9\u51e0\u5e74\u901a\u52e4\u7389\u6cc9\u5927\u6982\u82b1\u8d39\u603b\u65f6\u95f4\u591a\u5c11\uff0c\u6211\u7684\u603b\u5b66\u5206\u6bd4\u522b\u4eba\u591a\u591a\u5c11\uff0c\u6211\u7533\u8bf7\u540e\u6bd5\u4e1a\u524d\u9884\u8ba1\u5b8c\u6210\u7684\u8bfe\u7a0b\u8fd8\u6709\u54ea\u4e9b\uff0c\u603b\u4e4b\u786e\u5b9e\u4e0a\u8bfe\u7684\u5de5\u4f5c\u91cf\u5927\uff0c\u5e0c\u671b\u62db\u751f\u5b98\u4e5f\u80fd\u8003\u8651\u8fd9\u4e2a\u56e0\u7d20\u7b49\u3002\u4e5f\u4e0d\u77e5\u9053\u5408\u4e0d\u5408\u89c4\uff0c\u4f46\u8fd9\u4e9b\u4e1c\u897f\u786e\u5b9e\u4e0d\u77e5\u9053\u54ea\u91cc\u53bb\u5199\u3002\u76ee\u524d\u8fd8\u6ca1\u6709\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u53cd\u9988\u80fd\u544a\u8bc9\u6211\u8fd9\u6837\u505a\u5bf9\u4e0d\u5bf9\u6216\u597d\u4e0d\u597d\u3002</p>"},{"location":"Other/24fall/#_6","title":"\u6691\u7814","text":"<p>\u5bf9\u4e8e\u6691\u7814\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684 comment \u662f\u5982\u679c\u60f3\u7533\u5317\u7f8e PhD \u5c31\u76f4\u63a5\u53bb\u9676\u74f7\u5317\u7f8e\uff0c\u4e0d\u8981\u5728\u610f\u201c\u5317\u7f8e rank \u4e0d\u597d\u7684\u5b66\u6821\u662f\u4e0d\u662f\u4e0d\u5982\u522b\u7684\u5730\u533a rank \u597d\u7684\u5b66\u6821\u201d\uff0c\u56e0\u4e3a\u5730\u533a\u5185\u5708\u5b50\u7684\u8001\u5e08\u8fd8\u662f\u4f1a\u6bd4\u5730\u533a\u5916\u719f\u4e00\u4e9b\uff0c\u4e14\u90e8\u5206\u8001\u5e08\u6691\u7814\u7684\u98ce\u683c\u662f\u628a\u597d\u5b66\u751f\u63a8\u5411\u66f4\u597d\u7684\u8001\u5e08\u4ee5\u5efa\u7acb\u5b66\u672f connection\u3002\u4ee5\u53ca\u867d\u7136\u5728\u5317\u7f8e onsite \u7814\u7a76\u786e\u5b9e\u5bf9\u793e\u4ea4\u6709\u5229\uff0c\u4f46\u6761\u4ef6\u5f88\u96be\u5177\u5907\uff0c\u56e0\u4e3a\u7b7e\u8bc1\u529e\u7406\u96be\u5ea6\u5927\uff0c\u5bf9\u6559\u6388\u6765\u8bf4\u5e38\u5e38\u6295\u5165\u5927\u4e8e\u56de\u62a5\uff0c\u5b66\u751f\u9002\u5e94\u6210\u672c\u4e5f\u9ad8\uff0c\u4e0d\u4e00\u5b9a\u80fd\u6709\u5229\u4e8e\u6548\u7387\uff0c\u6240\u4ee5\u5982\u679c\u6709 prof \u8ddf\u6211\u8bf4\u4e0d\u613f\u4e3a\u6211\u529e\u7b7e\u8bc1\u6211\u662f\u80fd\u7406\u89e3\u7684\u3002online \u6548\u529b\u4e5f\u4e0d\u4f4e\u7684\u3002</p> <p>\u6bd4\u8f83\u56fa\u5b9a\u5e38\u5e74\u5f00\u653e\u7684\u51e0\u4e2a\u6691\u7814</p> <ul> <li>MPI\uff1a\u8bb0\u5f97\u524d\u4e00\u5e74 11 \u6708\u5373\u622a\u6b62</li> <li>AllenAI Predoctoral Young Inverstigator\uff1a\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\u60ca\u5929\u5927 bar\uff0c\u8eab\u8fb9\u4eba\u6682\u65f6\u6ca1\u6709\u53bb\u7684\uff0c\u76ee\u6d4b\u5f88\u96be\u8fdb\uff0c\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u5f97\u5728\u5317\u7f8e\u5f53\u5730\u624d\u884c\u3002</li> <li>prof. Diyi Yang</li> <li>Yale Bioinfo\uff1a\u62db zju \u6691\u7814\u5f88\u591a\uff0c\u636e\u8bf4\u731b\u5377\u6613\u62ff return</li> <li>\u52a0\u62ff\u5927 Mitacs\uff0c\u597d\u50cf\u8003\u6838\u6bd4\u8f83\u4e25\u683c</li> <li>epfl</li> </ul> <p></p> <ul> <li>\u5176\u5b83\u5f88\u591a\u8001\u5e08\u4e3b\u9875\u53ef\u80fd\u4e5f\u6709\u5e38\u5e74\u5f00\u653e\u6e20\u9053</li> </ul>"},{"location":"Other/24fall/#offer","title":"\u63a5 offer \u7684\u8003\u8651","text":"<p>\u53ea\u6709\u8fd9\u4e00\u4e2a\u9009\u62e9\uff08\uff09</p>"},{"location":"Other/asundergrad/","title":"As An Undergrad \u672c\u79d1\u7684\u4e00\u8def\u8d70\u6765","text":"<p>\u4e00\u5207\u8981\u4ece\u5927\u5b66\u662f\u4ec0\u4e48\u7684\u5b9a\u4e49\u8c08\u8d77</p> <p>\u662f\u5426\u6709\u5fc5\u8981\u8c08\u8fd9\u4e48\u6839\u672c\uff1f\u6709</p> <p>\u3002\u3002\u3002\u6551\u547d</p> <p>\u5148\u5806\u79ef\u4e00\u4e9b\u60f3\u5bf9\u672a\u6765\u7684\u81ea\u5df1\u8bf4\u7684\u53e5\u5b50\u5427</p> <ul> <li>\u4e0d\u8981\u559c\u6b22\u770b\u4e66\uff0c\u559c\u6b22\u770b\u4e66\u559c\u6b22\u7684\u53ef\u80fd\u53ea\u662f\u770b\u4e66\u7684\u611f\u89c9\uff0c\u559c\u6b22\u62a0\u5b57\u773c\uff0c\u4f46\u5176\u5b9e\u4f60\u5fc5\u987b\u8db3\u591f\u8ba8\u538c\u4e66\u4ee5\u4f7f\u4f60\u5c3d\u5feb\u652b\u53d6\u5b8c\u77e5\u8bc6\u5c31\u8dd1\uff0c\u4e0d\u8981\u5728\u540c\u4e00\u672c\u4e66\u4e0a\u505c\u7559\u8fc7\u4e45\uff0c\u4e0d\u8981\u5984\u56fe\u77e5\u6089\u4e66\u4e0a\u7684\u6bcf\u4e00\u4e2a\u5b57</li> </ul> <p>\u53c8\u56de\u5bb6\u770b\u5230\u8001\u5e08\u5728\u4f53\u7cfb\u7fa4\u6f47\u6d12\u7559\u4e0b\u4e00\u884c\uff1a\u201c\u8981\u5728\u6da7\u6c34\u6cc9\u58f0\u3001\u6797\u6d9b\u677e\u98ce\u3002\u201d\uff08\u6211\u6ca1\u6709\u67e5\u5230\u8fd9\u53e5\u7684\u51fa\u5904\uff0c\u7591\u4f3c\u662f\u201c\u4e00\u79cd\u5b64\u9ad8\u4e0d\u6613\u6500\uff0c\u6b64\u8eab\u53ea\u5408\u4f4f\u6df1\u5c71\u3002\u517b\u6210\u9cde\u7532\u4e3a\u9f99\u53bb\uff0c\u5316\u4f5c\u4e91\u6d9b\u5f85\u9e64\u8fd8\u3002\u58f0\u5165\u7a7a\u6797\u4eba\u5bc2\u5bc2\uff0c\u54cd\u5f52\u5e7d\u6da7\u6c34\u6f7a\u6f7a\u3002\u53ee\u5b81\u83ab\u628a\u677e\u98ce\u5356\uff0c\u7559\u5728\u5343\u5ca9\u4e07\u58d1\u95f4\u3002\u201d\u4e00\u9996\u8bd7\uff1f\uff09\u6709\u540c\u5b66\u63a5\uff1a\u6362\u4e2a\u5f62\u5f0f\u966a\u5927\u5bb6\uff0c\u90fd\u5728\u7684\u3002\u4e8e\u662f\u53c8\u611f\u5230\u4f55\u5fc5\u9053\u522b\uff0c\u6211\u5df2\u7ecf\u628a\u8fd9\u4e9b\u5e74\u5404\u4f4d\u6240\u6709\u4eba\u8d60\u4e88\u6211\u7684\u77e5\u8bc6\u3001\u6027\u683c\u3001\u89c2\u5ff5\u3001\u529b\u91cf\u5168\u90e8\u5e26\u5728\u8eab\u4e0a\u5e26\u8d70\u4e86\u3002</p>"},{"location":"Other/howtocite/","title":"How to cite elegantly?","text":""},{"location":"Other/howtocite/#which-format","title":"Which format?","text":""},{"location":"Other/howtocite/#in-text-citation","title":"In-text citation","text":""},{"location":"Other/howtocite/#references","title":"References","text":""},{"location":"Other/howtocite/#tools","title":"Tools","text":"<p>... But the best tool is by hand</p>"},{"location":"Other/nlp_phd/","title":"NLP Global PHD Equality Digest (\u642c\u8fd0)","text":"<p>\u7ffb\u8bd1\u81eahttps://github.com/zhijing-jin/nlp-phd-global-equality</p>"},{"location":"Other/nlp_phd/#_1","title":"\u9996\u63a8\u8d44\u6e90","text":"<ol> <li>ACL \u5e74\u5ea6\u5bfc\u5e08\u5236\u9879\u76ee\uff08https://acl-mentorship.github.io\uff09</li> <li>NLP with Friends \uff08Welcome! - NLP with Friends\uff09</li> </ol>"},{"location":"Other/nlp_phd/#phd","title":"\u7b2c\u4e00\u9636\u6bb5\uff1a\u600e\u6837\u7533\u8bf7PhD\uff1f","text":""},{"location":"Other/nlp_phd/#_2","title":"\u7533\u8bf7\u5efa\u8bae","text":""},{"location":"Other/nlp_phd/#phd_1","title":"\u6211\u5e94\u8be5\u8bfbPhD\u5417\uff1f","text":"<ol> <li> <p>(John Hewitt, PhD@Stanford)\u00a0Undergrad to PhD, or not - advice for undergrads interested in research\u00a0(2018). [Suggestions]</p> </li> <li> <p>\u7a77\u548c\u4e0d\u806a\u660e\u4e0d\u662f\u7406\u7531</p> </li> <li>\u591a\u4e0e\u4eba\u4ea4\u6d41\uff0c\u542c\u7684\u5efa\u8bae\u8d8a\u591a\u8d8a\u597d</li> <li>\u89c2\u5bdf\u4e86\u89e3phd\u7684\u65e5\u5e38\u751f\u6d3b</li> <li>\u770b\u770b\u81ea\u5df1\u662f\u5426\u6709\u70ed\u60c5</li> <li> <p>\u7533\u8bf7\u524d\u76848\u6708\u52309\u6708\u8981\u5199\u597d\u81ea\u5df1\u7684SOP\uff0c\u601d\u8003\u81ea\u5df1\u8981\u505a\u600e\u6837\u7684\u7814\u7a76\uff0c\u600e\u6837\u8ba9\u81ea\u5df1\u7684\u7814\u7a76\u6709\u5f71\u54cd\u529b\u3002\u57288\u6708\u8981\u8054\u7cfb\u597d\u63a8\u8350\u4fe1</p> </li> <li> <p>(Prof Jason Eisner@JHU)\u00a0Advice for Research Students\u00a0(last updated: 2021). [List of suggestions]</p> </li> </ol>"},{"location":"Other/nlp_phd/#_3","title":"\u7533\u8bf7\u8fc7\u7a0b\u662f\u4ec0\u4e48\u6837\u5b50\u7684\uff1f","text":"<ol> <li>(Nelson Liu, PhD@Stanfard)\u00a0Student Perspectives on Applying to NLP PhD Programs\u00a0(2019). [Suggestions Based on Surveys]</li> <li>\u4e3a\u4ec0\u4e48\u73b0\u5728\u5c31\u8981\u7533\u8bf7\uff1a\uff081\uff09AI\u754c\u8d8a\u6765\u8d8a\u5377\uff0c\u66f4\u65b0\u975e\u5e38\u5feb\uff0c\u6240\u4ee5\u53d1\u66f4\u591apaper\u4e0d\u4e00\u5b9a\u8868\u793a\u7533\u8bf7\u66f4\u5360\u4f18\u52bf \uff082\uff09\u7855\u58eb\u7533\u8bf7phd\u6bd4\u672c\u79d1\u7533\u8bf7phd\u9700\u8981\u66f4\u591a\u6587\u7ae0 \uff083\uff09\u4e0d\u786e\u5b9a\u6027\u5f88\u5927\uff0c\u8ba1\u5212\u5f88\u53ef\u80fd\u6ca1\u6709\u53d8\u5316\u5feb \uff084\uff09\u9664\u975e\u4f60\u8ba4\u4e3a\u8bfb\u5b8c\u7855\u58eb\u540e\u81ea\u5df1\u80fd\u53d8\u5f97\u66f4\u5f3a</li> <li>\u7533\u8bf7\u54ea\u91cc\uff1a\uff081\uff09\u9996\u5148\u8981\u8003\u8651\u5b66\u6821\u548c\u5bfc\u5e08\uff0c\u6709\u5efa\u8bae\u79f0\u6700\u597d\u9009\u62e9\u67092\u4f4d\u4ee5\u4e0a\u76f8\u5173\u5bfc\u5e08\u7684\u5b66\u6821\u3002\uff082\uff09\u5730\u5740\u4e5f\u5f88\u91cd\u8981\uff0c\u8fd9\u662f\u672a\u67655\u5e74\u91cc\u4f60\u7684\u5de5\u4f5c\u73af\u5883\u3002\uff083\uff09\u9009\u62e9\u4e0e\u5de5\u4e1a\u754c\u5173\u7cfb\u7d27\u5bc6\u7684\u5730\u65b9</li> <li>\u51c6\u5907SOP\u548c\u63a8\u8350\u4fe1\uff1a\u89c1\u4e0b\u65b9\u5c0f\u6807\u9898</li> <li>\u51c6\u5907\u4e09\u7ef4\u6210\u7ee9\uff1a\u5360\u5c0f\u5206\u91cf\u3002\u5176\u4e2d\u6258\u798f\u5fc5\u987b\u8fc7\u7ebf</li> <li>\u9762\u8bd5\uff1a\u7ed3\u6784\u662f\u201c\u4ecb\u7ecd\u4e00\u4e2a\u4f60\u6700\u60f3\u8bb2\u7684\u7814\u7a76\u9879\u76ee\u201d+\u201c\u4f60\u7684\u7814\u7a76\u5174\u8da3\u662f\u4ec0\u4e48\u201d+\u201c\u8fd8\u6709\u4ec0\u4e48\u95ee\u9898\u201d\u3002\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u662f\u770b\u4f60\u7684\u89e3\u51b3\u95ee\u9898\u80fd\u529b\u600e\u4e48\u6837\uff0c\u7814\u7a76\u5174\u8da3\u5339\u914d\u4e0d\u5339\u914d\uff0c\u5c11\u90e8\u5206\u60c5\u51b5\u4e5f\u4f1a\u95ee\u5230\u6280\u672f\u7ec6\u8282\u3002\u5728QA\u73af\u8282\uff0c\u53ef\u4ee5\u95ee\u5bf9\u65b9\u4e4b\u524d\u7684\u5de5\u4f5c\uff0c\u53ef\u4ee5\u95ee\u672a\u6765\u4f60\u80fd\u505a\u7684\u5de5\u4f5c\uff0c\u53ef\u4ee5\u95ee\u9879\u76ee\uff0c\u95ee\u5b66\u6821\u3002\u4e0d\u77e5\u9053\u7684\u5c31\u8bf4\u4e0d\u77e5\u9053\u3002</li> <li>(Prof Dragomir Radev@Yale)\u00a0Advice for PhD Applications, Faculty Applications, etc\u00a0(2023). [List of Suggestions]</li> </ol> <ol> <li>[(Roma Patel PhD@Brown, Prof Nathan Schneider@Georgetown University)\u00a0PhD Application Series of the NLP Highlights Podcast)\u00a0(2021). [Podcast] (A new series they launched that addresses all aspects of PhD application. Besides, it is just a great podcast in general that talks about recent NLP advances)</li> <li>(Albert Webson et al., PhDs@Brown University)\u00a0Resources for Underrepresented Groups, including Brown's Own Applicant Mentorship Program\u00a0(2020, but we will keep updating it throughout the 2021 application season.) [List of Resources]</li> <li>A Princeton CS Major's Guide to Applying to Graduate School. [List of suggestions]</li> <li>(Tim Dettmers, PhD@UW)\u00a0Machine Learning PhD Applications \u2014 Everything You Need to Know\u00a0(2018). [Guide]</li> </ol> <ol> <li>(Kalpesh Krishna, PhD@UMass Amherst)\u00a0Grad School Resources\u00a0(2018). [Article] (This list lots of useful pointers!)</li> <li>(Prof\u00a0Mor Harchol-Balter@CMU)\u00a0Applying to Ph.D. Programs in Computer Science\u00a0(2014). [Guide]</li> </ol> <ol> <li>(CS Rankings)\u00a0Advice on Applying to Grad School in Computer Science. [Pointers]</li> <li>(Prof Scott E. Fahlman@CMU)\u00a0Quora answers on the LTI program at CMU\u00a0(2017). [Article]     ---------------------------------------------------------------------------------------</li> </ol>"},{"location":"Other/nlp_phd/#_4","title":"\u600e\u6837\u9009\u62e9\u5b66\u6821/\u9879\u76ee\uff1f","text":"<ol> <li>(Nelson Liu, PhD@Stanfard)\u00a0Student Perspectives on Applying to NLP PhD Programs\u00a0(2019). [Suggestions Based on Surveys]</li> <li>\u6295\u591a\u5c11\u6240\u5b66\u6821\uff1a8\uff5e13\u6240      </li> </ol>"},{"location":"Other/nlp_phd/#sop","title":"\u600e\u6837\u51c6\u5907SOP\uff1f","text":"<ol> <li>(Nelson Liu, PhD@Stanfard)\u00a0Student Perspectives on Applying to NLP PhD Programs\u00a0(2019). [Suggestions Based on Surveys]</li> <li>\u516b\u6708\u4efd\u5f00\u59cb\u5199\u7684\u6700\u591a</li> <li>SOP\u5e94\u5f53\u63cf\u8ff0\u4f60\u7684\u7814\u7a76\u7ecf\u5386\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u505a\u8fc7\u7684\u7814\u7a76\u7684\u5177\u4f53\u8fc7\u7a0b\u3001\u7814\u7a76\u6bcf\u4e00\u6b65\u7684\u7ec6\u8282\uff0c\u8fd9\u6837\u6bd4\u8f83\u65b9\u4fbf\u8bc4\u59d4\u4f30\u8ba1\u4f60\u7814\u7a76\u7684\u4ef7\u503c\uff0c\u8ba9\u4ed6\u4eec\u77e5\u9053\u4f60\u660e\u767d\u81ea\u5df1\u7684\u7814\u7a76\u6bcf\u4e00\u6b65\u90fd\u5728\u505a\u4ec0\u4e48\u3002\u4e4b\u540e\uff0c\u4f60\u5e94\u5f53\u4ece\u6574\u4e2a\u7814\u7a76\u751f\u6daf\u7684\u89c6\u89d2\u6765\u4ecb\u7ecd\u4f60\u4e4b\u524d\u7684\u5de5\u4f5c\uff0c\u5e76\u5206\u522b\u4ece\u5177\u4f53\u7684\u7814\u7a76\u5de5\u4f5c\u3001\u4f60\u7684\u7814\u7a76\u5fc3\u5f97\u4e24\u4e2a\u65b9\u9762\u4ecb\u7ecd\u4f60\u7684\u672a\u6765\u5c55\u671b\uff0c\u4ecb\u7ecd\u4f60\u5728phd\u9636\u6bb5\u8981\u505a\u600e\u6837\u7684\u7814\u7a76\u3002</li> <li>\u6bcf\u6240\u5b66\u6821\u5e94\u8be5\u6295\u4e0d\u4e00\u6837\u7684SOP\uff0c\u53ea\u6539\u6700\u540e\u4e00\u4e24\u6bb5\u4e5f\u6709\u70b9\u5c11\uff0c\u6700\u597d\u6539\u52a8\u5927\u4e00\u4e9b\uff0c\u6295\u5176\u6240\u597d\u3002</li> <li>\u53ef\u4ee5\u628aSOP\u7ed9recommender\u770b\u4e00\u4e0b</li> </ol>"},{"location":"Other/nlp_phd/#_5","title":"\u600e\u6837\u51c6\u5907\u63a8\u8350\u4fe1\uff1f","text":"<ol> <li>(Nelson Liu, PhD@Stanfard)\u00a0Student Perspectives on Applying to NLP PhD Programs\u00a0(2019). [Suggestions Based on Surveys]</li> <li>\u9009\u62e9\u63a8\u8350\u4eba\uff081\uff09\u4f60\u5bf9\u63a8\u8350\u4eba\u7684\u719f\u77e5\u7a0b\u5ea6\uff082\uff09\u4f60\u4e0e\u8fd9\u4f4d\u63a8\u8350\u4eba\u5408\u4f5c\u7684\u5de5\u4f5c\u597d\u4e0d\u597d\uff083\uff09\u63a8\u8350\u4eba\u7684\u77e5\u540d\u5ea6\u3002\u56e0\u6b64\u8bfe\u7a0b\u63a8\u6216TA\u63a8\u662f\u4e0d\u597d\u7528\u7684\u3002\u5de5\u4e1a\u754c\u63a8\u662f\u597d\u7528\u7684\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u63a8\u8350\u4fe1\u4f60\u540c\u6837\u9700\u8981\u8bc4\u4f30\u63a8\u8350\u4eba\u7684\u77e5\u540d\u5ea6\u3002</li> <li>\u9700\u8981\u6ce8\u610f\u77e5\u540d\u7684\u63a8\u8350\u4eba\uff0c\u7ade\u4e89\u7684\u5b66\u751f\u4e5f\u591a\uff0c\u53ea\u4f1a\u63a8\u8350\u6700\u4f18\u79c0\u7684\u5b66\u751f\u3002</li> <li>\u63d0\u9192\u63a8\u8350\u4eba\u4f60\u7684\u4f18\u70b9\u548c\u5de5\u4f5c\uff0c\u63a8\u8350\u4eba\u5f88\u5fd9\uff0c\u53ef\u80fd\u60f3\u4e0d\u8d77\u6765\u3002\u6ce8\u610f\u5728\u63a8\u8350\u4fe1\u63d0\u4ea4\u622a\u6b62\u524d1\u661f\u671f\u548c2\u661f\u671f\u5206\u522b\u90ae\u4ef6\u63d0\u9192\u63a8\u8350\u4eba\u63d0\u4ea4\u63a8\u8350\u4fe1\u3002</li> </ol>"},{"location":"Other/nlp_phd/#_6","title":"\u524d\u63d0\u6761\u4ef6\uff1a\u6691\u7814","text":"<ol> <li>(Andrew Kuznetsov, PhD@CMU)\u00a0CS/HCI PhD Opportunity Tracker from Twitter\u00a0(Developed in 2021).\u00a0http://www.andrewkuz.net/hci-opportunities-2022.html</li> <li>(Eugene Vinitsky, PhD@UC Berkeley)\u00a0A Guide to Cold Emailing\u00a0(2020). [Article]</li> <li>(Prof Shomir Wilson@Penn State University)\u00a0Guide for Interacting With Faculty\u00a0(2018). [Suggestions]</li> <li>(Prof Shomir Wilson@Penn State University)\u00a0Reference Letter Procedure. [Suggestions]</li> </ol>"},{"location":"Other/nlp_phd/#_7","title":"\u524d\u63d0\u6761\u4ef6\uff1a\u5de5\u6b32\u5584\u5176\u4e8b\uff0c\u5fc5\u5148\u5229\u5176\u5668","text":"<ul> <li>Google Colab</li> <li>AWS\uff08credits for research\uff09</li> <li>Digitalocean</li> <li>\u8ba1\u7b97\u673a\u6559\u80b2\u4e2d\u7f3a\u5931\u7684\u4e00\u8bfe</li> </ul>"},{"location":"Other/nlp_phd/#_8","title":"\u53e6\u4e00\u79cd\u9009\u62e9\uff1a\u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08","text":""},{"location":"Other/nlp_phd/#phd_2","title":"\u7b2c\u4e8c\u9636\u6bb5\uff1a\u600e\u6837\u505a\u4e00\u4e2a\u597dPHD\uff1f","text":""},{"location":"Other/nlp_phd/#_9","title":"\u7efc\u5408\u6307\u5bfc","text":"<ol> <li>(Prof Isabelle Augenstein@UCopenhagen)\u00a0Increasing Well-Being in Academia\u00a0(2020). [Suggestions]</li> <li>(Sebastian Ruder@DeepMind)\u00a010 Tips for Research and a PhD\u00a0(2020) . [Suggestions]</li> <li>(Maxwell Forbes, PhD@UW)\u00a0Every PhD Is Different. [Suggestions]</li> <li>(Prof Mark Dredze@JHU, Prof Hanna M. Wallach@UMass Amherst)\u00a0How to be a successful PhD student (in computer science (in NLP/ML)). [Suggestions]</li> <li>(Andrej Karpathy)\u00a0A Survival Guide to a PhD\u00a0(2016). [Suggestions]</li> <li>be \u201cshe\u2019s the person who did X\u201d</li> <li>\u4e0d\u8981\u628aphd\u5f53\u4f5c\u5199paper\uff0c\u4f60\u8981\u628a\u81ea\u5df1\u5f53\u6210\u8be5\u9886\u57df\u7684\u4e00\u5458\uff0c\u8981\u63a8\u52a8\u9886\u57df\u7684\u8fdb\u5c55\u3002</li> <li>(Prof Kevin Gimpel@TTIC)\u00a0Kevin Gimpel's Advice to PhD Students. [Suggestions]</li> <li>(Prof Marie desJardins@Simmons University)\u00a0How to Succeed in Graduate School: A Guide for Students and Advisors\u00a0(1994). [Article] [Part II]</li> <li>(Prof Eric Gilbert@UMich)\u00a0Syllabus for Eric\u2019s PhD students\u00a0(incl. Prof's expectation for PhD students). [syllabus]</li> <li>(Marek Rei, Lecturer@Imperial College London)\u00a0Advice for students doing research projects in ML/NLP\u00a0(2022). [Suggestions]</li> <li>(Prof H.T. Kung@Harvard)\u00a0Useful Thoughts about Research\u00a0(1987). [Suggestions]</li> <li>(Prof Phil Agre@UCLA)\u00a0Networking on the Network: A Guide to Professional Skills for PhD Students\u00a0(last updated: 2015). [Suggestions]     --------------------------------------------------------------------------------------------------------------------------------------</li> <li>(Prof Stephen C. Stearns@Yale)\u00a0Some Modest Advice for Graduate Students. [Article]</li> <li>(Prof Tao Xie@UIUC)\u00a0Graduate Student Survival/Success Guide. [Slides]</li> <li>(Mu Li@Amazon)\u00a0\u535a\u58eb\u8fd9\u4e94\u5e74\u00a0(A Chinese article about five years in PhD at CMU). [Article]</li> <li>(Karl Stratos)\u00a0A Note to a Prospective Student. [Suggestions]</li> </ol>"},{"location":"Other/nlp_phd/#llmnlp","title":"\u70ed\u70b9\u8bdd\u9898\uff1aLLM\u65f6\u4ee3\u7684NLP\u7814\u7a76","text":"<ol> <li>(UMich; led by Prof Rada Mihalcea)\u00a0A PhD Student's Perspective on Research in NLP in the Era of Very Large Language Models\u00a0(2023). [Paper]</li> <li>Multilinguality and Low-resource Languages      ------------------------------------------</li> <li>Reasoning      ---------</li> <li>Knowledge Bases      ---------------</li> <li>Language Grounding      ------------------</li> <li>Computational Social Science</li> <li>Child Language Acquisition</li> <li>Non-verbal Communication</li> <li>Synthetic Datasets</li> <li>Interpretability</li> <li>Efficient NLP</li> <li>NLP in education</li> <li>NLP in healthcare</li> <li>NLP and ethics</li> <li>(Prof Julian Togelius@NYU, Prof Georgios Yannakakis@UMalta)\u00a0Choose Your Weapon: Survival Strategies for Depressed AI Academics Julian Togelius, Georgios N. Yannakakis\u00a0(2023). [Tweet] [Paper]</li> </ol>"},{"location":"Other/nlp_phd/#idea","title":"\u627e\u5230\u597d\u7684\u7814\u7a76Idea","text":"<ol> <li>(Prof Jia-Bin Huang@UMaryland)\u00a0How to come up with research ideas?\u00a0(2021). [Suggestions]</li> </ol> <ol> <li>(John Schulman, co-founder of OpenAI)\u00a0An Opinionated Guide to ML Research (e.g., horning your taste)\u00a0(2020). [Suggestions]</li> </ol> <p>Interesting snippets: \"Goal-driven. Develop a vision of some new AI capabilities you\u2019d like to achieve, and solve problems that bring you closer to that goal.\", \"If you are working on incremental ideas, be aware that their usefulness depends on their complexity.\", \"Consider how the biggests bursts of impactful work tend to be tightly clustered in a small number of research groups and institutions. That\u2019s not because these people are dramatically smarter than everyone else, it\u2019s because they have a higher density of expertise and perspective, which puts them a little ahead of the rest of the community, and thus they dominate in generating new results.\", \"Early on in your career, I recommend splitting your time about evenly between textbooks and papers. You should choose a small set of relevant textbooks and theses to gradually work through, and you should also reimplement the models and algorithms from your favorite papers.\" 3. (Prof Fei-Fei Li@Stanford)\u00a0De-Mystifying Good Research and Good Papers\u00a0(2014). [Suggestions]</p> <p>Interesting snippets: \"This means publishing papers is NOT about \u201cthis has not been published or written before, let me do it\u201d, nor is it about \u201clet me find an arcane little problem that can get me an easy poster\u201d. It\u2019s about \u201cif I do this, I could offer a better solution to this important problem,\u201d or \u201cif I do this, I could add a genuinely new and important piece of knowledge to the field.\u201d You should always conduct research with the goal that it could be directly used by many people (or industry). In other words, your research topic should have many \u2018customers\u2019, and your solution would be the one they want to use. A good research project is not about the past (i.e. obtaining a higher performance than the previous N papers). It\u2019s\u00a0about the future (i.e. inspiring N future papers to follow and cite you, N-&gt;\\inf).\"</p>"},{"location":"Other/nlp_phd/#_10","title":"\u8bfb\u6587\u7ae0\u7684\u5de5\u5177","text":"<ul> <li>Connected Papers\uff08https://www.connectedpapers.com/\uff09</li> <li>Glactica\uff08https://galactica.org/mission/\uff09\u7528\u5927\u8bed\u8a00\u6a21\u578b\u751f\u6210\u6587\u7ae0\u8bc4\u8bba</li> </ul>"},{"location":"Other/nlp_phd/#_11","title":"\u8bfb\u6587\u7ae0","text":"<ol> <li>(Prof Srinivasan Keshav@Cambridge)\u00a0How to Read a Paper\u00a0(2007). [Suggestions]</li> </ol> <ol> <li>(Prof Jason Eisner@JHU)\u00a0How to Read a Technical Paper\u00a0(2009). [Suggestions]</li> </ol> <ol> <li>(Prof Emily M. Bender@UW)\u00a0Critical Reading\u00a0(2003). [Suggestions]</li> <li>\u6279\u5224\u6027\u9605\u8bfb\u662f\u5728\u9605\u8bfb\u4e2d\u79ef\u6781\u6295\u5165\u6587\u7ae0\u7684\u8fc7\u7a0b\u3002\u4f60\u53ef\u4ee5\u5728\u9605\u8bfb\u8fc7\u7a0b\u4e2d\u95ee\u4ee5\u4e0b\u95ee\u9898\uff1a</li> <li>\u5b9e\u9a8c\u6587\u7ae0\uff1a<ul> <li>\u6587\u7ae0\u7684\u7814\u7a76\u95ee\u9898\u662f\u4ec0\u4e48\uff1f</li> <li>\u4e3a\u5efa\u7acb\u7814\u7a76\u95ee\u9898\uff0c\u4f5c\u8005\u63d0\u51fa\u4e86\u54ea\u4e9b\u5047\u8bbe\uff1f</li> <li>\u6570\u636e\u600e\u6837\u6536\u96c6\u7684\uff1f</li> <li>\u6536\u96c6\u6570\u636e\u7684\u65b9\u6cd5\u6709\u6ca1\u6709\u53ef\u80fd\u5bfc\u81f4\u504f\u89c1\u6216\u504f\u5dee\uff1f</li> <li>\u4f5c\u8005\u5bf9\u4ed6\u4eec\u6536\u96c6\u6570\u636e\u65b9\u6cd5\u7684\u5047\u8bbe\u662f\u4ec0\u4e48</li> <li>\u6587\u7ae0\u7684\u7ed3\u8bba\u662f\u4ec0\u4e48\uff1f</li> <li>\u4ece\u7ed3\u679c\u5230\u7ed3\u8bba\u5efa\u7acb\u7684\u8fc7\u7a0b\uff0c\u7528\u4e86\u54ea\u4e9b\u5047\u8bbe\uff1f</li> </ul> </li> <li>\u6559\u79d1\u4e66\u6587\u7ae0\uff0c\u6982\u5ff5\u8bf4\u660e\u6587\u7ae0<ul> <li>\u8fd9\u4e2a\u6982\u5ff5\u5c5e\u4e8e\u4ec0\u4e48\u66f4\u5e7f\u7684\u6982\u5ff5/\u9886\u57df</li> <li>\u8fd9\u4e2a\u6982\u5ff5\u4e0e\u5176\u5b83\u6982\u5ff5\u51b2\u7a81\u5417\uff1f\u4e0e\u4e4b\u51b2\u7a81\u7684\u6982\u5ff5\u6709\u4ec0\u4e48\uff1f</li> <li>\u5982\u679c\u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u7ec4\u8fd1\u4e49\u6982\u5ff5\uff08taxomony\uff09\uff0c\u8fd9\u4e9b\u6982\u5ff5\u90fd\u8986\u76d6\u4e86\u54ea\u4e9b\u8303\u56f4</li> <li>\u5982\u679c\u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u7ec4\u6982\u5ff5\uff0c\u8fd9\u4e9b\u6982\u5ff5\u76f8\u4e92\u5305\u542b\u3001\u91cd\u53e0\u6216\u4e92\u4e0d\u76f8\u4ea4\uff1f</li> <li>\u8fd9\u4e9b\u6982\u5ff5\u7684\u4f5c\u7528/\u610f\u4e49\u662f\u4ec0\u4e48\uff1f\uff08\u80fd\u591f\u63d0\u51fa\u600e\u6837\u7684\u7814\u7a76\u95ee\u9898\uff09</li> <li>\u63d0\u51fa\u8fd9\u4e9b\u6982\u5ff5\u7275\u626f\u5230\u600e\u6837\u7684\u5047\u8bbe/\u524d\u63d0\uff1f</li> </ul> </li> <li>\u671f\u520a\u6742\u5fd7\u4e2d\u7684\u8bf4\u7406\u6027\u6587\u7ae0<ul> <li>\u6587\u7ae0\u7684\u8bba\u70b9\u662f\u4ec0\u4e48\uff1f</li> <li>\u6587\u7ae0\u7684\u8bba\u70b9\u548c\u5b83\u7684\u53cd\u8c03\u5171\u540c\u5efa\u7acb\u5728\u54ea\u4e9b\u5047\u8bbe\u7684\u57fa\u7840\u4e0a</li> <li>\u6587\u7ae0\u7528\u54ea\u4e9b\u8bc1\u636e\u5efa\u7acb\u8bba\u70b9\uff1f</li> <li>\u6587\u7ae0\u7684\u8bc1\u636e\u5efa\u7acb\u5728\u54ea\u4e9b\u5047\u8bbe\u4e0a\uff1f</li> <li>\u6587\u7ae0\u4ece\u8bc1\u636e\u5230\u5efa\u7acb\u8bba\u70b9\uff0c\u7528\u4e86\u54ea\u4e9b\u5047\u8bbe\uff1f</li> </ul> </li> </ol>"},{"location":"Other/nlp_phd/#_12","title":"\u5199\u6587\u7ae0","text":"<ol> <li>(Prof Jason Eisner@JHU)\u00a0How to write a paper?\u00a0(2010). [Suggestions]</li> <li>(Simon Peyton Jones@Microsoft)\u00a0How to write a great research paper: Seven simple suggestions\u00a0(2014). [Slides] [Talk]</li> <li>\u5199\u6587\u7ae0\u662f\u5e2e\u52a9\u5efa\u7acb\u7814\u7a76\u7684\u7b2c\u4e00\u6b65\uff0c\u800c\u4e0d\u662f\u4e00\u79cd\u6c47\u62a5\u7814\u7a76\u7684\u673a\u5236      </li> <li>\u4e0d\u662f\u53ea\u6709\u597d\u7684idea\u80fd\u5199\uff0c\u968f\u4fbf\u4ec0\u4e48idea\u90fd\u53ef\u4ee5\u5199\u4e0b\u6765\uff0c\u7136\u540e\u8ddf\u522b\u4eba\u8c08\u4e00\u8c08</li> <li>\u4e00\u7bc7paper\u4e00\u4e2aidea\uff0c\u80fd\u591f\u6e05\u6670\u8868\u8fbe\u3002\u6bd4\u5982\u6709\u8fd9\u79cd\u53e5\u5f0f\u201cThe main idea of this paper is\u2026\u201d \u201cIn this section we present the main contributions of this paper.\u201d</li> <li>\u8981\u5f3a\u8c03\u4f60\u7684contribution\uff0c\u5728introduction\u91cc\u5f3a\u8c03\u3002introduction\u5c31\u662f\u7528\u6765\u63cf\u8ff0\u95ee\u9898+\u4ecb\u7ecd\u8d21\u732e\u7684\u3002</li> <li>\u53ef\u4ee5\u5148\u5217\u4e3e\u51fa\u6240\u6709\u7684contribution\uff0c\u7136\u540e\u7528contribution\u9a71\u52a8\u6574\u7bc7\u6587\u7ae0</li> <li>introduction\u91cc\u7684\u201c\u540e\u6587\u7ed3\u6784\u5982\u4e0b\u2026.\u201d\u5e94\u5f53\u7528\u5c06\u6765\u65f6\uff08\u5b58\u7591\uff09</li> <li>\u600e\u6837\u5199\u76f8\u5173\u7814\u7a76\uff1a<ul> <li>\u5982\u679c\u76ee\u524d\u4f60\u7684\u7814\u7a76\u6ca1\u6709\u76f8\u5173\u7814\u7a76\uff0c\u5728\u4f60\u7684\u65b9\u6cd5\u4e4b\u524d\u4ecb\u7ecd\u4e00\u5927\u5806\u522b\u4eba\u7684\u65b9\u6cd5\u4f1a\u8ba9\u8bfb\u8005get lost\uff0c\u6240\u4ee5\u6700\u597d\u5728\u4f60\u7684result\u548cconclusion\u4e4b\u95f4\u653e\u76f8\u5173\u7814\u7a76\uff0c\u5373\u653e\u5230\u540e\u9762\u53bb</li> <li>\u4e0d\u662f\u5fc5\u987b\u5f3a\u8c03\u522b\u4eba\u7684\u5de5\u4f5c\u574f\uff0c\u8981\u8ba4\u53ef\u522b\u4eba\u7684\u597d\u5de5\u4f5c\uff0c\u627f\u8ba4\u81ea\u5df1\u7684\u7f3a\u70b9</li> </ul> </li> <li>\u600e\u6837\u5199\u7ed3\u679c\uff1a\u628a\u8bfb\u8005\u653e\u5728\u7b2c\u4e00\u4f4d<ul> <li>\u4e00\u5b9a\u8981\u4f20\u8fbe\u597dintuition\uff0c\u4e0d\u8981\u5199\u5f97\u5197\u957f\u6a21\u7cca\uff0c\u5f53\u8bfb\u8005\u80fdfollow\u4f60\u7684intuition\uff0c\u4ed6\u4eec\u5c31\u80fd\u9010\u6b65\u7406\u89e3\u4f60\u4e4b\u540e\u7684\u4e1c\u897f</li> <li>\u7528\u4f8b\u5b50\u89e3\u91ca\u95ee\u9898\uff0c\u53ea\u7528general example</li> <li>\u4e0d\u7528\u8bb2\u4f60\u8bd5\u9519\u7684\u8fc7\u7a0b\uff0c\u53ea\u8bb2\u6700\u540e\u5b8c\u6210idea\u7684\u90a3\u4e9b\u5b9e\u9a8c\u6b65\u9aa4</li> </ul> </li> <li>\u8bb2\u7ed9\u522b\u4eba\u542c\uff0c\u95ee\u8bfb\u8005\u7684\u610f\u89c1\uff0c\u95ee\u8bc4\u59d4\u7684\u610f\u89c1\uff08\u975e\u5e38\u96be\u4f46\u975e\u5e38\uff0c\u975e\u5e38\uff0c\u975e\u5e38\u91cd\u8981\uff09</li> <li>\u7528\u4e3b\u52a8\u8bed\u6c14\uff08we can see\uff09\u4e0d\u8981\u7528\u88ab\u52a8\u8bed\u6c14\uff08it can be seen that\uff09\uff0c\u4f1a\u4f7f\u6587\u7ae0\u8bfb\u8d77\u6765\u5f88\u6b7b</li> <li>\u7528\u7b80\u5355\u8bcd\uff0c\u7b80\u5355\u8868\u8fbe</li> <li>(Prof Jennifer Widom@Stanford)\u00a0Tips for Writing Technical Papers\u00a0(2006). [Suggestions]</li> <li>(Prof Shomir Wilson@Penn State University)\u00a0Guide for Scholarly Writing. [Suggestions]</li> <li>(Prof Jia-Bin Huang@U Maryland)\u00a0How to write the introduction (and also the What-Why-How figures). [Tweet]</li> <li>(Prof Jia-Bin Huang@U Maryland)\u00a0How to write a rebuttal for a conference?\u00a0[Tweet]</li> <li>(Prof Michael Black@Max Planck Institute)\u00a0Twitter Thread about \"Writing is laying out your logical thoughts\". [Tweet]</li> <li>(Prof Shomir Wilson@Penn State University)\u00a0Guide for Citations and References\u00a0[Suggestions]</li> <li>(Carmine Gallo, a bestselling author)\u00a0The Storytellers Secret\u00a0(2016). [Video]Takeaways: Writing the Introduction section and giving talks can also be like telling a Hollywood story: the setting (what problem we are solving; how important it is), the villian (how difficult this problem is; how previous work cannot solve it well), and the superhero (what we propose). For giving talks, starting with personal stories (e.g., a story of grandma telling the kid not to drink and persist the right thing leading to the person's life pursuit on social justice) is very helpful to get the audience involved.</li> <li>(Maxwell Forbes@UW)\u00a0Figure Creation Tutorial: Making a Figure 1\u00a0(2021). [Suggestions]</li> <li>UI design as a medium of thought: see Michael Nielsen's\u00a0explanation of why UI is important for science,\u00a0Bret Victor's work,\u00a0Miegakure\u00a0that visualizes a 4D environment.</li> <li>(Prof Jia-Bin Huang@U Maryland)\u00a0How to write math in a paper?\u00a0(2023). [Tweet]</li> </ol> <p>\u672a\u5b8c\u5f85\u7eed\uff1a</p>"},{"location":"Other/nlp_phd/#_13","title":"\u7b2c\u4e09\u9636\u6bb5\uff1a\u5de5\u4e1a\u754c\u7814\u7a76\u8005\u7684\u751f\u6d3b","text":""},{"location":"Other/nlp_phd/#_14","title":"\u7b2c\u56db\u9636\u6bb5\uff1a\u5982\u4f55\u83b7\u5f97\u6559\u804c\uff1f\u5982\u4f55\u505a\u4e00\u4e2a\u597d\u5bfc\u5e08\uff1f","text":""},{"location":"Other/nlp_phd/#nlp","title":"\u7b2c\u4e94\u9636\u6bb5\uff1a\u89c4\u5212NLP\u7684\u7814\u7a76\u751f\u6daf","text":""},{"location":"Other/nlp_phd/#_15","title":"\u4e86\u89e3\u66f4\u591a","text":""},{"location":"Other/nlp_phd/#_16","title":"\u5f15\u7528","text":"<pre><code>@misc{resources2021jin,\n  author = {Zhijing Jin},\n  title = {Resources to Help Global Equality for PhDs in NLP},\n  year = {2021},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished = {\\url{https://github.com/zhijing-jin/nlp-phd-global-equality}}\n}\n</code></pre>"},{"location":"Other/nlp_resources/","title":"DL &amp; NLP Resources","text":"<p>\u8fd9\u4e2a\u9875\u9762\u7528\u6765\u6536\u96c6 nlp \u5165\u95e8\u8d44\u6599\u7684 minimal closure\uff08\u6307\u8db3\u591f\u5b66\u4f1a\u7684\u6700\u5c0f\u8d44\u6e90\u96c6\u5408\uff09</p>"},{"location":"Other/nlp_resources/#machine-learning-theory","title":"Machine Learning Theory","text":"<p>Google\u7684\u4e00\u4e2a\u6559\u7a0b\uff0c\u91cc\u9762\u7684playground\u505a\u5f97\u6bd4\u8f83\u76f4\u89c2\uff0c\u65e0\u9700\u4ee3\u7801</p> <p>Machine Learning \u00a0|\u00a0 Google for Developers</p>"},{"location":"Other/nlp_resources/#machine-learning-technology","title":"Machine Learning Technology","text":"<p>TODO</p>"},{"location":"Other/nlp_resources/#deep-learning-theory","title":"Deep Learning Theory","text":"<p>TODO</p>"},{"location":"Other/nlp_resources/#deep-learning-technology","title":"Deep Learning Technology","text":"<p>Pytorch\u6559\u7a0b\uff0c\u53ef\u4ee5\u770b\u7740\u4ee3\u7801\u624b\u6284\u4e00\u4e0b</p> <p>Welcome to PyTorch Tutorials \u2014 PyTorch Tutorials 2.0.1+cu117 documentation</p> <p>numpy: numpy 100 exercise</p> <p>rougier/numpy-100: 100 numpy exercises (with solutions) (github.com)</p> <p>Pytorch</p> <p>PyTorch\u6df1\u5ea6\u5b66\u4e60\u5feb\u901f\u5165\u95e8\u6559\u7a0b\uff08\u7edd\u5bf9\u901a\u4fd7\u6613\u61c2\uff01\uff09\u3010\u5c0f\u571f\u5806\u3011_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>Attention-based Models and Transformer</p> <p>Let's build GPT: from scratch, in code, spelled out. - YouTube</p>"},{"location":"Other/nlp_resources/#natural-language-processing-theory","title":"Natural Language Processing Theory","text":"<p>Stanford CS224N: NLP with Deep Learning | Winter 2021 | Lecture 1 - Intro &amp; Word Vectors - YouTube</p>"},{"location":"Other/nlp_resources/#natural-language-processing-technology","title":"Natural language processing technology","text":"<p>Stanford CS 224N | Natural Language Processing with Deep Learning</p>"},{"location":"Other/nlp_resources/#reinforcement-learning","title":"Reinforcement Learning","text":"<p>\u8611\u83c7\u4e66EasyRL (datawhalechina.github.io)</p> <p>Codes:</p> <p>boyu-ai/Hands-on-RL: https://hrl.boyuai.com/ (github.com) datawhalechina/easy-rl: \u5f3a\u5316\u5b66\u4e60\u4e2d\u6587\u6559\u7a0b\uff08\u8611\u83c7\u4e66\uff09\uff0c\u5728\u7ebf\u9605\u8bfb\u5730\u5740\uff1ahttps://datawhalechina.github.io/easy-rl/</p>"},{"location":"Other/nlp_resources/#computer-vision","title":"Computer Vision","text":"<p>Computer Vision | Universit\u00e4t T\u00fcbingen (uni-tuebingen.de)</p>"},{"location":"Other/portfolio/","title":"Portfolio for CMU METALS Application","text":"<p>Hi there! \ud83d\udc4b</p> <p>This site is a temporary portfolio for CMU METALS application.</p>"},{"location":"Other/portfolio/#frontend-works","title":"Frontend Works","text":"Glyph <p>Gun violence in US visualization</p> <p> </p> <p> </p> <p> </p>"},{"location":"Other/portfolio/#graphic-design","title":"Graphic Design","text":"Calendar Card1 Card2 Card3 <p>logo</p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p>"},{"location":"Other/readingnotes/","title":"\u671d\u82b1\u5915\u62fe\uff1a\u65e9\u671f\u8bfb\u4e66\u548c\u8bb2\u5ea7\u7b14\u8bb0\u56de\u987e","text":""},{"location":"Other/readingnotes/#-","title":"\u300a\u666e\u901a\u8bed\u8a00\u5b66\u300b\u7d22\u7eea\u5c14 - \u8bfb\u4e66\u7b14\u8bb0","text":"<p>\u7b2c\u96f6\u7f16\uff1a\u7eea\u8bba</p> <p>\u7b2c\u4e09\u7ae0\uff1a\u8bed\u8a00\u5b66\u7684\u5bf9\u8c61</p> <p>\u8bed\u97f3\u4e0e\u8bed\u4e49\u7684\u8054\u7cfb <pre><code>    _______________________\n   |                       |\n   |                       \u2228\nc &lt;-&gt; i                 i &lt;-&gt; i \n  \u542c\u97f3                    \u53d1\u97f3\n   \u2227                       |\n   |_______________________|\n</code></pre> c\uff1a\u6982\u5ff5</p> <p>i\uff1a\u97f3\u54cd\u5f62\u8c61</p> <p>\u8bed\u8a00\u7814\u7a76\u7684\u5bf9\u8c61</p> <ul> <li><code>parole</code> \u8a00\u8bed\uff1a\u4e2a\u4eba\u7684\u3001\u6df7\u6742\u7684\u3001\u5f02\u8d28\u7684</li> <li><code>lingua</code> \u8bed\u8a00\uff1a\u793e\u4f1a\u7684\u3001\u660e\u786e\u7684\u3001\u540c\u8d28\u7684</li> </ul> <p>\u7b2c\u516d\u7ae0\uff1a\u6587\u5b57\u8868\u73b0\u8bed\u8a00</p> <p>\u8bed\u97f3\u7684\u53d1\u5c55\u662f\u5386\u53f2\u6027\u7684\u3002</p> <p>\u7b2c\u4e03\u7ae0\uff1a\u97f3\u4f4d\u5b66 phonetics</p> <p>\u7b2c\u4e00\u7f16\uff1a\u4e00\u822c\u539f\u5219</p> <p>\u7b2c\u4e00\u7ae0\uff1a\u8bed\u8a00\u7b26\u53f7\u7684\u6027\u8d28</p> <pre><code>\u7b26\u53f7\u7684\u7ed3\u6784\uff1a\n     ________________   \u4e0a\n    |   \u6982\u5ff5 -&gt; \u6240\u6307  |\n    -----------------\n    | \u97f3\u54cd\u5f62\u8c61 -&gt; \u80fd\u6307 |   \n    |________________|  \u4e0b\n</code></pre> <p>\u80fd\u6307\u7684\u5c5e\u6027</p> <ul> <li>\u542c\u89c9\u5c5e\u6027</li> <li>\u53ea\u80fd\u5728\u4e00\u4e2a\u5411\u5ea6\u4e0a\u6d4b\u91cf\u957f\u5ea6</li> </ul> <p>\u7b26\u53f7\u5728\u65f6\u95f4\u4e0a\u7684\u8fde\u7eed\u6027\u548c\u65f6\u95f4\u4e0a\u7684\u53d8\u5316\u76f8\u8fde\uff0c\u7b26\u53f7\u7684\u4efb\u610f\u6027\u4f7f\u5176\u65e0\u6cd5\u62b5\u5fa1\u4f7f\u80fd\u6307\u5728\u6240\u6307\u4e0a\u6ed1\u52a8\u7684\u56e0\u7d20\u3002</p> <p>\u4e00\u5207\u79d1\u5b66 <pre><code>        C\n        |\n        |\nA ------------- B  \u540c\u65f6\u8f74\u7ebf\n        |\n        |\n        D\n      \u8fde\u7eed\u8f74\u7ebf\n</code></pre></p> <p>\u8bed\u8a00\u5b66 <pre><code>        C\n        |\n        |\nA ------------- B  \u9759\u6001\u8bed\u8a00\u5b66\uff08\u5171\u65f6\uff09\n        |\n        |\n        D\n    \u6f14\u5316\u8bed\u8a00\u5b66\uff08\u5386\u65f6\uff09\n</code></pre></p> <p>\u5185\u5728\u4e8c\u91cd\u6027\u4f8b\u8bc1</p> <pre><code>        -&gt; \u5171\u65f6\n       \u00b7&lt;---------&gt;\u00b7  \u7532\u65f6\u671f\n  |    |           |\n  \u2228    \u2228           \u2228\n \u5386\u65f6   \u00b7&lt;---------&gt;\u00b7  \u4e59\u65f6\u671f\n</code></pre> <p>\u53ef\u4ee5\u6bd4\u4f5c\u4e0b\u68cb\uff1a\u8861\u5b9a\u7684\u89c4\u5219\u548c\u53d8\u52a8\u7684\u5c40\u52bf</p> <p>\u7b2c\u4e8c\u7f16\uff1a\u5171\u65f6\u8bed\u8a00\u5b66</p> <p>\u540c\u4e00\u6027\uff1a\u5171\u65f6 - \u97f3\u6bb5 -&gt; \u610f\u4e49</p> <p>\u666e\u904d\u4ef7\u503c\uff1a</p> <ul> <li>\u4e00\u79cd\u80fd\u4e0e\u4ef7\u503c\u6709\u5f85\u786e\u5b9a\u7684\u7269\u4ea4\u6362\u7684\u4e0d\u540c\u7684\u7269</li> <li>\u4e00\u4e9b\u80fd\u4e0e\u4ef7\u503c\u6709\u5f85\u786e\u5b9a\u7684\u7269\u76f8\u6bd4\u7684\u7c7b\u4f3c\u7684\u7269</li> </ul> <p>\u8bed\u8a00\u4e4b\u4e2d\u53ea\u6709\u5dee\u522b -\u2014\u2014 \u6ca1\u6709\u79ef\u6781\u8981\u7d20\u7684\u5dee\u522b\u3002\u8bed\u8a00\u662f\u5f62\u5f0f\u800c\u4e0d\u662f\u5b9e\u8d28\u3002</p> <p>\u7b2c\u4e94\u7ae0</p> <ul> <li>\u53e5\u6bb5\u5173\u7cfb\uff1a\u5728\u573a\uff0c\u8bed\u8a00 lingua\uff0c\u201c\u60ef\u7528\u8bed\u201d</li> <li>\u8054\u60f3\u5173\u7cfb\uff1a\u4e0d\u5728\u573a</li> </ul> <p>\u7b2c\u516d\u7ae0\uff1a\u8bed\u8a00\u7684\u673a\u6784</p> <p>\u53e5\u6bb5\u7684\u8fde\u5e26\u5173\u7cfb\uff1a\u6574\u4f53\u7684\u4ef7\u503c\u53d6\u51b3\u4e8e\u5b83\u7684\u90e8\u5206\uff0c\u90e8\u5206\u7684\u4ef7\u503c\u51b3\u5b9a\u4e86\u5b83\u4eec\u5728\u6574\u4f53\u4e2d\u7684\u5730\u4f4d\u3002</p> <pre><code>       ----------\n        d\u00e9-faire\n       ----------\n         /    \\\n    d\u00e9coller  faire\n       /         \\\n    d\u00e9lancer    refaire\n     /             \\\n d\u00e9cendre        contrefaire\n</code></pre> <p>\u6b63\u662f\u8fd9\u4e9b\u4e0d\u540c\u7684\u5f62\u5f0f\u6f02\u6d6e\u5728\u5468\u56f4\uff0c\u8fd9\u4e24\u4e2a\u8bcd\u624d\u80fd\u5206\u89e3\u6210\u5355\u4f4d\uff0c\u6216\u6210\u4e3a\u53e5\u6bb5\u3002</p> <p>\u53ea\u6709\u4e00\u90e8\u5206\u7b26\u53f7\u662f\u7edd\u5bf9\u4efb\u610f\u7684\uff0c\u4efb\u610f\u6027\u4e0d\u80fd\u53d6\u6d88\uff0c\u90fd\u6709\u7a0b\u5ea6\u5dee\u522b\uff0c\u7b26\u53f7\u53ef\u80fd\u662f\u76f8\u5bf9\u5730\u53ef\u4ee5\u8bba\u8bc1\u7684\u3002</p> <p>\u6574\u4f53 &gt; \u90e8\u5206\u4e4b\u548c\u3002poirexier &gt; poiretier</p> <pre><code>                 ------\n               /        \\\n    \u8bcd\u6c47     -             -   \u8bed\u6cd5\n\u4e0d\u80fd\u8bba\u8bc1\u7684\u6781\u7aef   \\        /    \u53ef\u4ee5\u8bba\u8bc1\u7684\u6781\u7aef\n    \u7b26\u53f7         -------       \u7ed3\u6784\n</code></pre> <p>\u7b2c\u4e03\u7ae0\uff1a\u8bed\u6cd5\u548c\u533a\u5206</p> <p>\u62bd\u8c61\u5b9e\u4f53\uff0c\u6700\u540e\u5206\u6790\u8d77\u6765\uff0c\u603b\u662f\u4ee5\u5177\u4f53\u5b9e\u73b0\u4e3a\u57fa\u7840\u7684\u3002</p> <p>\u7b2c\u4e09\u7f16\uff1a\u5386\u65f6\u8bed\u8a00\u5b66</p> <p>\u7b2c\u4e09\u7ae0\uff1a\u8bed\u97f3\u6f14\u5316\u5728\u8bed\u6cd5\u4e0a\u7684\u540e\u679c</p> <ul> <li>\u8bed\u6cd5\u8054\u7cfb\u7684\u7834\u88c2</li> <li>\u8bcd\u7684\u590d\u5408\u7ed3\u6784\u7684\u6d88\u5931</li> <li>\u6ca1\u6709\u8bed\u97f3\u4e0a\u7684\u540c\u6e90\u5bf9\u4f3c\u8bcd</li> <li>\u4ea4\u66ff\uff1a\u5728\u4e24\u7cfb\u5217\u5171\u5b58\u7684\u5f62\u5f0f\u95f4\u6709\u89c4\u5219\u5730\u65b9\u4e92\u6362\u4e24\u4e2a\u97f3\u6216\u97f3\u7ec4\u7684\u4f4d\u7f6e\uff0c\u4e0e\u8bed\u6cd5\u8054\u7cfb</li> </ul> <p>\u7b2c\u56db\u7ae0\uff1a\u7c7b\u6bd4</p> <ul> <li>\u4f20\u7edf\u7684\uff0c\u5408\u6cd5\u7684\u7ee7\u627f\u4eba</li> <li>\u7ade\u4e89\u8005</li> <li>\u7531\u521b\u9020\u8fd9\u7c7b\u7ade\u4e89\u7684\u5404\u79cd\u5f62\u5f0f</li> </ul> <p>\u7b2c\u4e94\u7ae0\uff1a\u7c7b\u6bd4 -&gt; \u6f14\u5316</p> <p>viendre, monru, traisait</p> <p>\u7b2c\u516d\u7ae0\uff1a\u6d41\u4fd7\u8bcd\u6e90</p>"},{"location":"Other/researchchats/","title":"\u8bb0\u5f55\u4e00\u4e0b\u5404\u79cd\u79d1\u7814\u611f\u609f","text":"<p>TODO: add shortcut to the main page</p> <p>!!!</p> <pre><code>\u505a benchmark \u7684\u5de5\u4f5c\u7b80\u76f4\u662f\u5bf9\u8d44\u6e90/\u4eba\u8109/\u89c1\u8bc6/\u7ba1\u7406\u80fd\u529b\u7684\u8003\u5bdf\uff0c\u518d\u4e5f\u4e0d\u81ea\u5351\u505a\u8fc7\u8fd9\u79cd\u4e1c\u897f\u4e86\u3002\n</code></pre>"},{"location":"Other/survivezju/","title":"Survivezju","text":"<p>Reference  </p>"},{"location":"Other/tools/","title":"\u6211\u7684\u5de5\u5177\u7bb1\uff01","text":"<p>\u8bb0\u5f55\u4e00\u70b9\u597d\u7528\u7684\u5de5\u5177</p>"},{"location":"Other/tools/#workflow","title":"\u6211\u7684workflow","text":""},{"location":"Other/tools/#notionobsidian","title":"\u9009\u62e9Notion\u548cObsidian","text":"<p>\u5148\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u7ed3\u8bba</p> \u4f18\u70b9/\u5de5\u5177 Notion Obsidian \u8bed\u6cd5 \u81ea\u5df1\u7684\u4e00\u5957\u8bed\u6cd5\uff0c\u90e8\u5206\u662fmarkdown \u7eafmarkdown \u4e66\u5199\u901f\u5ea6 \u6162 \u5feb \u6587\u6863\u6574\u9f50\u7a0b\u5ea6 \u9ad8 \u4f4e \u90e8\u7f72\u5230mkdocs\u96be\u6613 \u6613\uff0c\u53ef\u76f4\u63a5\u7528 \u96be\uff0c\u9700\u8c03\u6574\u5f88\u591a\u683c\u5f0f \u5bfc\u51fa\u4e2d\u6587\u652f\u6301\u7a0b\u5ea6 \u53ea\u6709\u4e09\u79cd\u5b57\u4f53\uff0c\u90e8\u5206\u4e2d\u6587\u7f3a\u5b57 \u5b57\u4f53\u591a\uff0c\u652f\u6301\u6bd4\u8f83\u597d <p>\u76ee\u524d\u6211\u9009\u62e9\u7684 workflow: \u5b8c\u5168\u629b\u5f03 Ob \u4e86\uff01</p> <pre><code>graph TD\n    \u542c\u5199 --&gt; Notion \n    Notion -- \u6709\u65f6\u95f4 --&gt; mkdocs\n</code></pre>"},{"location":"Other/tools/#todo-list","title":"TODO list \u7528\u4ec0\u4e48\u505a","text":"<p>TODO</p>"},{"location":"Other/tools/#_2","title":"\u6587\u732e\u7ba1\u7406\u5de5\u5177","text":"<p>TODO</p> <p>\u5176\u5b9e\u4ed3\u5e93\u91cc\u672c\u6587\u4ef6\u5939\u4e0b\u7684asset\u91cc\u73b0\u5728\u6709\u4e2a\u600e\u4e48\u914d\u7f6ezotero\u7684ppt\uff0c\u592a\u61d2\u6ca1\u65f6\u95f4\u6574\u8fc7\u6765\uff0c\u53ef\u4ee5\u5148\u53bb\u4ed3\u5e93\u91cc\u627e\u627eorz</p>"},{"location":"Other/tools/#_3","title":"\u96f6\u6563\u5de5\u5177","text":""},{"location":"Other/tools/#_4","title":"\u4e8c\u7ef4\u7801\u751f\u6210\u5668","text":"<p>\u751f\u6210\u957f\u5f97\u4e0d\u50cf\u4e8c\u7ef4\u7801\u7684\u4e8c\u7ef4\u7801 \u76f4\u63a5\u626b\u4e0b\u9762\u7684\u4e8c\u7ef4\u7801\u53ef\u4ee5\u8fdb\u5165\u7f51\u7ad9 </p>"},{"location":"Other/tools/#_5","title":"\u5728\u7ebf\u6253\u65f6\u95f4\u8f74\u5de5\u5177","text":"<p>https://judes.me/lrc_editor/</p>"},{"location":"Other/whynote/","title":"\u5bf9\u7b14\u8bb0\u5de5\u5177\u548c\u4fe1\u606f\u8bb0\u5f55\u7684\u601d\u8003","text":""},{"location":"Other/whynote/#_2","title":"\u4e3a\u4ec0\u4e48\u8981\u5199\u8fd9\u4e9b\u7b14\u8bb0","text":"<ul> <li>\u56e0\u4e3a\u5e9f man \u5b66\u4e60\u6cd5\uff1a\u4e0d\u7528\u5e9f\u4eba\u4e86\uff0c\u81ea\u5df1\u7528\u81ea\u5df1\u7684\u8bdd\u590d\u8ff0\u4e00\u904d\u4e5f\u662f\u8bb2\u8bfe</li> <li>\u56e0\u4e3a\u5b66\u4e86\u4f1a\u5fd8</li> <li>\u56e0\u4e3a\u5b66\u4e86\u4f1a\u5fd8\u662f\u6b63\u5e38\u7684\u4e8b</li> <li>\u56e0\u4e3a\u5b66\u5b8c\u5fd8\u4e86\u4f46\u662f\u8fd8\u662f\u81ea\u5df1\u7684\u7b14\u8bb0\u67e5\u8d77\u6765\u5feb</li> </ul> <p>\u672c\u6765\u60f3\u5199\u591a\u4e00\u70b9\u7684\uff0c\u4f46\u662f\u592a\u61d2\u4e86</p>"},{"location":"Other/whynote/#_3","title":"\u7b14\u8bb0\u5de5\u5177\uff1f","text":"<p>\u5bf9\u6211\u6765\u8bf4\u4e00\u4e2a\u5b8c\u5168\u9762\u5411\u8fc7\u7a0b\u7684 -&gt; \u4e00\u4e2a\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684</p> <p>\u6bd4\u5982 notion \u662f\u9762\u5411\u6d41\u7a0b\u7684</p> <p>\u800c\u5982\u679c\u8981\u6709\u7ed3\u6784\u5199\u4f5c\uff0c\u5c31\u7528 mkdocs </p>"},{"location":"Other/whynote/#todolist","title":"TODOlist\uff1f","text":"<p>\u5bf9\u6211\u6765\u8bf4\u4e5f\u9700\u8981\u4e00\u4e2a\u9762\u5411\u8fc7\u7a0b\u7684\uff08\u60f3\u5230\u9700\u8981\u505a\u6240\u4ee5\u8bb0\u4e0b\u6765\u7684\u6a21\u7cca\u4efb\u52a1\uff09+ \u4e00\u4e2a\u9762\u5411\u5bf9\u8c61\u7684\uff08\u4e00\u4e2a\u6709\u660e\u786e\u8d77\u6b62\u65f6\u95f4\u7684\u3001\u7ed3\u675f\u6807\u5fd7\u7684\u4efb\u52a1\uff09\u3002</p> <p>\u524d\u8005\u6211\u5e0c\u671b\u662f\u4e00\u4e2a\u53ef\u4ee5\u65e0\u9650\u6269\u5c55\u7684 list\uff0c\u5e76\u4e14\u5141\u8bb8\u6dfb\u52a0\u5404\u79cd sublist -&gt; \u4e00\u4e2a\u5f88\u8212\u670d\u7684 markdown \u7f16\u8f91\u5668\u5373\u53ef\u3002</p> <p>\u540e\u8005\u5219\u6700\u597d\u6709\u5929\u3001\u5468\u3001\u6708\u7b49 view \u53ef\u4ee5\u770b\u4efb\u52a1\u7684 availability\u3002</p> <p>\u6211\u73b0\u5728\u7684\u65b9\u6cd5</p>"},{"location":"Other/whynote/#_4","title":"\u8bba\u6587\u7b14\u8bb0","text":"<p>\u6211\u662f\u548b\u529e</p>"},{"location":"Other/zju_ling_cs/","title":"ZJU English Major to CS","text":"<p>\u26a0\ufe0f \u611f\u89c9\u5f53\u65f6\u5199\u5f97\u4e0d\u662f\u5f88\u597d\uff0c\u73b0\u5728\u5f88\u591a\u89c2\u5ff5\u53c8\u6709\u4e9b\u6539\u53d8\uff0c\u53ef\u80fd24\u5e74\u6625\u8282\u671f\u95f4\u7a7a\u4e0b\u6765\u4f1a\u518d\u8ba4\u771f\u6539\u4e00\u4e0borz</p>"},{"location":"Other/zju_ling_cs/#_1","title":"\u672c\u6587\u6863\u662f\u4ec0\u4e48\uff1f","text":"<p>\u7b14\u8005\u8f6c\u4e13\u4e1a\u8e29\u8fc7\u7684\u5751\u548c\u5bf9\u540e\u8f88\u7684\u5efa\u8bae\uff0c\u771f\u5fc3\u60f3\u5efa\u7acb\u8d77ZJU\u5185\u90e8\u826f\u597d\u7684\u4f20\u5e2e\u5e26\u6c1b\u56f4\u3002</p>"},{"location":"Other/zju_ling_cs/#_2","title":"\u89c2\u5ff5&amp;\u4e60\u60ef\u95ee\u9898","text":"<p>\u5728\u5177\u4f53\u5efa\u8bae\u524d\u9996\u5148\u56de\u7b54\u4e00\u4e9b\u5e38\u6709\u7684\u62c5\u5fe7+\u505a\u4e00\u4e9b\u4e60\u60ef\u65b9\u9762\u7684\u63d0\u9192</p>"},{"location":"Other/zju_ling_cs/#cs","title":"\u6211\u80fd\u8f6c\u5230CS\u5417\uff1f","text":"<p>\u80fd\u3002\u6709\u5982\u4e0b\u6848\u4f8b\uff08\u4e0d\u4ee3\u8868\u6240\u6709\u4eba\u613f\u610f\u88ab\u8054\u7cfb\u5230\uff0c\u4e0d\u4fdd\u8bc1\u63d0\u4f9b\u8054\u7cfb\u65b9\u5f0f\uff09</p> <ul> <li>16\u7ea7 +CS\u53cc\u5b66\u4f4d\u2192\u6e05\u534e\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u6240CV\u65b9\u5411 \u7855\u58eb\u751f\u6216PhD</li> <li>16\u7ea7 +\u672c\u6821CS\u65b9\u5411\u79d1\u7814\u2192\u5317\u7f8e\u4e00\u6240top20\u6821\uff08\u5177\u4f53\u4e0d\u77e5\uff09 PhD</li> <li>16\u7ea7 +CS\u53cc\u5b66\u4f4d\u2192ZJU\u672c\u6821CV\u65b9\u5411PhD\u2192\u5728UCSD\u4ea4\u6362</li> <li>16\u7ea7 +CS\u8f85\u4fee\u2192CMU LTI ms\u2192UCSD NLP\u65b9\u5411PhD</li> <li>17\u7ea7 +\u66fc\u5927\u8bed\u8a00\u5b66\u53cc\u5b66\u4f4d\u2192NWU CompLing\u65b9\u5411PhD</li> <li>17\u7ea7 +CS\u53cc\u5b66\u4f4d\u2192\u672c\u79d1\u6bd5\u4e1a\u627e\u5230\u5de5\u4f5c</li> <li>\u4f60\u7684\u524d\u8f88\u5f88\u591a\u4e5f\u5f88\u6210\u529f\uff0c\u6240\u4ee5\u4f60\u4e5f\u80fd\u3002</li> </ul>"},{"location":"Other/zju_ling_cs/#nlp","title":"NLP\u4e0d\u8981\u8bed\u8a00\u5b66\u540c\u5b66\u5417\uff1f","text":"<ul> <li>\u9996\u5148\uff0c\u4ece\u4f60\u51b3\u5b9a\u8f6c\u4e13\u4e1a\u7684\u4e00\u523b\u8d77\u5c31\u8981\u628a\u81ea\u5df1\u770b\u6210CS\u4eba\u3002</li> <li>\u5176\u6b21\uff0cNLP\u4e2d\u6709\u6570\u4e2a\u9886\u57df\u4ecd\u9700\u8981\u624e\u5b9e\u7684\u8bed\u8a00\u5b66\u529f\u5e95\uff08\u5728\u4e0b\u65b9\u79d1\u7814\u7ae0\u8282\u8be6\u7ec6\u4ecb\u7ecd\uff09\u3002\u5728ChatGPT\u95ee\u4e16\u540eNLP\u7684\u7814\u7a76\u65b9\u5f0f\u5927\u8f6c\u53d8\uff0c\u6211\u76f8\u4fe1\u591a\u4e13\u4e1a\u80cc\u666f\u5728\u8fd9\u79cd\u65f6\u5019\u662f\u4e00\u79cd\u4f18\u52bf\uff0c\u603b\u80fd\u4e3a\u9886\u57df\u5e26\u6765\u65b0\u7684idea\u3002\u53ea\u662f\u8bfb\u8005\u5e94\u5f53\u628a\u672c\u4e13\u4e1a\u7684\u77e5\u8bc6\u4e5f\u5b66\u597d\uff0c\u5728\u9762\u5bf9CS\u4e13\u4e1a\u7684NLP\u7814\u7a76\u8005\u65f6\u4f60\u5bf9\u4ed6\u4eec\u800c\u8a00\u7684\u89d2\u8272\u5e94\u81f3\u5c11\u662f\u4e00\u4e2a\u8bed\u8a00\u5b66\u4e13\u5bb6\u3002</li> <li>\u8ddf\u56fd\u5916\uff08\u4e3b\u8981\u662f\u5317\u7f8e\uff09\u7684\u8bed\u8a00\u5b66\u4eba\u6807\u9f50\uff0c\u5317\u7f8e\u7684\u8bed\u8a00\u5b66\u5b66\u751f\u90fd\u8981\u505a\u5927\u91cf\u5b9e\u9a8c\u5199\u5927\u91cf\u4ee3\u7801\u7684\uff0c\u8bed\u8a00\u5b66\u662f\u7406\u79d1\u3002Stanford\u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406\u672c\u79d1\u8bfe\u7a0b\u540c\u65f6\u5f00\u5728CS\u548cLing\u7684\u8bfe\u53f7\u4e0b\u3002\u5317\u7f8eNLP\u7814\u7a76\u8005\u6709\u5f88\u591a\u90fd\u6709CS\u548cLing\u53cc\u5b66\u58eb\u5b66\u4f4d\u3002</li> </ul>"},{"location":"Other/zju_ling_cs/#_3","title":"\u660e\u786e\u4e00\u4e2a\u5341\u5e74\u5230\u4e09\u5341\u5e74\u7684\u957f\u8fdc\u89c4\u5212\uff0c\u4e3b\u8981\u662f\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898","text":"\u95ee\u9898 \u6211\u7684\u56de\u7b54 \u6211\u8981\u5728\u54ea\u91cc\u751f\u6d3b\uff0c\u56fd\u5185\u8fd8\u662f\u56fd\u5916\uff1f \u6211\u8f6cCS\u662f\u66f4\u591a\u56e0\u4e3a\u559c\u6b22\u7406\u5de5\u79d1\uff0c\u8fd8\u662f\u56e0\u4e3a\u559c\u6b22\u5de5\u8d44\uff1f \u6211\u8981\u8fdb\u5de5\u4e1a\u754c\uff0c\u53bb\u79d1\u6280\u4e92\u8054\u7f51\u516c\u53f8\u5de5\u4f5c\uff1b\u8fd8\u662f\u7559\u5728\u5b66\u672f\u754c\uff0c\u5728\u9ad8\u6821\u6216\u7814\u7a76\u6240\u5de5\u4f5c\uff1f \u6211\u8981\u505aCS\u9664NLP\u5176\u5b83\u7684\u65b9\u5411\uff0c\u5982\u7cfb\u7edf\u3001\u7f51\u7edc\u3001\u5b89\u5168\u3001CV\u6216\u7eaf\u6df1\u5ea6\u5b66\u4e60\u7406\u8bba\u65b9\u5411\uff1b\u8fd8\u662f\u505a\u504f\u6df1\u5ea6\u5b66\u4e60\u7684NLP\u65b9\u5411\uff1b\u8fd8\u662f\u505a\u504f\u8bed\u8a00\u5b66\u7684NLP\u65b9\u5411\uff1f \u6211\u6709\u591a\u5c11\u7ecf\u8d39\uff1f \u6211\u591a\u5c11\u5e74\u5185\u9700\u8981\u8f6c\u597d\u4e13\u4e1a\uff1f"},{"location":"Other/zju_ling_cs/#_4","title":"\u89c4\u5212\u4eba\u751f\u4e2d\u8be5\u505a/\u4e0d\u8be5\u505a\u7684\u4e8b\u7684\u4e24\u4e2a\u51c6\u5219","text":"<ul> <li> <p>\u60f3\u8c61\u4e00\u4e2a\u7b80\u5386     \u80fd\u5728\u7b80\u5386\u4e0a\u5f88\u663e\u773c\u548c\u4e00\u4e2a\u77ed\u8bed\u4ee5\u5185\u80fd\u8868\u8ff0\u7684\u7ecf\u5386\uff0c\u624d\u8981\u52aa\u529b\u53bb\u5237\u3002     \u6bd4\u5982\u76f8\u6bd4\u4e8e\u201c\u53cc\u4e13\u4e1a\uff0c\u662f\u4e00\u4e2azju\u7279\u6709\u7684\u8f85\u4fee\uff0c\u4e0d\u6c34\u7684\uff0c\u5b83\u8981\u6c42\u7684\u8bfe\u6bd4\u8f85\u4fee\u591a\uff0c\u4f8b\u5982\u6211\u4fee\u4e86xxx\uff0c\u6211\u53ea\u662f\u6ca1\u4feexxx\u201d\u548c\u201c\u4fee\u4e86\u4e00\u534aCS\u8bfe\u4e00\u534aAI\u8bfe\u201d\uff0c\u201cCS\u53cc\u5b66\u4f4d\u201d\u5c31\u66f4\u9002\u5408\u51fa\u73b0\u5728\u7b80\u5386\u4e0a\u3002</p> </li> <li> <p>\u505a\u91cd\u5927\u51b3\u5b9a\u65f6\uff0c\u81f3\u5c11\u54a8\u8be220\u4e2a\u4eba\u7684\u5efa\u8bae\uff0c\u8981\u4e48\u54a8\u8be2\u4e86\u89e3n\u4e2a\u4eba\u5efa\u8bae\u7684\u4eba\uff08\u6bd4\u5982\u76f8\u5e94\u884c\u4e1a\u7684\u4eb2\u4eba\u670b\u53cb\u3001\u5b66\u751f\u5f88\u591a\u7684\u8001\u5e08\uff09\u6765\u62b5n\u4e2a\u4eba\uff0c\u603b\u4e4b\u603b\u548c\u8981\u62ff\u523020\u4e2a\u4eba\u5de6\u53f3\u7684\u5efa\u8bae\u3002</p> </li> </ul>"},{"location":"Other/zju_ling_cs/#cs_1","title":"\u628a\u81ea\u5df1\u770b\u6210CS\u4eba","text":"<ul> <li>\u4e0d\u8981\u628a\u81ea\u5df1\u770b\u4f5c\u4f4e\u4eba\u4e00\u7b49\uff0c\u6240\u4ee5CS\u540c\u5b66\u8be5\u6709\u7684\u673a\u4f1a\u548c\u540d\u989d\u4f60\u90fd\u8981\u4e89\u53d6\u3002\u4e00\u6b21\u6b21\u7ed9\u8001\u5e08\u53d1\u90ae\u4ef6\u3001\u8dd1\u529e\u516c\u5ba4\u662f\u5e38\u6709\u4e14\u5408\u7406\u7684\u4e8b\uff0c\u4e0d\u5fc5\u60f3\u201c\u8001\u5e08\u89c9\u5f97\u6211\u4e0d\u591f\u683c\u600e\u4e48\u529e\uff1f\u201c\uff0c\u8981\u60f3\u60f3\u201d\u5982\u679c\u8fd9\u6b21\u673a\u4f1a\u803d\u8bef\u4e86\u6211\u81ea\u5df1\uff0c\u4ee5\u540e\u6709\u522b\u7684\u673a\u4f1a\u4f1a\u66f4\u4e0d\u591f\u683c\u201c\u5440</li> <li>\u4e0d\u8981\u6709\u201c\u5b66\u4e0d\u61c2\u3001\u8fdb\u5ea6\u843d\u540e\u4e00\u70b9\u6ca1\u4e8b\u201d\u8fd9\u79cd\u89c2\u5ff5\uff0c\u4f60\u5e94\u5f53\u65f6\u523b\u4e0e\u540c\u7ea7\u7684CS\u540c\u5b66\u6bd4\u8f83\u8fdb\u5ea6\uff0c\u4e89\u53d6\u4e0d\u8981\u843d\u540e\u3002</li> </ul>"},{"location":"Other/zju_ling_cs/#cs_2","title":"CS\u6709\u8001\u5e08\u540c\u5b66\u770b\u4e0d\u8d77\u6211\u600e\u4e48\u529e\uff1f","text":"<ul> <li>\u65e0\u9700\u4ee5\u504f\u6982\u5168\uff0c\u5927\u90e8\u5206CS\u8001\u5e08\u540c\u5b66\u662f\u5f88nice\u7684\uff0c\u5982\u679c\u6709\u4e0d\u652f\u6301\u4f60\u7684\u4eba\u4e5f\u65e0\u9700\u8ba1\u8f83\uff0c\u65f6\u523b\u60f3\u60f3\u652f\u6301\u4f60\u9f13\u52b1\u4f60\u7684\u90a3\u4e9b\u4eba\u3002</li> <li>\u505a\u4e8b\u524d\u63d0\u524d\u8ddf\u8001\u5e08\u540c\u5b66\u63a8\u9500\u4e00\u4e0b\u81ea\u5df1\uff0c\u6839\u636e\u9a6c\u592a\u6548\u5e94\uff0c\u4f60\u4f1a\u5f97\u5230\u8d8a\u6765\u8d8a\u591a\u6b63\u53cd\u9988\u3002\u6bd4\u5982\u9009\u8bfe\u524d\u53ef\u80fd\u6709\u8001\u5e08\u8d28\u7591\u4f60\u7684\u4e13\u4e1a\uff0c\u95ee\u4f60\u4f1a\u4e0d\u4f1a\u5b66\u4e0d\u61c2\u8fd9\u95e8\u8bfe\uff0c\u4f60\u53ef\u4ee5\u5728\u6c9f\u901a\u65f6\u6709\u610f\u65e0\u610f\u5411\u8001\u5e08\u63d0\u4e00\u4e0b\u4e4b\u524d\u4f60\u5df2\u7ecf\u6709\u54ea\u4e9b\u6210\u7ee9\u548c\u6280\u80fd\uff0c\u8ba9\u8001\u5e08\u660e\u767d\u54ea\u4e9b\u5730\u65b9\u5e94\u8be5\u5173\u7167\u4f60\uff0c\u54ea\u4e9b\u5730\u65b9\u53ef\u4ee5\u653e\u5fc3\uff0c\u8fd9\u6837\u5728\u8001\u5e08\u6709\u610f\u65e0\u610f\u7684\u652f\u6301\u4e0b\u5b66\u751f\u4e5f\u5bb9\u6613\u5b66\u5f97\u6bd4\u9884\u671f\u66f4\u597d\u3002</li> </ul>"},{"location":"Other/zju_ling_cs/#cs_3","title":"\u5b66\u4e0d\u597dCS\uff0c\u662f\u4e0d\u662f\u56e0\u4e3a\u5b66\u82f1\u8bed\u8bfe\u4f7f\u6211\u53d8\u4e0d\u806a\u660e\u4e86\uff1f","text":"<p>\u4e0d\u662f\u7684\u3002 - \u7406\u8bba\u4e0a\u662f\u5b8c\u5168\u53ef\u4ee5\u5b66\u597d\u7684\u3002NLP\u5708\u6709\u5f88\u591a\u7814\u7a76\u8005\u8bfb\u8fc7\u8bed\u8a00\u5b66\u548cCS\u53cc\u672c\u79d1\uff0c\u4ee3\u8868AP\u6709AllenNLP Noah Smitch, Colimbia University Zhou Yu\uff08ZJU\u7684\u672c\u79d1\uff09. \u8bfb\u8bed\u8a00\u5b66\u6ca1\u6709\u803d\u8bef\u4ed6\u4eec\u7684\u8111\u5b50\uff0c\u53cd\u800c\u662f\u4e00\u4e2a\u5f88\u597d\u7684idea\u6765\u6e90\u3002\u6211\u611f\u89c9\u6709\u5f88\u591a\u5929\u624d\u7684\u6848\u4f8b\u53ef\u4ee5\u8bc1\u660e\u4eba\u7684\u77e5\u8bc6\u5bb9\u91cf\u548c\u5b66\u4e60\u80fd\u529b\u4e0a\u9650\u662f\u8d85\u51fa\u5927\u5bb6\u60f3\u8c61\u7684\uff0c\u5b66\u4e24\u4e2a\u4e13\u4e1a\u8fd9\u4ef6\u5c0f\u4e8b\u8fdc\u8fdc\u5728\u8fd9\u4e2a\u4e0a\u9650\u4e4b\u4e0b\u3002\u6211\u6c38\u8fdc\u8ba4\u4e3a\u6bc5\u529b\u548c\uff08\u5bf9\u81ea\u5df1\u4eba\u751f\u4e0a\u9650\u7684\uff09\u60f3\u8c61\u529b\u6bd4\u5f53\u524d\u80fd\u529b\u66f4\u6709\u51b3\u5b9a\u4f5c\u7528\u3002 - \u5b9e\u9645\u82f1\u8bed\u4e13\u4e1a\u53bbCS\u53cc\u4e13\u4e1a\u5bb9\u6613\u5403\u4f4e\u7ee9\u70b9\u7684\u539f\u56e0\uff0c\u5f80\u5f80\u4e0d\u662f\u80fd\u529b\u667a\u529b\u4e0d\u8db3\uff0c\u800c\u662f\u6709\u4fe1\u606f\u5dee\uff1a\u751f\u6d3b\u5728\u6587\u79d1\u7684\u6563\u6f2b\u73af\u5883\u4e2d\u96be\u4ee5\u77e5\u9053\u5927\u90e8\u5206\u540c\u5b66\u7684\u81ea\u5b66\u8fdb\u5ea6\uff0c\u548c\u5982\u679c\u67d0\u4e9b\u8bfe\u7a0b\u6709\u5b9e\u8df5\u4e0a\u7684\u5751\uff0c\u6ca1\u6709\u4e0e\u5927\u90e8\u961f\u4e00\u8d77\u5b66\u4e60\u7684\u540c\u5b66\u5c31\u96be\u4ee5\u77e5\u9053\u600e\u6837\u7075\u6d3b\u5e94\u5bf9\u3002\u6240\u4ee5\u5efa\u8bae\u4e0e\u540c\u5b66\u4e00\u8d77\u5b66\u4e60\uff0c\u53c2\u89c1\u4e0b\u4e00\u6761\u3002</p>"},{"location":"Other/zju_ling_cs/#cscs","title":"\u8981\u62e5\u6709\u4e00\u4e2a\u6216\u51e0\u4e2a\u540c\u6837\u8de8\u4e13\u4e1a\u5b66CS\u7684\u670b\u53cb\uff0c\u6216\u76f4\u63a5\u878d\u5165\u540c\u4e00\u7ea7\u7684CS\u672c\u79d1\u751f\u5708\u5b50\u91cc\u3002\u5982\u679c\u5b9e\u5728\u6ca1\u6709\uff0c\u4e00\u4e9b\u5176\u5b83\u5de5\u79d1\u7684\u540c\u5b66\u4e5f\u53ef\u4ee5\u3002","text":"<p>\u540c\u5b66\u7684\u7528\u5904\u6709\uff1a - \u5e2e\u52a9\u4f60\u8ddf\u4e0a\u5b66\u4e60\u8282\u594f\u3002CS\u7684\u751f\u6d3b\u8282\u594f\u662f\u82f1\u8bed\u4e13\u4e1a\u76842\u500d\uff0c\u662f\u7406\u79d1\u4e13\u4e1a\u76841.5\u500d\uff0c\u5982\u679c\u51b3\u5b9a\u8f6c\u4e13\u4e1a\u662f\u9700\u8981\u4e3b\u52a8\u63d0\u9ad8\u4e00\u4e0b\u751f\u6d3b\u8282\u594f\u7684\uff0c\u505a\u4e8b\u79ef\u6781\u4e00\u70b9\uff0c\u544a\u522b\u62d6\u5ef6\u3002 - \u4e92\u76f8\u63a8\u8350\u597d\u7684\u81ea\u5b66\u8d44\u6599\uff0c\u4e92\u76f8\u5206\u4eab\u7b14\u8bb0\u548c\u8ba8\u8bba\u9898\u76ee\uff0c\u5206\u5de5\u6574\u7406\u671f\u672b\u590d\u4e60\u8d44\u6599\uff0c\u671f\u672b\u4e92\u76f8\u63d0\u95ee\uff0c\u5f62\u6210\u81ea\u5b66\u6c1b\u56f4\uff0c\u8282\u7701\u4e00\u4e9b\u8e29\u5751\u65f6\u95f4\u3002 - \u5982\u679c\u67d0\u4e9b\u8bfe\u7a0b\u5b89\u6392\u6709\u6559\u5b66\u4e8b\u6545\uff0c\u4f60\u53ef\u4ee5\u53ca\u65f6\u77e5\u9053\u5927\u90e8\u5206\u540c\u5b66\u662f\u600e\u6837\u5e94\u5bf9\u7684\uff0c\u53ca\u65f6\u8c03\u6574\u81ea\u5df1\u7684\u5e94\u5bf9\u63aa\u65bd\uff0c\u9632\u6b62\u5982\u679c\u6210\u7ee9\u5360\u6bd4\u7a81\u7136\u8c03\u6574\uff0c\u81ea\u5df1\u5c06\u52aa\u529b\u82b1\u5728\u4e86\u6700\u540e\u5360\u6210\u7ee9\u6bd4\u91cd\u5f88\u5c0f\u7684\u5730\u65b9\u3002</p>"},{"location":"Other/zju_ling_cs/#_5","title":"\u8981\u591a\u8bb0\u7b14\u8bb0","text":"<p>\u8bb0\u7b14\u8bb0\u662f\u8d39\u66fc\u5b66\u4e60\u6cd5\u7684\u6295\u5165\u4ea7\u51fa\u6bd4\u6700\u9ad8\u7684\u5b9e\u8df5\u5f62\u5f0f\uff0c\u5373\u65e2\u5e2e\u52a9\u68c0\u67e5\u7406\u89e3\uff0c\u7b14\u8bb0\u53c8\u9020\u798f\u540e\u4eba\u3002\u4f60\u53ef\u4ee5\u79c9\u627f\u5f00\u6e90\u7cbe\u795e\uff0c\u50cf\u524d\u8f88\u4e00\u6837\u591a\u5c06\u7b14\u8bb0\u516c\u5e03\u9020\u798f\u540e\u4eba\uff08\u4e0d\u8fc7\u8bf7\u9075\u5b88\u8bda\u4fe1\u5b88\u5219\uff09\u3002\u975e\u5e38\u5e0c\u671bZJU\u80fd\u9010\u6e10\u5f62\u6210\u8f83\u597d\u7684\u4f20\u5e2e\u5e26\u6c1b\u56f4\uff0c\u8ba9\u540e\u8f88\u4e5f\u6709\u826f\u597d\u6821\u53cb\u8d44\u6e90\u53ef\u4eab\u7528\u3002</p>"},{"location":"Other/zju_ling_cs/#_6","title":"\u6211\u53ef\u4ee5\u4ee5\u600e\u6837\u7684\u8eab\u4efd\u672c\u79d1\u6bd5\u4e1a\uff1f\u6211\u6709\u54ea\u4e9b\u53ef\u884c\u7684\u51fa\u8def\uff1f","text":"<p>\u4ee5\u4e0b\u8fd9\u4e9b\u90fd\u662f\u53ef\u80fd\u505a\u5230\u7684\uff0c\u6211\u4e5f\u5206\u522b\u5217\u51fa\u4e86\u6211\u8ba4\u4e3a\u9700\u8981\u51c6\u5907\u7684\u80cc\u666f\u3002 - \u51fa\u56fdms\uff1a\u7ee9\u70b9\uff0c\u6691\u7814/\u5b9e\u4e60 - \u51fa\u56fd\u76f4\u63a5phd\uff1a\u6691\u7814\uff0cpaper - \u672c\u6821\u76f4\u535a\uff1a\u7ee9\u70b9\uff0c\u8fdb\u672c\u6821\u7ec4\uff0c\u590f\u4ee4\u8425\uff0cpaper - \u8de8\u6821\u76f4\u535a\uff1a\u7ee9\u70b9\uff0c\u5bf9\u65b9\u6821\u590f\u4ee4\u8425\uff0cpaper - \u5de5\u4f5c\uff1a\u5237\u9898\uff0c\u5b9e\u4e60 \u5176\u4e2d\u6211\u8ba4\u4e3a\u503c\u5f97\u6ce8\u610f\u7684\u8fd8\u6709\uff0c\u5177\u4f53\u6700\u597d\u7531\u8bfb\u8005\u518d\u54a8\u8be2\u76f8\u5e94\u8eab\u4efd\u7684\u4eba\u7684\u5efa\u8bae\u3002\u672c\u6761\u9002\u7528\u524d\u9762\u6240\u8ff0\u201c20\u4e2a\u4eba\u5efa\u8bae\u201d\u51c6\u5219\u3002</p>"},{"location":"Other/zju_ling_cs/#_7","title":"\u8bfe\u7a0b","text":""},{"location":"Other/zju_ling_cs/#cs_4","title":"CS\u5fc5\u4fee\u8bfe","text":"<p>\u9996\u5148\u8981\u660e\u786e\u4e00\u4e2a\u8ba4\u77e5\u95ee\u9898\uff1a\u8bfbCS\u53cc\u5b66\u4f4d\u662f\u4e00\u4e2a\u539f\u5b50\u6027\u7684\u4e8b\u52a1\uff0c\u8981\u4e48\u4e0d\u8bfb\uff0c\u8981\u4e48\u6309\u9700\u6c42\u8bfb\u5b8c\u6216\u8f85\u4fee\u6216\u53cc\u5b66\u4f4d\uff0c\u8fd9\u4e24\u79cd\u9009\u62e9\u90fd\u662f\u6295\u5165\u4ea7\u51fa\u6bd4\u8f83\u9ad8\u7684\uff1b\u6295\u5165\u4ea7\u51fa\u6bd4\u6700\u4f4e\u7684\u662f\u8bfb\u4e00\u534a\uff08\u5fae\u8f85\u4fee\u6216\u53cc\u4e13\u4e1a\uff09\u3002 \u8be5\u56fe\u4e2d\u9664\u6570\u7406\u57fa\u7840\u6a21\u5757\u4e0d\u662f\u53cc\u5b66\u4f4d\u5fc5\u4fee\uff0c\u5176\u5b83\u662f\u5fc5\u4fee\u3002  \uff08\u8fd9\u4e2a\u56fe\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6709\u4e2a\u7ea2\u5708\uff0c\u627e\u4e0d\u5230\u539f\u56fe\u4e86\uff0c\u6279\u8bc4cyh\u540c\u5b66\u4e71\u753b\uff09</p> <p>\u9009\u4e0d\u4e0aCS\u7684\u8bfe\u600e\u4e48\u529e\uff1f - \u6700\u6709\u6548\uff1a\u8865\u9009+\u5728\u8865\u9009\u7684\u51e0\u5929\u91cc\u7ebf\u4e0b\u53bb\u9009\u8bfe\u529e\u6216\u7ed9\u9009\u8bfe\u529e\u53d1\u90ae\u4ef6\u3002\u674e\u6653\u8001\u5e08\u548c\u5f20\u4f20\u534e\u8001\u5e08\u90fd\u5f88nice\uff0c\u8868\u793a\u81ea\u5df1\u5f88\u60f3\u9009\u8bfe\uff0c\u8ddf\u8001\u5e08\u8bf4\u660e\u539f\u56e0\u3002 - \u7b2c\u4e8c\u6709\u6548\uff1a\u5982\u679c\u4efb\u8bfe\u8001\u5e08\u5728\u8ba1\u9662\u8bdd\u8bed\u6743\u8f83\u5927\uff0c\u8bf7\u4efb\u8bfe\u8001\u5e08\u5e2e\u5fd9\u8ddf\u9009\u8bfe\u529e\u8bf4\uff0c\u80fd\u4fdd\u8bc1\u4f60\u9009\u4e0a\u8be5\u8001\u5e08\u7684\u8bfe\u3002 - \u7b2c\u4e09\u6709\u6548\uff1a\u9009\u8bfe\u65f6\u4e0eCS\u7684\u540c\u5b66\u5546\u91cf\uff0c\u505a\u51fa\u65f6\u95f4\u6b63\u597d\u7684\u4e00\u4e9b\u8bfe\u8868\u3002\u53ef\u80fd\u6d89\u53ca\u5230\u201c\u7528\u4e00\u4e9b\u8bfe\u5835\u4f4f\u53e6\u4e00\u4e9b\u8bfe\u201d\u8fd9\u79cd\u590d\u6742\u64cd\u4f5c\uff0c\u6240\u4ee5\u5408\u4f5c\u6bd4\u8f83\u5212\u7b97\u3002</p> <p>\u600e\u4e48\u5b66\uff1f - ZJU\u8bfe\u7a0b\u5171\u4eab\u8ba1\u5212 https://github.com/QSCTech/zju-icicles - \u56fe\u7075\u73ed\u8bfe\u7a0b\u901f\u901a\u8ba1\u5212 https://github.com/ZJU-Turing/TuringCourses - \u4e00\u4f4d\u5b66\u957f\u7684\u4f18\u8d28\u7b14\u8bb0 \u54b8\u9c7c\u6684\u7684\u4ee3\u7801\u7a7a\u95f4\uff01 - \u54b8\u9c7c\u6684\u7684\u4ee3\u7801\u7a7a\u95f4 (xuan-insr.github.io) - \u4e00\u4f4d\u5b66\u957f\u7684\u4f18\u8d28\u7b14\u8bb0 https://github.com/Zhang-Each/CourseNoteOfZJUSE</p>"},{"location":"Other/zju_ling_cs/#ai","title":"AI","text":"<p>AI\u8bfe\u4e00\u822c\u6bd4CS\u8bfe\u597d\u9009\uff0c\u4f46\u662f\u5982\u679c\u9009\u4e0d\u4e0a\u4e5f\u8bf7\u9075\u7167\u4e0a\u6761\u4e2d\u7684\u5efa\u8bae\u3002 \u975e\u5fc5\u8981\u4e0d\u9009AI\u8bfe\uff0cAI\u8bfe\u6700\u5927\u7684\u6536\u83b7\u662f\u5728\u7b80\u5386\u4e0a\u4f5c\u4e3a\u4e00\u4e2a90+\u8bfe\u7a0b\u51fa\u73b0\uff0c\u57fa\u672c\u5b66\u4e0d\u5230\u4e1c\u897f\uff08\u9664\u4e86NLP\u8bfe\u6211\u611f\u89c9\u542c\u8bfe\u6536\u83b7\u633a\u5927\u7684\uff09\uff0c\u4e3b\u8981\u9760\u81ea\u5b66\u540e\u5377\u51fa\u5927\u4f5c\u4e1a\u3002</p>"},{"location":"Other/zju_ling_cs/#_8","title":"\u8bed\u8a00\u5b66","text":"<p>\u56e0\u4e3a\u82f1\u4e13\u57f9\u517b\u65b9\u6848\u8fd8\u662f\u8981\u6c42\u4fee\u5927\u91cf\u4e13\u4e1a\u8bfe\u7684\uff0c\u611f\u89c9\u53ef\u4ee5\u5c3d\u91cf\u628a\u8bed\u8a00\u5b66\u6a21\u5757\u591a\u4fee\u4e00\u70b9\uff0c\u6709\u4e9b\u5728\u8fdb\u7ec4\u7684\u65f6\u5019\u53ef\u80fd\u8fd8\u662f\u8ba4\u53ef\u7684\u3002 \u4ee5\u4e0b\u8bfe\u7a0b\u5982\u679c\u62ff\u4e86\u9ad8\u5206\u503c\u5f97\u5728\u7b80\u5386\u4e0a\u4e00\u63d0 - \u5f53\u4ee3\u8bed\u8a00\u5b66 - \u8bed\u97f3\u5b66 - \u53e5\u6cd5\u5b66 - \u5fc3\u7406\u8bed\u8a00\u5b66 - \u8bed\u4e49\u5b66 - \u8bed\u7528\u5b66 - \u8bed\u6599\u5e93\u8bed\u8a00\u5b66</p>"},{"location":"Other/zju_ling_cs/#_9","title":"\u6570\u5b66","text":"<p>\u5bf9\u4e8ePhD\u3001\u627e\u5de5\u548c\u56fd\u5185\u76f4\u535a\uff1a \u53ef\u80fd\u4e0d\u9700\u8981\u6570\u5b66\u3002\u3002\u3002\u8ba4\u4e3a\u6700\u597d\u4e0d\u8981\u989d\u5916\u9009\u6570\u5b66\u8bfe \u6211\u81f3\u4eca\u9047\u5230\u7684\u8001\u5e08\u6ca1\u6709\u56e0\u4e3a\u6211\u7b80\u5386\u4e0a\u4efb\u4f55\u6570\u5b66\u76f8\u5173\u7684\u4e1c\u897f\u800c\u5f55\u6211\u6216\u62d2\u6211\u7684\uff0c\u90fd\u662f\u53ea\u95ee\u7f16\u7a0b\u3002 CS\u4e13\u4e1a\u8bfe\u91cc\u7684\u79bb\u6563\u6570\u5b66\u548c\u8ba1\u7b97\u7406\u8bba\uff08\u548c\u53ef\u80fd\u8fd8\u6709\u6570\u903b\uff09\u5df2\u7ecf\u8db3\u591f\u57f9\u517b\u6570\u5b66\u601d\u7ef4\u3002 \u5982\u679c\u62c5\u5fc3\u6570\u636e\u5206\u6790\u548c\u7edf\u8ba1\u6280\u80fd\uff0c\u6587\u6570\u91cc\u636e\u8bf4\u5e94\u7528\u7edf\u8ba1\u5b66\u8fd9\u95e8\u8bfe\u7a0b\u6bd4\u9ad8\u7b49\u6570\u5b66\u597d\u4f7f\uff0c\u8fd8\u6709\u673a\u4f1a\u7684\u540c\u5b66\u53ef\u4ee5\u8bd5\u4e00\u4e0b\u3002</p> <p>\u5bf9\u4e8ems\uff1a \u786e\u5b9e\u6709\u4e00\u4e9b\u9879\u76ee\u8981\u6c42\u4fee\u8fc7\u4e00\u4e9b\u6570\u5b66\u8bfe\u7a0b\uff0c\u4f8b\u5982\u521a\u770b\u5230SUTD\u7684ISTD ms\u8981\u6c42\u4e24\u5b66\u671f\u5fae\u79ef\u5206\uff0c\u4e00\u5b66\u671f\u7ebf\u4ee3\u548c\u4e00\u5b66\u671f\u6982\u7edf\uff0c\u8fd9\u79cd\u65e0\u7591\u662f\u6bd4\u8f83\u4e0d\u53cb\u597d\u7684\u9879\u76ee\u4e86\u3002 \u4e5f\u6709\u6bd4\u8f83\u53cb\u597d\u7684\u9879\u76ee\uff0c\u5317\u7f8e\u4e00\u4e9b0\u57fa\u7840\u8f6c\u7801\u9879\u76ee\u53ef\u53c2\u7167OpenCSapp\uff0c\u82f1\u56fd\u7684IC\u548cUCL\u5728\u524d\u5e74\u4e5f\u5f00\u4e86\u96f6\u57fa\u7840\u8f6c\u7801\u9879\u76ee\uff0c\u4e0d\u8fc7\u51fa\u8def\u548c\u542b\u91d1\u91cf\u9700\u8981\u81ea\u5df1\u8861\u91cf\uff0c\u8fd8\u662f\u5efa\u8bae\u201c\u54a8\u8be220\u4e2a\u4eba\u201d\u51c6\u5219\u3002\u4ee3\u8868dp\u662f18\u7ea7SJTU\u82f1\u8bed\u4e13\u4e1a\uff0c4\u6bb5\u79d1\u7814\u6216\u4e92\u8054\u7f51\u5382NLP\u4ea7\u54c1\u5b9e\u4e60\uff0c\u5c11\u91cf\u9ad8\u5206\u6570\u5b66\u548c\u7f16\u7a0b\u8bfe\u7a0b\uff0c\u7ee9\u70b990+ \u2192 IC CS ms</p>"},{"location":"Other/zju_ling_cs/#_10","title":"\u7ee9\u70b9","text":"<ul> <li>\u5982\u7533ms\uff1a\u5c11\u9009\u8bfe\uff0c\u4fee\u4e2a\u8f85\u4fee\u5373\u53ef\uff0c\u7ee9\u70b9\u4fdd\u630188\u4ee5\u4e0a</li> <li>\u4fdd\u7814\u76f4\u535a\uff1a\u7ee9\u70b9\u548ctitle\u6743\u8861\u4e00\u4e0b\uff0c\u4e0d\u8fc7\u597d\u50cf\u662f\u590f\u4ee4\u8425\u548c\u63d0\u524d\u8fdb\u7ec4\u66f4\u91cd\u8981</li> <li>\u5982\u7533phd\u6216\u5de5\u4f5c\uff1a\u4e89\u53d6\u53cc\u5b66\u4f4d\u7684title\uff0c\u8fc7\u7a0b\u4e2d\u5c3d\u529b\u800c\u4e3a\uff0c\u7ee9\u70b9\u522b\u592a\u7ea0\u7ed3\uff0c\u6ce8\u91cd\u79d1\u7814/\u5b9e\u4e60</li> </ul>"},{"location":"Other/zju_ling_cs/#_11","title":"\u79d1\u7814","text":""},{"location":"Other/zju_ling_cs/#nlp_1","title":"\u5982\u4f55\u9009\u9898\uff1fNLP\u6709\u54ea\u4e9b\u65b9\u5411\u53ef\u505a\uff1f","text":"<p>\u53c2\u7167\u8fd9\u4e9b\u9876\u4f1a\u90fd\u6709\u4ec0\u4e48track\uff0c\u4e0b\u9762\u662f\u6700\u8fd1\u4e00\u671f\u6bcf\u4e2atrack\u7684best paper - Best Papers - ACL 2023 (aclweb.org) - Best Paper Awards - emnlp 2022 (balhafni.github.io) - Transactions of the Association for Computational Linguistics (transacl.org) - Announcing the NAACL 2022 Best Paper Awards! - NAACL-HLT 2022</p> <p>\u7279\u522b\u5730\uff0c\u60f3\u5230NLP\u91cc\u6bd4\u8f83\u7eaf\u8bed\u8a00\u5b66\u7684\u4e3b\u9898/\u65b9\u6cd5\u4e5f\u6709\u4e00\u4e9b\uff0c\u6709\u5982\u4e0b\u51e0\u4e2a \u4e3a\u4ec0\u4e48\u8981\u8bb2\u8fd9\u4e00\u5757\u56e0\u4e3a\u62c5\u5fc3\u4f60\u5728\u9762\u8bd5\u7684\u65f6\u5019\u4f1a\u9700\u8981\u5411\u8001\u5e08\u8bc1\u660e\u4f60\u7684\u53e6\u4e00\u90e8\u5206\u4e13\u4e1a\u77e5\u8bc6\u4e5f\u662f\u6709\u7528\u7684 \u4e00\u822c\u6b27\u6d32\u7684NLP\u4f1a\u504f\u8bed\u8a00\u5b66\u4e00\u70b9 - \u5b9e\u9a8c\u8bed\u97f3\u548c\u97f3\u7cfb\u5b66 - \u7528\u8bed\u8a00\u5b66\u77e5\u8bc6\u505a\u6570\u636e\u548c\u6570\u636e\u589e\u5f3a - AI\u4e2d\u7684\u4f26\u7406\u9053\u5fb7\u95ee\u9898 - \u7a00\u6709\u8bed\u8a00\u6316\u6398</p>"},{"location":"Other/zju_ling_cs/#_12","title":"\u5982\u4f55\u9009\u5bfc\uff1f","text":"<p>\u56fd\u5916\u5bfc\u5e08\uff1a\u5e38\u8bfb\u6bcf\u5e74\u7684\u9876\u4f1a\u6709\u610f\u601d\u8bba\u6587\uff0c\u5e76\u53c2\u7167CSRankings: Computer Science Rankings\uff0c\u5173\u6ce8\u5b66\u672f\u5708\u517b\u597d\u53f7\u540e\u5e38\u5237Twitter \u56fd\u5185\u6821\u5185\u5bfc\u5e08\uff1a\u5982\u679c\u6709\u60f3\u8be2\u95ee\u7684\u5bfc\u5e08\u540d\u5355\u53ef\u4ee5\u90ae\u4ef6\u95ee\u6211 \u9009\u5bfc\u6216\u8005\u8054\u7cfbPhD\u7684\u65f6\u5019\u5982\u679c\u63a5\u5230\u7684\u4efb\u52a1\u662f\u4e8c\u4f5c\u4e09\u4f5c\u5f80\u540e\uff0c\u5f88\u53ef\u80fd\u662f\u6253\u767d\u5de5\uff0c\u57fa\u672c\u53ef\u4ee5\u62d2\u7edd\u3002\u9664\u975e\u4f60\u8ba4\u4e3a\u4f60\u627f\u62c5\u7684\u5de5\u4f5c\u8f83\u4e3a\u91cd\u8981\uff0c\u8001\u5e08\u53ef\u4ee5\u7ed9\u4f60\u63a8\u8350\u4fe1\uff0c\u4e8c\u4f5c\u4e09\u4f5c\u7684\u4f5c\u7528\u53ef\u80fd\u6ca1\u6709\u63a8\u8350\u4fe1\u5927\u3002 \u5982\u679c\u7533\u8bf7PhD\uff0c\u63a8\u8350\u4fe1\u7684\u529b\u5ea6\uff1a\u4f60\u4e0e\u63a8\u8350\u4eba\u7684\u4ea7\u51fa\u5f88\u91cd\u8981+\u76ee\u6807PhD\u5bfc\u8ba4\u8bc6\u7684\u4eba &gt; \u4f60\u4e0e\u63a8\u8350\u4eba\u7684\u4ea7\u51fa\u5f88\u91cd\u8981+\u76ee\u6807PhD\u5bfc\u4e0d\u8ba4\u8bc6\u7684\u4eba &gt; \u5176\u5b83</p>"},{"location":"Other/zju_ling_cs/#_13","title":"\u7533\u8bf7","text":"<p>\u56e0\u4e3a\u4fdd\u7814\u548c\u627e\u5de5\u6211\u786e\u5b9e\u4e0d\u61c2\uff0c\u8fd9\u91cc\u6682\u65f6\u53ea\u5199\u7533\u8bf7\u4e86\u3002\u540e\u7eed\u6709\u8bf7\u5171\u540c\u4f5c\u8005\u6269\u5c55\u5185\u5bb9\u7684\u8ba1\u5212\uff0c\u5982\u613f\u610f\u8d21\u732e\u8bf7\u8054\u7cfb\u6211\u3002</p>"},{"location":"Other/zju_ling_cs/#check-point","title":"Check Point","text":"<p>\u5927\u4e00\u6691\u5047\u7ed3\u675f\u65f6\uff1a\u4e13\u5fc3\u5b66\u4e13\u4e1a\u8bfe \u5927\u4e8c\u6691\u5047\u7ed3\u675f\u65f6\uff1a\u8fdb\u7ec4\uff0c\u5b66\u4f1apytorch\uff0c\u8bad\u8fc7\u4e00\u4e9b\u5e38\u7528\u7684\u6a21\u578b \u5927\u4e09\u6691\u5047\u7ed3\u675f\u65f6\uff1a\u4ea7\u51fa\u4e00\u4f5c\u6216\u5171\u4e00\u8bba\u6587</p>"},{"location":"Other/zju_ling_cs/#_14","title":"\u6211\u8981\u4e0d\u8981\u627e\u4e2d\u4ecb\uff1f","text":"<p>\u4e0d\u8981\u3002 \u539f\u56e0\u4e00\uff1aCS\u7684\u5728\u7ebf\u514d\u8d39\u8d44\u6599\u8db3\u591f\u4f7f\u7528 \u539f\u56e0\u4e8c\uff1a\u4e2d\u4ecb\u7684\u4fe1\u606f\u66f4\u65b0\u901f\u5ea6\u8d76\u4e0d\u4e0aCS\u5b66\u79d1\u7684\u53d1\u5c55\u901f\u5ea6</p>"},{"location":"Other/zju_ling_cs/#_15","title":"\u6211\u7533\u8bf7\u53ef\u4ee5\u53c2\u8003\u54ea\u4e9b\u8d44\u6599\uff1f","text":"<p>\u7533\u8bf7MS - \u5317\u7f8e\u7684CS master Home - Open CS Application - \u9664\u5317\u7f8e\u5916\u7684\u5176\u5b83CS master Global CS (global-cs-application.github.io) - \u4e00\u4ea9\u4e09\u5206\u5730/\u5bc4\u6258\u5bb6\u56ed\u7b49\u8bba\u575b - CC98\u4e0a\u6bcf\u4e00\u5e74CS\u7684\u98de\u8dc3\u624b\u518c</p> <p>\u7533\u8bf7PhD - \u6b27\u7f8eNLP\u5708\u5bf9PhD\u7533\u8bf7\u7684\u5efa\u8bae https://github.com/zhijing-jin/nlp-phd-global-equality - \u4e86\u89e3\u5b66\u79d1\u4f18\u52bf\u5b66\u6821\u548c\u5bfc\u5e08 CSRankings: Computer Science Rankings - \u6ce8\u518c\u4e00\u4e2aTwitter\u8d26\u53f7\uff0c\u5f00\u59cb\u5173\u6ce8NLP\u5708\u7684PhD\u548cAP\uff0c\u5404\u79cd\u7533\u8bf7\u673a\u4f1a\u4ed6\u4eec\u90fd\u4f1a\u5c3d\u5feb\u53d1\u5e03\u7684\u3002\u6bd4\u5982\u4f60\u53ef\u4ee5\u5148\u4eceAndrew Ng\u3001Christopher Manning\u3001Geoffrey Hinton\u8fd9\u79cd\u8001\u6559\u6388\u5173\u6ce8\u8d77\uff0c\u7136\u540e\u5173\u6ce8\u4ed6\u4eec\u7684\u5173\u6ce8\u8fd9\u6837\u6765\u641e\u3002 - \u5173\u6ce8\u4e00\u4ea9\u4e09\u5206\u5730/CC98/\u4e00\u4e9b\u5fae\u4fe1\u516c\u4f17\u53f7/\u77e5\u4e4e\u7684\u62db\u751f\u4fe1\u606f</p>"},{"location":"Other/zju_ling_cs/#_16","title":"\u6295\u9012\u6691\u7814\u6ce8\u610f\u4e8b\u9879","text":"<p>\u6d41\u7a0b\u540c\u7533\u8bf7PhD \u5df2\u7ecf\u719f\u8bc6\u7684\u5bfc\u5e08\u63a8\u8350\u662f\u6700\u5feb\u7684\uff1b\u5426\u5219\u5c31\u81ea\u5df1\u6d77\u6295\uff0c\u6295\u53d1\u5e03\u8fc7\u62db\u751f\u5e7f\u544a\u6216\u4e3b\u9875\u8868\u660e\u6b63\u5728\u62db\u751f\u7684\u8001\u5e08\u662f\u6700\u5feb\u7684\u3002\u6709\u7684\u65f6\u5019\u53ef\u4ee5\u5c1d\u8bd5\u6295\u8ba4\u8bc6\u7684PhD\uff0c\u56e0\u4e3a\u6691\u7814\u671f\u95f4\u5927\u90e8\u5206\u60c5\u51b5\u8fd8\u662f\u8ddf\u7740PhD\u6253\u5de5\u3002 \u5982\u679c\u8001\u5e08\u7ed9\u4f60\u7684\u8d23\u4efb\u6bd4\u8f83\u91cd\uff0c\u4e14\u4f60\u6709\u6bd4\u8f83\u597d\u7684\u5de5\u4f5c\u73af\u5883\uff0c\u6211\u8ba4\u4e3a\u7ebf\u4e0a\u7ebf\u4e0b\u533a\u522b\u4e0d\u5927\u3002 \u60f3\u53bb\u5317\u7f8e\u5c31\u5957\u5317\u7f8e\uff0c\u6211\u89c9\u5f97\u6700\u597d\u4e0d\u8981\u627e\u8df3\u677f\uff0c\u6709\u5317\u7f8e\u7684\u7ebf\u4e0a\u6691\u7814\u4e5f\u5f88\u597d\uff0c\u53ea\u8981\u662f\u4f60\u4e00\u4f5c\uff0c\u65f6\u957f6\u4e2a\u6708\u4ee5\u4e0a\uff0c\u6bcf\u5468\u6c47\u62a5\u8fdb\u5ea6\u3002</p>"},{"location":"Other/zju_ling_cs/#_17","title":"\u6295\u9012\u5b9e\u4e60\u6ce8\u610f\u4e8b\u9879","text":"<p>\u9700\u8981\u5b9e\u4e60 iff \u4f60\u6253\u7b97\u627e\u5de5or\u8bfb\u5b8c\u7855\u58eb\u627e\u5de5\uff0c\u7533\u8bf7\u5b66\u672f\u7c7bms\u548cPhD\u7684\u8bdd\uff0c\u5b9e\u4e60\u4e0d\u5f3a\u6c42\u3002</p>"},{"location":"Other/zju_ling_cs/#-xuan-insrgithubio","title":"- \ud83c\udff3\ufe0f\u200d\ud83c\udf08 \u603b\u89c8 - \u54b8\u9c7c\u6684\u7684\u4ee3\u7801\u7a7a\u95f4 (xuan-insr.github.io) \u627e\u6691\u671f\u5b9e\u4e60\u548c\u79cb\u62db\u7684\u7ecf\u9a8c\u5e16","text":"<p>http://www-cc98-org-s.webvpn.zju.edu.cn:8001/topic/4950730</p>"},{"location":"Other/zju_ling_cs/#_18","title":"\u5173\u4e8e\u7b14\u8005&amp;\u8054\u7cfb\u7b14\u8005","text":"<p>\u7b14\u8005\u4f30\u8ba1\u662f\u4ece\u82f1\u8bed\u4e13\u4e1a\u8f6cNLP\u89c4\u5212\u6700\u4e0d\u987a\u3001\u8fdb\u5ea6\u6700\u66f2\u6298\u7684\u4e00\u4e2a\u3002\u8fd9\u4efd\u6587\u6863\u4e0d\u662f\u4ec0\u4e48\u6210\u529f\u7ecf\u9a8c\u5206\u4eab\uff0c\u6211\u5e76\u4e0d\u6210\u529f\uff0c\u53ea\u662f\u60f3\u628a\u6211\u8e29\u8fc7\u7684\u5751\u544a\u8bc9\u540e\u4eba\uff0c\u5e0c\u671b\u5c11\u6709\u4eba\u91cd\u8e48\u6211\u7684\u8986\u8f99\u3002\u6211\u89c9\u5f97\u6211\u7684\u9ad8\u4e2d\u548c\u672c\u79d1\u8fc7\u5f97\u592a\u574e\u5777\u4e86\uff0c\u771f\u8bda\u5730\u60f3\u5e2e\u52a9\u5b66\u5f1f\u5b66\u59b9\uff0c\u5e0c\u671b\u4f60\u4eec\u4e00\u5207\u987a\u5229\u3002\u8bfb\u8005\u53ef\u4ee5\u4ee5\u6211\u4f5c\u4e3a\u57fa\u51c6\uff0c\u5728\u56db\u5e74\u540e\u4e0d\u80fd\uff08\u5f53\u7136\u5982\u679c\u65e9\u505a\u89c4\u5212\uff0c\u4e00\u76f4\u5728\u52aa\u529b\uff0c\u4e5f\u4e0d\u4f1a\uff09\u6bd4\u6211\u66f4\u5dee\u3002\u6bd5\u7adf\u4e00\u6761\u8def\u8d70\u7684\u4eba\u591a\u4e86\uff0c\u540e\u4eba\u4e00\u5b9a\u662f\u8981\u8d8a\u8d70\u8d8a\u987a\u7684\u3002</p> <p>\u5982\u6709\u5efa\u8bae\u6216\u7591\u95ee\u8bf7\u901a\u8fc7\u90ae\u4ef6\u8054\u7cfb\u6211 RuoxiNing@outlook.com\u3002</p>"},{"location":"Other/zju_ling_cs/#recommended-readings","title":"Recommended Readings","text":"<ul> <li>SurviveSJTUManual</li> <li>\u56fe\u7075\u73ed\u5b66\u4e60\u6307\u5357</li> <li>how-to-succeed-in-zju-cs</li> </ul>"}]}